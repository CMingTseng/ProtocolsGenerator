[START] ./indy_array.xml
# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args0

# Run progress: 0.00% complete, ETA 00:06:00
# Fork: 1 of 1
# Warmup Iteration   1: 11.958 ns/op
# Warmup Iteration   2: 11.671 ns/op
# Warmup Iteration   3: 11.324 ns/op
# Warmup Iteration   4: 11.262 ns/op
# Warmup Iteration   5: 11.259 ns/op
# Warmup Iteration   6: 11.259 ns/op
# Warmup Iteration   7: 11.256 ns/op
# Warmup Iteration   8: 11.256 ns/op
# Warmup Iteration   9: 11.254 ns/op
# Warmup Iteration  10: 11.261 ns/op
# Warmup Iteration  11: 11.270 ns/op
# Warmup Iteration  12: 11.254 ns/op
# Warmup Iteration  13: 11.321 ns/op
# Warmup Iteration  14: 11.252 ns/op
# Warmup Iteration  15: 11.254 ns/op
# Warmup Iteration  16: 11.250 ns/op
# Warmup Iteration  17: 11.247 ns/op
# Warmup Iteration  18: 11.251 ns/op
# Warmup Iteration  19: 11.257 ns/op
# Warmup Iteration  20: 11.254 ns/op
Iteration   1: 11.248 ns/op
Iteration   2: 11.253 ns/op
Iteration   3: 11.290 ns/op
Iteration   4: 11.272 ns/op
Iteration   5: 11.248 ns/op
Iteration   6: 11.266 ns/op
Iteration   7: 11.254 ns/op
Iteration   8: 11.255 ns/op
Iteration   9: 11.255 ns/op
Iteration  10: 11.254 ns/op
Iteration  11: 11.251 ns/op
Iteration  12: 11.254 ns/op
Iteration  13: 11.455 ns/op
Iteration  14: 11.259 ns/op
Iteration  15: 11.252 ns/op
Iteration  16: 11.259 ns/op
Iteration  17: 11.253 ns/op
Iteration  18: 11.262 ns/op
Iteration  19: 11.257 ns/op
Iteration  20: 11.254 ns/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args0":
  11.268 ±(99.9%) 0.039 ns/op [Average]
  (min, avg, max) = (11.248, 11.268, 11.455), stdev = 0.045
  CI (99.9%): [11.228, 11.307] (assumes normal distribution)


# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args1

# Run progress: 11.11% complete, ETA 00:05:21
# Fork: 1 of 1
# Warmup Iteration   1: 12.244 ns/op
# Warmup Iteration   2: 11.815 ns/op
# Warmup Iteration   3: 11.408 ns/op
# Warmup Iteration   4: 11.638 ns/op
# Warmup Iteration   5: 11.401 ns/op
# Warmup Iteration   6: 11.398 ns/op
# Warmup Iteration   7: 11.405 ns/op
# Warmup Iteration   8: 11.619 ns/op
# Warmup Iteration   9: 11.403 ns/op
# Warmup Iteration  10: 11.404 ns/op
# Warmup Iteration  11: 11.401 ns/op
# Warmup Iteration  12: 11.424 ns/op
# Warmup Iteration  13: 11.405 ns/op
# Warmup Iteration  14: 11.401 ns/op
# Warmup Iteration  15: 11.409 ns/op
# Warmup Iteration  16: 11.404 ns/op
# Warmup Iteration  17: 11.415 ns/op
# Warmup Iteration  18: 11.401 ns/op
# Warmup Iteration  19: 11.404 ns/op
# Warmup Iteration  20: 11.404 ns/op
Iteration   1: 11.405 ns/op
Iteration   2: 11.430 ns/op
Iteration   3: 11.406 ns/op
Iteration   4: 11.399 ns/op
Iteration   5: 11.401 ns/op
Iteration   6: 11.402 ns/op
Iteration   7: 11.405 ns/op
Iteration   8: 11.401 ns/op
Iteration   9: 11.416 ns/op
Iteration  10: 11.403 ns/op
Iteration  11: 11.408 ns/op
Iteration  12: 11.485 ns/op
Iteration  13: 11.401 ns/op
Iteration  14: 11.401 ns/op
Iteration  15: 11.404 ns/op
Iteration  16: 11.402 ns/op
Iteration  17: 11.405 ns/op
Iteration  18: 11.401 ns/op
Iteration  19: 11.404 ns/op
Iteration  20: 11.401 ns/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args1":
  11.409 ±(99.9%) 0.017 ns/op [Average]
  (min, avg, max) = (11.399, 11.409, 11.485), stdev = 0.019
  CI (99.9%): [11.392, 11.426] (assumes normal distribution)


# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args10

# Run progress: 22.22% complete, ETA 00:04:41
# Fork: 1 of 1
# Warmup Iteration   1: 14.185 ns/op
# Warmup Iteration   2: 14.003 ns/op
# Warmup Iteration   3: 13.398 ns/op
# Warmup Iteration   4: 13.387 ns/op
# Warmup Iteration   5: 13.379 ns/op
# Warmup Iteration   6: 13.397 ns/op
# Warmup Iteration   7: 13.385 ns/op
# Warmup Iteration   8: 13.385 ns/op
# Warmup Iteration   9: 13.383 ns/op
# Warmup Iteration  10: 13.386 ns/op
# Warmup Iteration  11: 13.385 ns/op
# Warmup Iteration  12: 13.420 ns/op
# Warmup Iteration  13: 13.387 ns/op
# Warmup Iteration  14: 13.389 ns/op
# Warmup Iteration  15: 13.381 ns/op
# Warmup Iteration  16: 13.380 ns/op
# Warmup Iteration  17: 13.386 ns/op
# Warmup Iteration  18: 13.399 ns/op
# Warmup Iteration  19: 13.392 ns/op
# Warmup Iteration  20: 13.390 ns/op
Iteration   1: 13.392 ns/op
Iteration   2: 13.429 ns/op
Iteration   3: 13.392 ns/op
Iteration   4: 13.401 ns/op
Iteration   5: 13.385 ns/op
Iteration   6: 13.391 ns/op
Iteration   7: 13.389 ns/op
Iteration   8: 13.373 ns/op
Iteration   9: 13.389 ns/op
Iteration  10: 13.386 ns/op
Iteration  11: 13.384 ns/op
Iteration  12: 13.434 ns/op
Iteration  13: 13.390 ns/op
Iteration  14: 13.390 ns/op
Iteration  15: 13.387 ns/op
Iteration  16: 13.380 ns/op
Iteration  17: 13.390 ns/op
Iteration  18: 13.384 ns/op
Iteration  19: 13.431 ns/op
Iteration  20: 13.377 ns/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args10":
  13.394 ±(99.9%) 0.015 ns/op [Average]
  (min, avg, max) = (13.373, 13.394, 13.434), stdev = 0.017
  CI (99.9%): [13.379, 13.409] (assumes normal distribution)


# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args15

# Run progress: 33.33% complete, ETA 00:04:01
# Fork: 1 of 1
# Warmup Iteration   1: 16.662 ns/op
# Warmup Iteration   2: 15.249 ns/op
# Warmup Iteration   3: 14.671 ns/op
# Warmup Iteration   4: 14.675 ns/op
# Warmup Iteration   5: 15.824 ns/op
# Warmup Iteration   6: 14.678 ns/op
# Warmup Iteration   7: 14.780 ns/op
# Warmup Iteration   8: 14.667 ns/op
# Warmup Iteration   9: 15.853 ns/op
# Warmup Iteration  10: 14.671 ns/op
# Warmup Iteration  11: 14.685 ns/op
# Warmup Iteration  12: 14.717 ns/op
# Warmup Iteration  13: 14.672 ns/op
# Warmup Iteration  14: 14.671 ns/op
# Warmup Iteration  15: 15.330 ns/op
# Warmup Iteration  16: 19.032 ns/op
# Warmup Iteration  17: 14.668 ns/op
# Warmup Iteration  18: 14.679 ns/op
# Warmup Iteration  19: 14.671 ns/op
# Warmup Iteration  20: 14.669 ns/op
Iteration   1: 15.870 ns/op
Iteration   2: 15.846 ns/op
Iteration   3: 14.678 ns/op
Iteration   4: 14.674 ns/op
Iteration   5: 14.685 ns/op
Iteration   6: 14.669 ns/op
Iteration   7: 14.670 ns/op
Iteration   8: 14.678 ns/op
Iteration   9: 14.672 ns/op
Iteration  10: 14.663 ns/op
Iteration  11: 20.303 ns/op
Iteration  12: 14.701 ns/op
Iteration  13: 14.675 ns/op
Iteration  14: 14.672 ns/op
Iteration  15: 14.674 ns/op
Iteration  16: 15.474 ns/op
Iteration  17: 14.674 ns/op
Iteration  18: 14.671 ns/op
Iteration  19: 14.684 ns/op
Iteration  20: 14.669 ns/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args15":
  15.115 ±(99.9%) 1.113 ns/op [Average]
  (min, avg, max) = (14.663, 15.115, 20.303), stdev = 1.282
  CI (99.9%): [14.002, 16.229] (assumes normal distribution)


# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args2

# Run progress: 44.44% complete, ETA 00:03:21
# Fork: 1 of 1
# Warmup Iteration   1: 12.100 ns/op
# Warmup Iteration   2: 11.901 ns/op
# Warmup Iteration   3: 11.787 ns/op
# Warmup Iteration   4: 11.780 ns/op
# Warmup Iteration   5: 11.782 ns/op
# Warmup Iteration   6: 11.784 ns/op
# Warmup Iteration   7: 11.781 ns/op
# Warmup Iteration   8: 11.779 ns/op
# Warmup Iteration   9: 11.781 ns/op
# Warmup Iteration  10: 11.779 ns/op
# Warmup Iteration  11: 12.010 ns/op
# Warmup Iteration  12: 11.836 ns/op
# Warmup Iteration  13: 11.783 ns/op
# Warmup Iteration  14: 11.784 ns/op
# Warmup Iteration  15: 11.776 ns/op
# Warmup Iteration  16: 11.815 ns/op
# Warmup Iteration  17: 11.584 ns/op
# Warmup Iteration  18: 11.589 ns/op
# Warmup Iteration  19: 11.582 ns/op
# Warmup Iteration  20: 11.658 ns/op
Iteration   1: 11.580 ns/op
Iteration   2: 11.637 ns/op
Iteration   3: 11.580 ns/op
Iteration   4: 11.581 ns/op
Iteration   5: 11.578 ns/op
Iteration   6: 11.587 ns/op
Iteration   7: 11.576 ns/op
Iteration   8: 11.580 ns/op
Iteration   9: 11.605 ns/op
Iteration  10: 11.590 ns/op
Iteration  11: 11.581 ns/op
Iteration  12: 11.663 ns/op
Iteration  13: 11.582 ns/op
Iteration  14: 11.584 ns/op
Iteration  15: 11.582 ns/op
Iteration  16: 11.583 ns/op
Iteration  17: 11.585 ns/op
Iteration  18: 11.583 ns/op
Iteration  19: 11.590 ns/op
Iteration  20: 11.586 ns/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args2":
  11.591 ±(99.9%) 0.019 ns/op [Average]
  (min, avg, max) = (11.576, 11.591, 11.663), stdev = 0.022
  CI (99.9%): [11.572, 11.609] (assumes normal distribution)


# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args20

# Run progress: 55.56% complete, ETA 00:02:40
# Fork: 1 of 1
# Warmup Iteration   1: 18.587 ns/op
# Warmup Iteration   2: 18.021 ns/op
# Warmup Iteration   3: 17.685 ns/op
# Warmup Iteration   4: 17.689 ns/op
# Warmup Iteration   5: 17.706 ns/op
# Warmup Iteration   6: 17.687 ns/op
# Warmup Iteration   7: 17.688 ns/op
# Warmup Iteration   8: 17.687 ns/op
# Warmup Iteration   9: 17.700 ns/op
# Warmup Iteration  10: 18.051 ns/op
# Warmup Iteration  11: 17.714 ns/op
# Warmup Iteration  12: 18.209 ns/op
# Warmup Iteration  13: 17.691 ns/op
# Warmup Iteration  14: 18.028 ns/op
# Warmup Iteration  15: 17.711 ns/op
# Warmup Iteration  16: 17.719 ns/op
# Warmup Iteration  17: 15.725 ns/op
# Warmup Iteration  18: 16.156 ns/op
# Warmup Iteration  19: 15.743 ns/op
# Warmup Iteration  20: 16.332 ns/op
Iteration   1: 15.989 ns/op
Iteration   2: 16.124 ns/op
Iteration   3: 15.772 ns/op
Iteration   4: 15.758 ns/op
Iteration   5: 15.774 ns/op
Iteration   6: 16.043 ns/op
Iteration   7: 15.771 ns/op
Iteration   8: 16.289 ns/op
Iteration   9: 15.787 ns/op
Iteration  10: 16.145 ns/op
Iteration  11: 15.876 ns/op
Iteration  12: 15.810 ns/op
Iteration  13: 15.815 ns/op
Iteration  14: 16.037 ns/op
Iteration  15: 15.826 ns/op
Iteration  16: 15.834 ns/op
Iteration  17: 15.814 ns/op
Iteration  18: 16.030 ns/op
Iteration  19: 15.699 ns/op
Iteration  20: 15.830 ns/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args20":
  15.901 ±(99.9%) 0.139 ns/op [Average]
  (min, avg, max) = (15.699, 15.901, 16.289), stdev = 0.160
  CI (99.9%): [15.762, 16.040] (assumes normal distribution)


# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args3

# Run progress: 66.67% complete, ETA 00:02:00
# Fork: 1 of 1
# Warmup Iteration   1: 12.255 ns/op
# Warmup Iteration   2: 11.888 ns/op
# Warmup Iteration   3: 12.310 ns/op
# Warmup Iteration   4: 12.315 ns/op
# Warmup Iteration   5: 12.312 ns/op
# Warmup Iteration   6: 12.327 ns/op
# Warmup Iteration   7: 12.322 ns/op
# Warmup Iteration   8: 12.330 ns/op
# Warmup Iteration   9: 12.319 ns/op
# Warmup Iteration  10: 12.328 ns/op
# Warmup Iteration  11: 12.423 ns/op
# Warmup Iteration  12: 12.328 ns/op
# Warmup Iteration  13: 12.318 ns/op
# Warmup Iteration  14: 12.326 ns/op
# Warmup Iteration  15: 12.328 ns/op
# Warmup Iteration  16: 12.334 ns/op
# Warmup Iteration  17: 11.671 ns/op
# Warmup Iteration  18: 11.670 ns/op
# Warmup Iteration  19: 11.669 ns/op
# Warmup Iteration  20: 11.670 ns/op
Iteration   1: 11.806 ns/op
Iteration   2: 11.674 ns/op
Iteration   3: 11.668 ns/op
Iteration   4: 11.672 ns/op
Iteration   5: 11.683 ns/op
Iteration   6: 11.669 ns/op
Iteration   7: 11.671 ns/op
Iteration   8: 11.668 ns/op
Iteration   9: 11.668 ns/op
Iteration  10: 11.670 ns/op
Iteration  11: 11.755 ns/op
Iteration  12: 11.689 ns/op
Iteration  13: 11.673 ns/op
Iteration  14: 11.670 ns/op
Iteration  15: 11.669 ns/op
Iteration  16: 11.671 ns/op
Iteration  17: 11.671 ns/op
Iteration  18: 11.672 ns/op
Iteration  19: 11.669 ns/op
Iteration  20: 11.684 ns/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args3":
  11.683 ±(99.9%) 0.030 ns/op [Average]
  (min, avg, max) = (11.668, 11.683, 11.806), stdev = 0.035
  CI (99.9%): [11.653, 11.714] (assumes normal distribution)


# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args4

# Run progress: 77.78% complete, ETA 00:01:20
# Fork: 1 of 1
# Warmup Iteration   1: 12.461 ns/op
# Warmup Iteration   2: 12.683 ns/op
# Warmup Iteration   3: 13.016 ns/op
# Warmup Iteration   4: 11.766 ns/op
# Warmup Iteration   5: 11.770 ns/op
# Warmup Iteration   6: 12.739 ns/op
# Warmup Iteration   7: 11.768 ns/op
# Warmup Iteration   8: 12.840 ns/op
# Warmup Iteration   9: 13.898 ns/op
# Warmup Iteration  10: 12.478 ns/op
# Warmup Iteration  11: 13.071 ns/op
# Warmup Iteration  12: 11.768 ns/op
# Warmup Iteration  13: 11.777 ns/op
# Warmup Iteration  14: 12.711 ns/op
# Warmup Iteration  15: 12.985 ns/op
# Warmup Iteration  16: 11.772 ns/op
# Warmup Iteration  17: 11.772 ns/op
# Warmup Iteration  18: 11.768 ns/op
# Warmup Iteration  19: 11.771 ns/op
# Warmup Iteration  20: 12.708 ns/op
Iteration   1: 13.051 ns/op
Iteration   2: 12.502 ns/op
Iteration   3: 14.198 ns/op
Iteration   4: 11.772 ns/op
Iteration   5: 12.846 ns/op
Iteration   6: 11.769 ns/op
Iteration   7: 11.770 ns/op
Iteration   8: 11.780 ns/op
Iteration   9: 11.775 ns/op
Iteration  10: 11.769 ns/op
Iteration  11: 11.896 ns/op
Iteration  12: 11.772 ns/op
Iteration  13: 11.772 ns/op
Iteration  14: 11.774 ns/op
Iteration  15: 11.772 ns/op
Iteration  16: 11.793 ns/op
Iteration  17: 11.771 ns/op
Iteration  18: 11.763 ns/op
Iteration  19: 11.774 ns/op
Iteration  20: 11.771 ns/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args4":
  12.055 ±(99.9%) 0.550 ns/op [Average]
  (min, avg, max) = (11.763, 12.055, 14.198), stdev = 0.634
  CI (99.9%): [11.504, 12.605] (assumes normal distribution)


# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args5

# Run progress: 88.89% complete, ETA 00:00:40
# Fork: 1 of 1
# Warmup Iteration   1: 13.799 ns/op
# Warmup Iteration   2: 12.790 ns/op
# Warmup Iteration   3: 11.865 ns/op
# Warmup Iteration   4: 11.877 ns/op
# Warmup Iteration   5: 11.868 ns/op
# Warmup Iteration   6: 11.861 ns/op
# Warmup Iteration   7: 11.858 ns/op
# Warmup Iteration   8: 11.862 ns/op
# Warmup Iteration   9: 11.866 ns/op
# Warmup Iteration  10: 16.235 ns/op
# Warmup Iteration  11: 12.909 ns/op
# Warmup Iteration  12: 13.067 ns/op
# Warmup Iteration  13: 11.861 ns/op
# Warmup Iteration  14: 13.560 ns/op
# Warmup Iteration  15: 11.859 ns/op
# Warmup Iteration  16: 11.857 ns/op
# Warmup Iteration  17: 11.866 ns/op
# Warmup Iteration  18: 11.860 ns/op
# Warmup Iteration  19: 11.863 ns/op
# Warmup Iteration  20: 11.855 ns/op
Iteration   1: 12.346 ns/op
Iteration   2: 12.098 ns/op
Iteration   3: 11.864 ns/op
Iteration   4: 11.864 ns/op
Iteration   5: 11.862 ns/op
Iteration   6: 11.862 ns/op
Iteration   7: 11.869 ns/op
Iteration   8: 11.869 ns/op
Iteration   9: 11.865 ns/op
Iteration  10: 11.862 ns/op
Iteration  11: 12.902 ns/op
Iteration  12: 12.119 ns/op
Iteration  13: 11.860 ns/op
Iteration  14: 11.861 ns/op
Iteration  15: 11.860 ns/op
Iteration  16: 11.862 ns/op
Iteration  17: 11.859 ns/op
Iteration  18: 16.244 ns/op
Iteration  19: 11.865 ns/op
Iteration  20: 11.866 ns/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args5":
  12.183 ±(99.9%) 0.859 ns/op [Average]
  (min, avg, max) = (11.859, 12.183, 16.244), stdev = 0.989
  CI (99.9%): [11.324, 13.042] (assumes normal distribution)


# Run complete. Total time: 00:06:02

Benchmark         Mode  Cnt   Score   Error  Units
SingleRun.args0   avgt   20  11.268 ± 0.039  ns/op
SingleRun.args1   avgt   20  11.409 ± 0.017  ns/op
SingleRun.args10  avgt   20  13.394 ± 0.015  ns/op
SingleRun.args15  avgt   20  15.115 ± 1.113  ns/op
SingleRun.args2   avgt   20  11.591 ± 0.019  ns/op
SingleRun.args20  avgt   20  15.901 ± 0.139  ns/op
SingleRun.args3   avgt   20  11.683 ± 0.030  ns/op
SingleRun.args4   avgt   20  12.055 ± 0.550  ns/op
SingleRun.args5   avgt   20  12.183 ± 0.859  ns/op
# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.MultiTarget.test

# Run progress: 0.00% complete, ETA 00:00:40
# Fork: 1 of 1
# Warmup Iteration   1: 51031.439 ns/op
# Warmup Iteration   2: 48816.293 ns/op
# Warmup Iteration   3: 48721.930 ns/op
# Warmup Iteration   4: 48753.745 ns/op
# Warmup Iteration   5: 48748.321 ns/op
# Warmup Iteration   6: 48994.592 ns/op
# Warmup Iteration   7: 51322.337 ns/op
# Warmup Iteration   8: 51281.329 ns/op
# Warmup Iteration   9: 51323.389 ns/op
# Warmup Iteration  10: 51380.475 ns/op
# Warmup Iteration  11: 51271.590 ns/op
# Warmup Iteration  12: 51310.877 ns/op
# Warmup Iteration  13: 51318.613 ns/op
# Warmup Iteration  14: 51281.494 ns/op
# Warmup Iteration  15: 51246.463 ns/op
# Warmup Iteration  16: 51281.782 ns/op
# Warmup Iteration  17: 51301.263 ns/op
# Warmup Iteration  18: 51218.059 ns/op
# Warmup Iteration  19: 51236.135 ns/op
# Warmup Iteration  20: 51478.446 ns/op
Iteration   1: 51209.971 ns/op
Iteration   2: 51202.338 ns/op
Iteration   3: 51099.383 ns/op
Iteration   4: 51528.601 ns/op
Iteration   5: 51245.202 ns/op
Iteration   6: 51203.785 ns/op
Iteration   7: 51229.305 ns/op
Iteration   8: 51349.260 ns/op
Iteration   9: 51220.445 ns/op
Iteration  10: 51471.708 ns/op
Iteration  11: 51205.246 ns/op
Iteration  12: 51272.773 ns/op
Iteration  13: 51307.498 ns/op
Iteration  14: 51312.904 ns/op
Iteration  15: 51250.350 ns/op
Iteration  16: 51210.920 ns/op
Iteration  17: 51210.773 ns/op
Iteration  18: 51228.002 ns/op
Iteration  19: 51200.157 ns/op
Iteration  20: 51393.093 ns/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.MultiTarget.test":
  51267.586 ±(99.9%) 88.366 ns/op [Average]
  (min, avg, max) = (51099.383, 51267.586, 51528.601), stdev = 101.762
  CI (99.9%): [51179.220, 51355.951] (assumes normal distribution)


# Run complete. Total time: 00:00:40

Benchmark         Mode  Cnt      Score    Error  Units
MultiTarget.test  avgt   20  51267.586 ± 88.366  ns/op
# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testExplicit10

# Run progress: 0.00% complete, ETA 00:06:40
# Fork: 1 of 1
# Warmup Iteration   1: 0.515 us/op
# Warmup Iteration   2: 0.478 us/op
# Warmup Iteration   3: 0.479 us/op
# Warmup Iteration   4: 0.466 us/op
# Warmup Iteration   5: 0.470 us/op
# Warmup Iteration   6: 0.483 us/op
# Warmup Iteration   7: 0.465 us/op
# Warmup Iteration   8: 0.466 us/op
# Warmup Iteration   9: 0.465 us/op
# Warmup Iteration  10: 0.471 us/op
# Warmup Iteration  11: 0.466 us/op
# Warmup Iteration  12: 0.467 us/op
# Warmup Iteration  13: 0.465 us/op
# Warmup Iteration  14: 0.465 us/op
# Warmup Iteration  15: 0.466 us/op
# Warmup Iteration  16: 0.468 us/op
# Warmup Iteration  17: 0.465 us/op
# Warmup Iteration  18: 0.466 us/op
# Warmup Iteration  19: 0.466 us/op
# Warmup Iteration  20: 0.472 us/op
Iteration   1: 0.470 us/op
Iteration   2: 0.465 us/op
Iteration   3: 0.466 us/op
Iteration   4: 0.466 us/op
Iteration   5: 0.467 us/op
Iteration   6: 0.467 us/op
Iteration   7: 0.467 us/op
Iteration   8: 0.466 us/op
Iteration   9: 0.467 us/op
Iteration  10: 0.470 us/op
Iteration  11: 0.467 us/op
Iteration  12: 0.467 us/op
Iteration  13: 0.466 us/op
Iteration  14: 0.467 us/op
Iteration  15: 0.466 us/op
Iteration  16: 0.467 us/op
Iteration  17: 0.467 us/op
Iteration  18: 0.467 us/op
Iteration  19: 0.469 us/op
Iteration  20: 0.469 us/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testExplicit10":
  0.467 ±(99.9%) 0.001 us/op [Average]
  (min, avg, max) = (0.465, 0.467, 0.470), stdev = 0.001
  CI (99.9%): [0.466, 0.468] (assumes normal distribution)


# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testExplicit100

# Run progress: 10.00% complete, ETA 00:06:01
# Fork: 1 of 1
# Warmup Iteration   1: 8.580 us/op
# Warmup Iteration   2: 8.039 us/op
# Warmup Iteration   3: 8.085 us/op
# Warmup Iteration   4: 7.948 us/op
# Warmup Iteration   5: 8.173 us/op
# Warmup Iteration   6: 7.862 us/op
# Warmup Iteration   7: 8.005 us/op
# Warmup Iteration   8: 7.876 us/op
# Warmup Iteration   9: 7.862 us/op
# Warmup Iteration  10: 7.902 us/op
# Warmup Iteration  11: 7.876 us/op
# Warmup Iteration  12: 7.866 us/op
# Warmup Iteration  13: 7.861 us/op
# Warmup Iteration  14: 7.877 us/op
# Warmup Iteration  15: 7.871 us/op
# Warmup Iteration  16: 7.876 us/op
# Warmup Iteration  17: 7.871 us/op
# Warmup Iteration  18: 7.872 us/op
# Warmup Iteration  19: 7.898 us/op
# Warmup Iteration  20: 8.006 us/op
Iteration   1: 7.907 us/op
Iteration   2: 7.929 us/op
Iteration   3: 7.877 us/op
Iteration   4: 7.888 us/op
Iteration   5: 7.894 us/op
Iteration   6: 7.928 us/op
Iteration   7: 7.883 us/op
Iteration   8: 7.909 us/op
Iteration   9: 7.894 us/op
Iteration  10: 7.962 us/op
Iteration  11: 7.888 us/op
Iteration  12: 7.894 us/op
Iteration  13: 7.896 us/op
Iteration  14: 7.891 us/op
Iteration  15: 7.941 us/op
Iteration  16: 7.890 us/op
Iteration  17: 7.905 us/op
Iteration  18: 7.935 us/op
Iteration  19: 7.938 us/op
Iteration  20: 7.983 us/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testExplicit100":
  7.912 ±(99.9%) 0.025 us/op [Average]
  (min, avg, max) = (7.877, 7.912, 7.983), stdev = 0.029
  CI (99.9%): [7.887, 7.936] (assumes normal distribution)


# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testExplicit1000

# Run progress: 20.00% complete, ETA 00:05:21
# Fork: 1 of 1
# Warmup Iteration   1: 114.851 us/op
# Warmup Iteration   2: 108.732 us/op
# Warmup Iteration   3: 108.271 us/op
# Warmup Iteration   4: 108.829 us/op
# Warmup Iteration   5: 108.932 us/op
# Warmup Iteration   6: 107.345 us/op
# Warmup Iteration   7: 107.137 us/op
# Warmup Iteration   8: 107.257 us/op
# Warmup Iteration   9: 108.452 us/op
# Warmup Iteration  10: 111.376 us/op
# Warmup Iteration  11: 109.228 us/op
# Warmup Iteration  12: 107.049 us/op
# Warmup Iteration  13: 107.366 us/op
# Warmup Iteration  14: 107.279 us/op
# Warmup Iteration  15: 108.617 us/op
# Warmup Iteration  16: 106.988 us/op
# Warmup Iteration  17: 107.189 us/op
# Warmup Iteration  18: 107.704 us/op
# Warmup Iteration  19: 107.925 us/op
# Warmup Iteration  20: 107.347 us/op
Iteration   1: 107.209 us/op
Iteration   2: 107.255 us/op
Iteration   3: 107.765 us/op
Iteration   4: 112.789 us/op
Iteration   5: 107.173 us/op
Iteration   6: 107.304 us/op
Iteration   7: 107.544 us/op
Iteration   8: 107.277 us/op
Iteration   9: 108.013 us/op
Iteration  10: 107.418 us/op
Iteration  11: 107.140 us/op
Iteration  12: 107.515 us/op
Iteration  13: 107.587 us/op
Iteration  14: 107.482 us/op
Iteration  15: 107.579 us/op
Iteration  16: 108.390 us/op
Iteration  17: 108.019 us/op
Iteration  18: 107.572 us/op
Iteration  19: 108.218 us/op
Iteration  20: 107.718 us/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testExplicit1000":
  107.848 ±(99.9%) 1.054 us/op [Average]
  (min, avg, max) = (107.140, 107.848, 112.789), stdev = 1.214
  CI (99.9%): [106.794, 108.902] (assumes normal distribution)


# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testExplicit10000

# Run progress: 30.00% complete, ETA 00:04:41
# Fork: 1 of 1
# Warmup Iteration   1: 1420.778 us/op
# Warmup Iteration   2: 1355.891 us/op
# Warmup Iteration   3: 1321.183 us/op
# Warmup Iteration   4: 1354.508 us/op
# Warmup Iteration   5: 1324.271 us/op
# Warmup Iteration   6: 1321.348 us/op
# Warmup Iteration   7: 1321.073 us/op
# Warmup Iteration   8: 1319.501 us/op
# Warmup Iteration   9: 1333.308 us/op
# Warmup Iteration  10: 1321.814 us/op
# Warmup Iteration  11: 1331.120 us/op
# Warmup Iteration  12: 1318.961 us/op
# Warmup Iteration  13: 1324.535 us/op
# Warmup Iteration  14: 1319.358 us/op
# Warmup Iteration  15: 1321.038 us/op
# Warmup Iteration  16: 1326.258 us/op
# Warmup Iteration  17: 1322.354 us/op
# Warmup Iteration  18: 1322.456 us/op
# Warmup Iteration  19: 1346.116 us/op
# Warmup Iteration  20: 1319.442 us/op
Iteration   1: 1324.284 us/op
Iteration   2: 1474.347 us/op
Iteration   3: 1425.945 us/op
Iteration   4: 1484.135 us/op
Iteration   5: 1485.625 us/op
Iteration   6: 1470.285 us/op
Iteration   7: 1340.401 us/op
Iteration   8: 1324.159 us/op
Iteration   9: 1328.193 us/op
Iteration  10: 1324.885 us/op
Iteration  11: 1324.498 us/op
Iteration  12: 1333.184 us/op
Iteration  13: 1324.244 us/op
Iteration  14: 1325.955 us/op
Iteration  15: 1327.072 us/op
Iteration  16: 1325.998 us/op
Iteration  17: 1336.799 us/op
Iteration  18: 1321.241 us/op
Iteration  19: 1342.963 us/op
Iteration  20: 1325.443 us/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testExplicit10000":
  1363.483 ±(99.9%) 54.886 us/op [Average]
  (min, avg, max) = (1321.241, 1363.483, 1485.625), stdev = 63.207
  CI (99.9%): [1308.597, 1418.369] (assumes normal distribution)


# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testExplicit100000

# Run progress: 40.00% complete, ETA 00:04:01
# Fork: 1 of 1
# Warmup Iteration   1: 17566.939 us/op
# Warmup Iteration   2: 16676.119 us/op
# Warmup Iteration   3: 16334.794 us/op
# Warmup Iteration   4: 16783.558 us/op
# Warmup Iteration   5: 16250.601 us/op
# Warmup Iteration   6: 16280.872 us/op
# Warmup Iteration   7: 16447.714 us/op
# Warmup Iteration   8: 16349.395 us/op
# Warmup Iteration   9: 16389.621 us/op
# Warmup Iteration  10: 16247.762 us/op
# Warmup Iteration  11: 16280.191 us/op
# Warmup Iteration  12: 16343.287 us/op
# Warmup Iteration  13: 16272.645 us/op
# Warmup Iteration  14: 16317.065 us/op
# Warmup Iteration  15: 16253.684 us/op
# Warmup Iteration  16: 16386.077 us/op
# Warmup Iteration  17: 16262.678 us/op
# Warmup Iteration  18: 16276.840 us/op
# Warmup Iteration  19: 16416.426 us/op
# Warmup Iteration  20: 16385.020 us/op
Iteration   1: 16254.521 us/op
Iteration   2: 16387.004 us/op
Iteration   3: 16335.857 us/op
Iteration   4: 16247.852 us/op
Iteration   5: 16270.075 us/op
Iteration   6: 16278.416 us/op
Iteration   7: 16303.984 us/op
Iteration   8: 16319.035 us/op
Iteration   9: 16318.839 us/op
Iteration  10: 16316.443 us/op
Iteration  11: 16285.485 us/op
Iteration  12: 16250.374 us/op
Iteration  13: 16329.499 us/op
Iteration  14: 16316.901 us/op
Iteration  15: 16343.619 us/op
Iteration  16: 16937.130 us/op
Iteration  17: 16295.683 us/op
Iteration  18: 16510.223 us/op
Iteration  19: 16329.982 us/op
Iteration  20: 16298.084 us/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testExplicit100000":
  16346.450 ±(99.9%) 130.578 us/op [Average]
  (min, avg, max) = (16247.852, 16346.450, 16937.130), stdev = 150.374
  CI (99.9%): [16215.872, 16477.029] (assumes normal distribution)


# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testImplicit10

# Run progress: 50.00% complete, ETA 00:03:21
# Fork: 1 of 1
# Warmup Iteration   1: 0.666 us/op
# Warmup Iteration   2: 0.605 us/op
# Warmup Iteration   3: 0.610 us/op
# Warmup Iteration   4: 0.614 us/op
# Warmup Iteration   5: 0.665 us/op
# Warmup Iteration   6: 0.587 us/op
# Warmup Iteration   7: 0.589 us/op
# Warmup Iteration   8: 0.591 us/op
# Warmup Iteration   9: 0.589 us/op
# Warmup Iteration  10: 0.589 us/op
# Warmup Iteration  11: 0.588 us/op
# Warmup Iteration  12: 0.587 us/op
# Warmup Iteration  13: 0.588 us/op
# Warmup Iteration  14: 0.589 us/op
# Warmup Iteration  15: 0.588 us/op
# Warmup Iteration  16: 0.588 us/op
# Warmup Iteration  17: 0.591 us/op
# Warmup Iteration  18: 0.594 us/op
# Warmup Iteration  19: 0.589 us/op
# Warmup Iteration  20: 0.589 us/op
Iteration   1: 0.588 us/op
Iteration   2: 0.590 us/op
Iteration   3: 0.590 us/op
Iteration   4: 0.589 us/op
Iteration   5: 0.592 us/op
Iteration   6: 0.589 us/op
Iteration   7: 0.590 us/op
Iteration   8: 0.597 us/op
Iteration   9: 0.591 us/op
Iteration  10: 0.590 us/op
Iteration  11: 0.601 us/op
Iteration  12: 0.591 us/op
Iteration  13: 0.593 us/op
Iteration  14: 0.593 us/op
Iteration  15: 0.595 us/op
Iteration  16: 0.594 us/op
Iteration  17: 0.593 us/op
Iteration  18: 0.597 us/op
Iteration  19: 0.593 us/op
Iteration  20: 0.593 us/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testImplicit10":
  0.592 ±(99.9%) 0.003 us/op [Average]
  (min, avg, max) = (0.588, 0.592, 0.601), stdev = 0.003
  CI (99.9%): [0.590, 0.595] (assumes normal distribution)


# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testImplicit100

# Run progress: 60.00% complete, ETA 00:02:41
# Fork: 1 of 1
# Warmup Iteration   1: 10.845 us/op
# Warmup Iteration   2: 10.155 us/op
# Warmup Iteration   3: 10.197 us/op
# Warmup Iteration   4: 9.928 us/op
# Warmup Iteration   5: 9.996 us/op
# Warmup Iteration   6: 10.313 us/op
# Warmup Iteration   7: 9.911 us/op
# Warmup Iteration   8: 9.964 us/op
# Warmup Iteration   9: 9.911 us/op
# Warmup Iteration  10: 9.928 us/op
# Warmup Iteration  11: 9.901 us/op
# Warmup Iteration  12: 9.921 us/op
# Warmup Iteration  13: 9.919 us/op
# Warmup Iteration  14: 9.911 us/op
# Warmup Iteration  15: 9.919 us/op
# Warmup Iteration  16: 9.917 us/op
# Warmup Iteration  17: 10.007 us/op
# Warmup Iteration  18: 10.059 us/op
# Warmup Iteration  19: 10.029 us/op
# Warmup Iteration  20: 10.000 us/op
Iteration   1: 10.021 us/op
Iteration   2: 10.022 us/op
Iteration   3: 10.036 us/op
Iteration   4: 10.621 us/op
Iteration   5: 10.136 us/op
Iteration   6: 10.046 us/op
Iteration   7: 11.292 us/op
Iteration   8: 10.157 us/op
Iteration   9: 10.040 us/op
Iteration  10: 10.032 us/op
Iteration  11: 10.061 us/op
Iteration  12: 10.308 us/op
Iteration  13: 11.678 us/op
Iteration  14: 11.064 us/op
Iteration  15: 10.640 us/op
Iteration  16: 10.033 us/op
Iteration  17: 10.363 us/op
Iteration  18: 10.437 us/op
Iteration  19: 10.756 us/op
Iteration  20: 10.947 us/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testImplicit100":
  10.435 ±(99.9%) 0.426 us/op [Average]
  (min, avg, max) = (10.021, 10.435, 11.678), stdev = 0.491
  CI (99.9%): [10.008, 10.861] (assumes normal distribution)


# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testImplicit1000

# Run progress: 70.00% complete, ETA 00:02:00
# Fork: 1 of 1
# Warmup Iteration   1: 139.282 us/op
# Warmup Iteration   2: 131.277 us/op
# Warmup Iteration   3: 131.729 us/op
# Warmup Iteration   4: 129.333 us/op
# Warmup Iteration   5: 132.576 us/op
# Warmup Iteration   6: 130.672 us/op
# Warmup Iteration   7: 129.300 us/op
# Warmup Iteration   8: 129.766 us/op
# Warmup Iteration   9: 128.732 us/op
# Warmup Iteration  10: 128.903 us/op
# Warmup Iteration  11: 129.137 us/op
# Warmup Iteration  12: 129.143 us/op
# Warmup Iteration  13: 128.893 us/op
# Warmup Iteration  14: 129.189 us/op
# Warmup Iteration  15: 128.847 us/op
# Warmup Iteration  16: 128.747 us/op
# Warmup Iteration  17: 128.611 us/op
# Warmup Iteration  18: 129.219 us/op
# Warmup Iteration  19: 128.578 us/op
# Warmup Iteration  20: 128.350 us/op
Iteration   1: 128.668 us/op
Iteration   2: 128.494 us/op
Iteration   3: 128.471 us/op
Iteration   4: 128.522 us/op
Iteration   5: 128.596 us/op
Iteration   6: 128.775 us/op
Iteration   7: 128.313 us/op
Iteration   8: 128.968 us/op
Iteration   9: 128.492 us/op
Iteration  10: 129.526 us/op
Iteration  11: 128.653 us/op
Iteration  12: 129.422 us/op
Iteration  13: 128.668 us/op
Iteration  14: 128.684 us/op
Iteration  15: 128.841 us/op
Iteration  16: 128.825 us/op
Iteration  17: 129.339 us/op
Iteration  18: 129.331 us/op
Iteration  19: 129.057 us/op
Iteration  20: 129.348 us/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testImplicit1000":
  128.850 ±(99.9%) 0.319 us/op [Average]
  (min, avg, max) = (128.313, 128.850, 129.526), stdev = 0.367
  CI (99.9%): [128.531, 129.168] (assumes normal distribution)


# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testImplicit10000

# Run progress: 80.00% complete, ETA 00:01:20
# Fork: 1 of 1
# Warmup Iteration   1: 1640.071 us/op
# Warmup Iteration   2: 1546.276 us/op
# Warmup Iteration   3: 1550.477 us/op
# Warmup Iteration   4: 1540.209 us/op
# Warmup Iteration   5: 1565.587 us/op
# Warmup Iteration   6: 1525.030 us/op
# Warmup Iteration   7: 1532.535 us/op
# Warmup Iteration   8: 1528.124 us/op
# Warmup Iteration   9: 1519.442 us/op
# Warmup Iteration  10: 1520.008 us/op
# Warmup Iteration  11: 1520.415 us/op
# Warmup Iteration  12: 1518.781 us/op
# Warmup Iteration  13: 1517.221 us/op
# Warmup Iteration  14: 1520.973 us/op
# Warmup Iteration  15: 1522.003 us/op
# Warmup Iteration  16: 1520.198 us/op
# Warmup Iteration  17: 1521.919 us/op
# Warmup Iteration  18: 1519.369 us/op
# Warmup Iteration  19: 1527.114 us/op
# Warmup Iteration  20: 1520.124 us/op
Iteration   1: 1520.748 us/op
Iteration   2: 1518.909 us/op
Iteration   3: 1521.284 us/op
Iteration   4: 1534.825 us/op
Iteration   5: 1520.314 us/op
Iteration   6: 1520.726 us/op
Iteration   7: 1523.784 us/op
Iteration   8: 1517.927 us/op
Iteration   9: 1519.412 us/op
Iteration  10: 1521.671 us/op
Iteration  11: 1530.226 us/op
Iteration  12: 1519.652 us/op
Iteration  13: 1539.426 us/op
Iteration  14: 1523.819 us/op
Iteration  15: 1529.838 us/op
Iteration  16: 1553.449 us/op
Iteration  17: 1532.774 us/op
Iteration  18: 1528.547 us/op
Iteration  19: 1535.147 us/op
Iteration  20: 1533.779 us/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testImplicit10000":
  1527.313 ±(99.9%) 7.827 us/op [Average]
  (min, avg, max) = (1517.927, 1527.313, 1553.449), stdev = 9.014
  CI (99.9%): [1519.485, 1535.140] (assumes normal distribution)


# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testImplicit100000

# Run progress: 90.00% complete, ETA 00:00:40
# Fork: 1 of 1
# Warmup Iteration   1: 19625.112 us/op
# Warmup Iteration   2: 18271.980 us/op
# Warmup Iteration   3: 18267.400 us/op
# Warmup Iteration   4: 18268.717 us/op
# Warmup Iteration   5: 18373.176 us/op
# Warmup Iteration   6: 18044.523 us/op
# Warmup Iteration   7: 18064.878 us/op
# Warmup Iteration   8: 18050.533 us/op
# Warmup Iteration   9: 18030.523 us/op
# Warmup Iteration  10: 18045.555 us/op
# Warmup Iteration  11: 18005.937 us/op
# Warmup Iteration  12: 17997.409 us/op
# Warmup Iteration  13: 18047.966 us/op
# Warmup Iteration  14: 18015.030 us/op
# Warmup Iteration  15: 18026.864 us/op
# Warmup Iteration  16: 18046.824 us/op
# Warmup Iteration  17: 18531.212 us/op
# Warmup Iteration  18: 17994.257 us/op
# Warmup Iteration  19: 18146.591 us/op
# Warmup Iteration  20: 17974.157 us/op
Iteration   1: 17974.809 us/op
Iteration   2: 18065.241 us/op
Iteration   3: 17981.309 us/op
Iteration   4: 18354.449 us/op
Iteration   5: 17964.625 us/op
Iteration   6: 17965.692 us/op
Iteration   7: 18229.447 us/op
Iteration   8: 17965.963 us/op
Iteration   9: 18008.531 us/op
Iteration  10: 18036.565 us/op
Iteration  11: 18064.883 us/op
Iteration  12: 18062.801 us/op
Iteration  13: 18032.681 us/op
Iteration  14: 18122.680 us/op
Iteration  15: 18008.826 us/op
Iteration  16: 18062.346 us/op
Iteration  17: 18235.873 us/op
Iteration  18: 18068.486 us/op
Iteration  19: 18040.251 us/op
Iteration  20: 18095.504 us/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testImplicit100000":
  18067.048 ±(99.9%) 88.625 us/op [Average]
  (min, avg, max) = (17964.625, 18067.048, 18354.449), stdev = 102.061
  CI (99.9%): [17978.423, 18155.673] (assumes normal distribution)


# Run complete. Total time: 00:06:43

Benchmark                     Mode  Cnt      Score     Error  Units
MergeSort.testExplicit10      avgt   20      0.467 ±   0.001  us/op
MergeSort.testExplicit100     avgt   20      7.912 ±   0.025  us/op
MergeSort.testExplicit1000    avgt   20    107.848 ±   1.054  us/op
MergeSort.testExplicit10000   avgt   20   1363.483 ±  54.886  us/op
MergeSort.testExplicit100000  avgt   20  16346.450 ± 130.578  us/op
MergeSort.testImplicit10      avgt   20      0.592 ±   0.003  us/op
MergeSort.testImplicit100     avgt   20     10.435 ±   0.426  us/op
MergeSort.testImplicit1000    avgt   20    128.850 ±   0.319  us/op
MergeSort.testImplicit10000   avgt   20   1527.313 ±   7.827  us/op
MergeSort.testImplicit100000  avgt   20  18067.048 ±  88.625  us/op
[DONE] ./indy_array.xml
[START] ./indy_lru.xml
# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args0

# Run progress: 0.00% complete, ETA 00:06:00
# Fork: 1 of 1
# Warmup Iteration   1: 8.704 ns/op
# Warmup Iteration   2: 8.434 ns/op
# Warmup Iteration   3: 8.210 ns/op
# Warmup Iteration   4: 8.196 ns/op
# Warmup Iteration   5: 8.193 ns/op
# Warmup Iteration   6: 8.195 ns/op
# Warmup Iteration   7: 8.201 ns/op
# Warmup Iteration   8: 8.195 ns/op
# Warmup Iteration   9: 8.196 ns/op
# Warmup Iteration  10: 8.211 ns/op
# Warmup Iteration  11: 8.199 ns/op
# Warmup Iteration  12: 8.201 ns/op
# Warmup Iteration  13: 8.194 ns/op
# Warmup Iteration  14: 8.202 ns/op
# Warmup Iteration  15: 8.192 ns/op
# Warmup Iteration  16: 8.196 ns/op
# Warmup Iteration  17: 8.191 ns/op
# Warmup Iteration  18: 8.198 ns/op
# Warmup Iteration  19: 8.194 ns/op
# Warmup Iteration  20: 8.665 ns/op
Iteration   1: 8.201 ns/op
Iteration   2: 8.194 ns/op
Iteration   3: 8.198 ns/op
Iteration   4: 8.197 ns/op
Iteration   5: 8.190 ns/op
Iteration   6: 8.190 ns/op
Iteration   7: 8.194 ns/op
Iteration   8: 8.205 ns/op
Iteration   9: 8.193 ns/op
Iteration  10: 8.213 ns/op
Iteration  11: 8.205 ns/op
Iteration  12: 8.191 ns/op
Iteration  13: 8.191 ns/op
Iteration  14: 8.195 ns/op
Iteration  15: 9.227 ns/op
Iteration  16: 8.469 ns/op
Iteration  17: 8.206 ns/op
Iteration  18: 8.191 ns/op
Iteration  19: 8.191 ns/op
Iteration  20: 8.216 ns/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args0":
  8.263 ±(99.9%) 0.204 ns/op [Average]
  (min, avg, max) = (8.190, 8.263, 9.227), stdev = 0.235
  CI (99.9%): [8.059, 8.467] (assumes normal distribution)


# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args1

# Run progress: 11.11% complete, ETA 00:05:21
# Fork: 1 of 1
# Warmup Iteration   1: 8.760 ns/op
# Warmup Iteration   2: 8.574 ns/op
# Warmup Iteration   3: 8.303 ns/op
# Warmup Iteration   4: 8.314 ns/op
# Warmup Iteration   5: 8.315 ns/op
# Warmup Iteration   6: 8.308 ns/op
# Warmup Iteration   7: 8.316 ns/op
# Warmup Iteration   8: 8.324 ns/op
# Warmup Iteration   9: 8.315 ns/op
# Warmup Iteration  10: 8.348 ns/op
# Warmup Iteration  11: 8.318 ns/op
# Warmup Iteration  12: 8.312 ns/op
# Warmup Iteration  13: 8.337 ns/op
# Warmup Iteration  14: 8.316 ns/op
# Warmup Iteration  15: 8.314 ns/op
# Warmup Iteration  16: 8.318 ns/op
# Warmup Iteration  17: 8.393 ns/op
# Warmup Iteration  18: 8.316 ns/op
# Warmup Iteration  19: 8.317 ns/op
# Warmup Iteration  20: 8.360 ns/op
Iteration   1: 8.312 ns/op
Iteration   2: 8.314 ns/op
Iteration   3: 8.304 ns/op
Iteration   4: 8.312 ns/op
Iteration   5: 9.546 ns/op
Iteration   6: 8.315 ns/op
Iteration   7: 8.302 ns/op
Iteration   8: 8.315 ns/op
Iteration   9: 8.312 ns/op
Iteration  10: 8.358 ns/op
Iteration  11: 8.316 ns/op
Iteration  12: 8.302 ns/op
Iteration  13: 8.317 ns/op
Iteration  14: 8.324 ns/op
Iteration  15: 8.311 ns/op
Iteration  16: 8.317 ns/op
Iteration  17: 8.312 ns/op
Iteration  18: 8.306 ns/op
Iteration  19: 8.308 ns/op
Iteration  20: 8.363 ns/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args1":
  8.378 ±(99.9%) 0.239 ns/op [Average]
  (min, avg, max) = (8.302, 8.378, 9.546), stdev = 0.275
  CI (99.9%): [8.139, 8.617] (assumes normal distribution)


# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args10

# Run progress: 22.22% complete, ETA 00:04:41
# Fork: 1 of 1
# Warmup Iteration   1: 11.833 ns/op
# Warmup Iteration   2: 10.708 ns/op
# Warmup Iteration   3: 9.615 ns/op
# Warmup Iteration   4: 9.606 ns/op
# Warmup Iteration   5: 9.599 ns/op
# Warmup Iteration   6: 9.613 ns/op
# Warmup Iteration   7: 9.604 ns/op
# Warmup Iteration   8: 9.609 ns/op
# Warmup Iteration   9: 9.630 ns/op
# Warmup Iteration  10: 9.616 ns/op
# Warmup Iteration  11: 9.621 ns/op
# Warmup Iteration  12: 9.601 ns/op
# Warmup Iteration  13: 9.606 ns/op
# Warmup Iteration  14: 9.611 ns/op
# Warmup Iteration  15: 9.605 ns/op
# Warmup Iteration  16: 9.603 ns/op
# Warmup Iteration  17: 9.626 ns/op
# Warmup Iteration  18: 9.606 ns/op
# Warmup Iteration  19: 9.614 ns/op
# Warmup Iteration  20: 9.643 ns/op
Iteration   1: 9.671 ns/op
Iteration   2: 9.594 ns/op
Iteration   3: 9.604 ns/op
Iteration   4: 9.599 ns/op
Iteration   5: 9.607 ns/op
Iteration   6: 9.615 ns/op
Iteration   7: 9.605 ns/op
Iteration   8: 9.602 ns/op
Iteration   9: 9.726 ns/op
Iteration  10: 9.651 ns/op
Iteration  11: 9.607 ns/op
Iteration  12: 9.605 ns/op
Iteration  13: 9.710 ns/op
Iteration  14: 9.604 ns/op
Iteration  15: 9.595 ns/op
Iteration  16: 9.613 ns/op
Iteration  17: 9.608 ns/op
Iteration  18: 9.606 ns/op
Iteration  19: 9.646 ns/op
Iteration  20: 9.616 ns/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args10":
  9.624 ±(99.9%) 0.033 ns/op [Average]
  (min, avg, max) = (9.594, 9.624, 9.726), stdev = 0.038
  CI (99.9%): [9.592, 9.657] (assumes normal distribution)


# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args15

# Run progress: 33.33% complete, ETA 00:04:01
# Fork: 1 of 1
# Warmup Iteration   1: 11.754 ns/op
# Warmup Iteration   2: 11.532 ns/op
# Warmup Iteration   3: 10.386 ns/op
# Warmup Iteration   4: 10.386 ns/op
# Warmup Iteration   5: 10.386 ns/op
# Warmup Iteration   6: 10.393 ns/op
# Warmup Iteration   7: 10.385 ns/op
# Warmup Iteration   8: 10.384 ns/op
# Warmup Iteration   9: 10.408 ns/op
# Warmup Iteration  10: 10.393 ns/op
# Warmup Iteration  11: 10.407 ns/op
# Warmup Iteration  12: 10.386 ns/op
# Warmup Iteration  13: 10.386 ns/op
# Warmup Iteration  14: 10.386 ns/op
# Warmup Iteration  15: 10.387 ns/op
# Warmup Iteration  16: 10.383 ns/op
# Warmup Iteration  17: 10.389 ns/op
# Warmup Iteration  18: 10.385 ns/op
# Warmup Iteration  19: 10.403 ns/op
# Warmup Iteration  20: 10.391 ns/op
Iteration   1: 10.384 ns/op
Iteration   2: 10.388 ns/op
Iteration   3: 10.384 ns/op
Iteration   4: 10.385 ns/op
Iteration   5: 10.394 ns/op
Iteration   6: 10.386 ns/op
Iteration   7: 10.388 ns/op
Iteration   8: 10.387 ns/op
Iteration   9: 10.462 ns/op
Iteration  10: 10.384 ns/op
Iteration  11: 10.399 ns/op
Iteration  12: 10.385 ns/op
Iteration  13: 10.385 ns/op
Iteration  14: 10.385 ns/op
Iteration  15: 10.384 ns/op
Iteration  16: 10.390 ns/op
Iteration  17: 10.383 ns/op
Iteration  18: 10.386 ns/op
Iteration  19: 10.437 ns/op
Iteration  20: 10.386 ns/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args15":
  10.393 ±(99.9%) 0.017 ns/op [Average]
  (min, avg, max) = (10.383, 10.393, 10.462), stdev = 0.020
  CI (99.9%): [10.376, 10.411] (assumes normal distribution)


# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args2

# Run progress: 44.44% complete, ETA 00:03:21
# Fork: 1 of 1
# Warmup Iteration   1: 8.927 ns/op
# Warmup Iteration   2: 8.685 ns/op
# Warmup Iteration   3: 8.467 ns/op
# Warmup Iteration   4: 8.468 ns/op
# Warmup Iteration   5: 8.468 ns/op
# Warmup Iteration   6: 8.469 ns/op
# Warmup Iteration   7: 8.466 ns/op
# Warmup Iteration   8: 8.467 ns/op
# Warmup Iteration   9: 8.495 ns/op
# Warmup Iteration  10: 8.469 ns/op
# Warmup Iteration  11: 8.472 ns/op
# Warmup Iteration  12: 8.464 ns/op
# Warmup Iteration  13: 8.472 ns/op
# Warmup Iteration  14: 8.467 ns/op
# Warmup Iteration  15: 8.466 ns/op
# Warmup Iteration  16: 8.525 ns/op
# Warmup Iteration  17: 8.595 ns/op
# Warmup Iteration  18: 8.596 ns/op
# Warmup Iteration  19: 8.616 ns/op
# Warmup Iteration  20: 8.595 ns/op
Iteration   1: 8.883 ns/op
Iteration   2: 8.594 ns/op
Iteration   3: 8.595 ns/op
Iteration   4: 8.601 ns/op
Iteration   5: 8.591 ns/op
Iteration   6: 8.595 ns/op
Iteration   7: 8.590 ns/op
Iteration   8: 8.595 ns/op
Iteration   9: 8.623 ns/op
Iteration  10: 8.598 ns/op
Iteration  11: 8.599 ns/op
Iteration  12: 8.592 ns/op
Iteration  13: 8.593 ns/op
Iteration  14: 8.596 ns/op
Iteration  15: 8.601 ns/op
Iteration  16: 8.595 ns/op
Iteration  17: 8.593 ns/op
Iteration  18: 8.593 ns/op
Iteration  19: 8.638 ns/op
Iteration  20: 8.595 ns/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args2":
  8.613 ±(99.9%) 0.056 ns/op [Average]
  (min, avg, max) = (8.590, 8.613, 8.883), stdev = 0.065
  CI (99.9%): [8.557, 8.669] (assumes normal distribution)


# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args20

# Run progress: 55.56% complete, ETA 00:02:40
# Fork: 1 of 1
# Warmup Iteration   1: 12.766 ns/op
# Warmup Iteration   2: 12.594 ns/op
# Warmup Iteration   3: 11.215 ns/op
# Warmup Iteration   4: 11.231 ns/op
# Warmup Iteration   5: 11.205 ns/op
# Warmup Iteration   6: 11.211 ns/op
# Warmup Iteration   7: 11.178 ns/op
# Warmup Iteration   8: 11.203 ns/op
# Warmup Iteration   9: 11.443 ns/op
# Warmup Iteration  10: 11.218 ns/op
# Warmup Iteration  11: 11.206 ns/op
# Warmup Iteration  12: 11.198 ns/op
# Warmup Iteration  13: 11.216 ns/op
# Warmup Iteration  14: 11.204 ns/op
# Warmup Iteration  15: 11.181 ns/op
# Warmup Iteration  16: 11.221 ns/op
# Warmup Iteration  17: 11.184 ns/op
# Warmup Iteration  18: 11.235 ns/op
# Warmup Iteration  19: 11.511 ns/op
# Warmup Iteration  20: 11.212 ns/op
Iteration   1: 11.210 ns/op
Iteration   2: 11.193 ns/op
Iteration   3: 11.225 ns/op
Iteration   4: 11.219 ns/op
Iteration   5: 11.216 ns/op
Iteration   6: 11.182 ns/op
Iteration   7: 11.210 ns/op
Iteration   8: 11.191 ns/op
Iteration   9: 11.410 ns/op
Iteration  10: 11.208 ns/op
Iteration  11: 11.219 ns/op
Iteration  12: 11.382 ns/op
Iteration  13: 11.268 ns/op
Iteration  14: 11.214 ns/op
Iteration  15: 11.175 ns/op
Iteration  16: 11.192 ns/op
Iteration  17: 11.213 ns/op
Iteration  18: 11.203 ns/op
Iteration  19: 11.424 ns/op
Iteration  20: 11.185 ns/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args20":
  11.237 ±(99.9%) 0.066 ns/op [Average]
  (min, avg, max) = (11.175, 11.237, 11.424), stdev = 0.076
  CI (99.9%): [11.171, 11.303] (assumes normal distribution)


# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args3

# Run progress: 66.67% complete, ETA 00:02:00
# Fork: 1 of 1
# Warmup Iteration   1: 9.644 ns/op
# Warmup Iteration   2: 9.899 ns/op
# Warmup Iteration   3: 8.499 ns/op
# Warmup Iteration   4: 8.499 ns/op
# Warmup Iteration   5: 8.500 ns/op
# Warmup Iteration   6: 8.501 ns/op
# Warmup Iteration   7: 8.499 ns/op
# Warmup Iteration   8: 8.497 ns/op
# Warmup Iteration   9: 8.551 ns/op
# Warmup Iteration  10: 8.506 ns/op
# Warmup Iteration  11: 8.503 ns/op
# Warmup Iteration  12: 8.495 ns/op
# Warmup Iteration  13: 8.496 ns/op
# Warmup Iteration  14: 8.498 ns/op
# Warmup Iteration  15: 8.495 ns/op
# Warmup Iteration  16: 8.501 ns/op
# Warmup Iteration  17: 8.500 ns/op
# Warmup Iteration  18: 8.499 ns/op
# Warmup Iteration  19: 8.537 ns/op
# Warmup Iteration  20: 8.498 ns/op
Iteration   1: 8.507 ns/op
Iteration   2: 8.496 ns/op
Iteration   3: 8.499 ns/op
Iteration   4: 8.508 ns/op
Iteration   5: 8.497 ns/op
Iteration   6: 8.501 ns/op
Iteration   7: 8.499 ns/op
Iteration   8: 8.503 ns/op
Iteration   9: 8.536 ns/op
Iteration  10: 8.501 ns/op
Iteration  11: 8.499 ns/op
Iteration  12: 8.501 ns/op
Iteration  13: 8.498 ns/op
Iteration  14: 8.497 ns/op
Iteration  15: 8.501 ns/op
Iteration  16: 8.506 ns/op
Iteration  17: 8.503 ns/op
Iteration  18: 8.500 ns/op
Iteration  19: 8.859 ns/op
Iteration  20: 8.846 ns/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args3":
  8.538 ±(99.9%) 0.094 ns/op [Average]
  (min, avg, max) = (8.496, 8.538, 8.859), stdev = 0.108
  CI (99.9%): [8.444, 8.632] (assumes normal distribution)


# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args4

# Run progress: 77.78% complete, ETA 00:01:20
# Fork: 1 of 1
# Warmup Iteration   1: 11.192 ns/op
# Warmup Iteration   2: 11.010 ns/op
# Warmup Iteration   3: 10.025 ns/op
# Warmup Iteration   4: 9.375 ns/op
# Warmup Iteration   5: 9.382 ns/op
# Warmup Iteration   6: 11.248 ns/op
# Warmup Iteration   7: 9.379 ns/op
# Warmup Iteration   8: 9.399 ns/op
# Warmup Iteration   9: 9.370 ns/op
# Warmup Iteration  10: 10.186 ns/op
# Warmup Iteration  11: 11.873 ns/op
# Warmup Iteration  12: 9.387 ns/op
# Warmup Iteration  13: 9.372 ns/op
# Warmup Iteration  14: 9.377 ns/op
# Warmup Iteration  15: 9.376 ns/op
# Warmup Iteration  16: 9.376 ns/op
# Warmup Iteration  17: 8.660 ns/op
# Warmup Iteration  18: 8.707 ns/op
# Warmup Iteration  19: 8.670 ns/op
# Warmup Iteration  20: 8.656 ns/op
Iteration   1: 8.663 ns/op
Iteration   2: 8.650 ns/op
Iteration   3: 8.659 ns/op
Iteration   4: 8.663 ns/op
Iteration   5: 8.650 ns/op
Iteration   6: 8.654 ns/op
Iteration   7: 8.654 ns/op
Iteration   8: 8.682 ns/op
Iteration   9: 8.656 ns/op
Iteration  10: 8.662 ns/op
Iteration  11: 8.657 ns/op
Iteration  12: 8.654 ns/op
Iteration  13: 8.657 ns/op
Iteration  14: 8.654 ns/op
Iteration  15: 8.658 ns/op
Iteration  16: 8.655 ns/op
Iteration  17: 8.654 ns/op
Iteration  18: 9.946 ns/op
Iteration  19: 11.416 ns/op
Iteration  20: 8.655 ns/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args4":
  8.860 ±(99.9%) 0.579 ns/op [Average]
  (min, avg, max) = (8.650, 8.860, 11.416), stdev = 0.667
  CI (99.9%): [8.281, 9.439] (assumes normal distribution)


# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args5

# Run progress: 88.89% complete, ETA 00:00:40
# Fork: 1 of 1
# Warmup Iteration   1: 10.160 ns/op
# Warmup Iteration   2: 11.055 ns/op
# Warmup Iteration   3: 8.750 ns/op
# Warmup Iteration   4: 8.754 ns/op
# Warmup Iteration   5: 8.749 ns/op
# Warmup Iteration   6: 8.809 ns/op
# Warmup Iteration   7: 8.749 ns/op
# Warmup Iteration   8: 8.780 ns/op
# Warmup Iteration   9: 8.752 ns/op
# Warmup Iteration  10: 8.751 ns/op
# Warmup Iteration  11: 8.746 ns/op
# Warmup Iteration  12: 8.749 ns/op
# Warmup Iteration  13: 8.752 ns/op
# Warmup Iteration  14: 8.754 ns/op
# Warmup Iteration  15: 8.756 ns/op
# Warmup Iteration  16: 8.750 ns/op
# Warmup Iteration  17: 8.749 ns/op
# Warmup Iteration  18: 8.902 ns/op
# Warmup Iteration  19: 8.753 ns/op
# Warmup Iteration  20: 8.755 ns/op
Iteration   1: 8.747 ns/op
Iteration   2: 8.748 ns/op
Iteration   3: 8.748 ns/op
Iteration   4: 8.752 ns/op
Iteration   5: 8.808 ns/op
Iteration   6: 8.749 ns/op
Iteration   7: 8.749 ns/op
Iteration   8: 8.824 ns/op
Iteration   9: 8.754 ns/op
Iteration  10: 8.751 ns/op
Iteration  11: 8.748 ns/op
Iteration  12: 8.761 ns/op
Iteration  13: 8.748 ns/op
Iteration  14: 8.751 ns/op
Iteration  15: 8.751 ns/op
Iteration  16: 8.750 ns/op
Iteration  17: 8.749 ns/op
Iteration  18: 8.805 ns/op
Iteration  19: 8.756 ns/op
Iteration  20: 8.751 ns/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args5":
  8.760 ±(99.9%) 0.020 ns/op [Average]
  (min, avg, max) = (8.747, 8.760, 8.824), stdev = 0.023
  CI (99.9%): [8.740, 8.780] (assumes normal distribution)


# Run complete. Total time: 00:06:02

Benchmark         Mode  Cnt   Score   Error  Units
SingleRun.args0   avgt   20   8.263 ± 0.204  ns/op
SingleRun.args1   avgt   20   8.378 ± 0.239  ns/op
SingleRun.args10  avgt   20   9.624 ± 0.033  ns/op
SingleRun.args15  avgt   20  10.393 ± 0.017  ns/op
SingleRun.args2   avgt   20   8.613 ± 0.056  ns/op
SingleRun.args20  avgt   20  11.237 ± 0.066  ns/op
SingleRun.args3   avgt   20   8.538 ± 0.094  ns/op
SingleRun.args4   avgt   20   8.860 ± 0.579  ns/op
SingleRun.args5   avgt   20   8.760 ± 0.020  ns/op
# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.MultiTarget.test

# Run progress: 0.00% complete, ETA 00:00:40
# Fork: 1 of 1
# Warmup Iteration   1: 23678.096 ns/op
# Warmup Iteration   2: 22718.870 ns/op
# Warmup Iteration   3: 23396.414 ns/op
# Warmup Iteration   4: 23245.376 ns/op
# Warmup Iteration   5: 23283.493 ns/op
# Warmup Iteration   6: 23278.233 ns/op
# Warmup Iteration   7: 23244.572 ns/op
# Warmup Iteration   8: 23328.292 ns/op
# Warmup Iteration   9: 23263.361 ns/op
# Warmup Iteration  10: 23284.576 ns/op
# Warmup Iteration  11: 23334.716 ns/op
# Warmup Iteration  12: 23284.088 ns/op
# Warmup Iteration  13: 23265.970 ns/op
# Warmup Iteration  14: 23226.917 ns/op
# Warmup Iteration  15: 23244.850 ns/op
# Warmup Iteration  16: 23200.138 ns/op
# Warmup Iteration  17: 23219.140 ns/op
# Warmup Iteration  18: 23762.451 ns/op
# Warmup Iteration  19: 23294.428 ns/op
# Warmup Iteration  20: 23325.672 ns/op
Iteration   1: 23245.953 ns/op
Iteration   2: 23257.000 ns/op
Iteration   3: 23265.057 ns/op
Iteration   4: 23275.410 ns/op
Iteration   5: 23256.887 ns/op
Iteration   6: 23291.487 ns/op
Iteration   7: 23351.439 ns/op
Iteration   8: 23507.145 ns/op
Iteration   9: 23264.501 ns/op
Iteration  10: 23313.305 ns/op
Iteration  11: 23287.906 ns/op
Iteration  12: 23272.537 ns/op
Iteration  13: 23269.368 ns/op
Iteration  14: 23295.739 ns/op
Iteration  15: 23322.783 ns/op
Iteration  16: 23285.642 ns/op
Iteration  17: 23297.514 ns/op
Iteration  18: 23359.966 ns/op
Iteration  19: 23283.354 ns/op
Iteration  20: 23305.485 ns/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.MultiTarget.test":
  23300.424 ±(99.9%) 49.607 ns/op [Average]
  (min, avg, max) = (23245.953, 23300.424, 23507.145), stdev = 57.127
  CI (99.9%): [23250.817, 23350.031] (assumes normal distribution)


# Run complete. Total time: 00:00:40

Benchmark         Mode  Cnt      Score    Error  Units
MultiTarget.test  avgt   20  23300.424 ± 49.607  ns/op
# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testExplicit10

# Run progress: 0.00% complete, ETA 00:06:40
# Fork: 1 of 1
# Warmup Iteration   1: 0.506 us/op
# Warmup Iteration   2: 0.475 us/op
# Warmup Iteration   3: 0.478 us/op
# Warmup Iteration   4: 0.465 us/op
# Warmup Iteration   5: 0.469 us/op
# Warmup Iteration   6: 0.480 us/op
# Warmup Iteration   7: 0.465 us/op
# Warmup Iteration   8: 0.465 us/op
# Warmup Iteration   9: 0.509 us/op
# Warmup Iteration  10: 0.465 us/op
# Warmup Iteration  11: 0.475 us/op
# Warmup Iteration  12: 0.465 us/op
# Warmup Iteration  13: 0.465 us/op
# Warmup Iteration  14: 0.464 us/op
# Warmup Iteration  15: 0.465 us/op
# Warmup Iteration  16: 0.477 us/op
# Warmup Iteration  17: 0.483 us/op
# Warmup Iteration  18: 0.465 us/op
# Warmup Iteration  19: 0.464 us/op
# Warmup Iteration  20: 0.465 us/op
Iteration   1: 0.464 us/op
Iteration   2: 0.464 us/op
Iteration   3: 0.465 us/op
Iteration   4: 0.465 us/op
Iteration   5: 0.477 us/op
Iteration   6: 0.464 us/op
Iteration   7: 0.467 us/op
Iteration   8: 0.465 us/op
Iteration   9: 0.466 us/op
Iteration  10: 0.471 us/op
Iteration  11: 0.465 us/op
Iteration  12: 0.465 us/op
Iteration  13: 0.465 us/op
Iteration  14: 0.466 us/op
Iteration  15: 0.465 us/op
Iteration  16: 0.465 us/op
Iteration  17: 0.467 us/op
Iteration  18: 0.465 us/op
Iteration  19: 0.466 us/op
Iteration  20: 0.466 us/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testExplicit10":
  0.466 ±(99.9%) 0.003 us/op [Average]
  (min, avg, max) = (0.464, 0.466, 0.477), stdev = 0.003
  CI (99.9%): [0.464, 0.469] (assumes normal distribution)


# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testExplicit100

# Run progress: 10.00% complete, ETA 00:06:02
# Fork: 1 of 1
# Warmup Iteration   1: 8.609 us/op
# Warmup Iteration   2: 8.285 us/op
# Warmup Iteration   3: 8.733 us/op
# Warmup Iteration   4: 7.948 us/op
# Warmup Iteration   5: 8.264 us/op
# Warmup Iteration   6: 7.919 us/op
# Warmup Iteration   7: 7.961 us/op
# Warmup Iteration   8: 7.907 us/op
# Warmup Iteration   9: 7.907 us/op
# Warmup Iteration  10: 7.923 us/op
# Warmup Iteration  11: 7.924 us/op
# Warmup Iteration  12: 7.915 us/op
# Warmup Iteration  13: 7.906 us/op
# Warmup Iteration  14: 7.938 us/op
# Warmup Iteration  15: 7.910 us/op
# Warmup Iteration  16: 7.931 us/op
# Warmup Iteration  17: 8.015 us/op
# Warmup Iteration  18: 7.913 us/op
# Warmup Iteration  19: 7.933 us/op
# Warmup Iteration  20: 7.917 us/op
Iteration   1: 7.913 us/op
Iteration   2: 7.913 us/op
Iteration   3: 7.932 us/op
Iteration   4: 7.994 us/op
Iteration   5: 8.625 us/op
Iteration   6: 7.920 us/op
Iteration   7: 7.935 us/op
Iteration   8: 7.923 us/op
Iteration   9: 7.927 us/op
Iteration  10: 8.243 us/op
Iteration  11: 7.949 us/op
Iteration  12: 7.945 us/op
Iteration  13: 7.964 us/op
Iteration  14: 7.929 us/op
Iteration  15: 7.932 us/op
Iteration  16: 7.949 us/op
Iteration  17: 7.981 us/op
Iteration  18: 7.962 us/op
Iteration  19: 8.031 us/op
Iteration  20: 8.004 us/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testExplicit100":
  7.999 ±(99.9%) 0.143 us/op [Average]
  (min, avg, max) = (7.913, 7.999, 8.625), stdev = 0.164
  CI (99.9%): [7.856, 8.141] (assumes normal distribution)


# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testExplicit1000

# Run progress: 20.00% complete, ETA 00:05:21
# Fork: 1 of 1
# Warmup Iteration   1: 115.981 us/op
# Warmup Iteration   2: 109.476 us/op
# Warmup Iteration   3: 109.107 us/op
# Warmup Iteration   4: 109.481 us/op
# Warmup Iteration   5: 109.785 us/op
# Warmup Iteration   6: 108.987 us/op
# Warmup Iteration   7: 108.358 us/op
# Warmup Iteration   8: 107.919 us/op
# Warmup Iteration   9: 107.758 us/op
# Warmup Iteration  10: 107.574 us/op
# Warmup Iteration  11: 107.814 us/op
# Warmup Iteration  12: 107.870 us/op
# Warmup Iteration  13: 107.752 us/op
# Warmup Iteration  14: 108.057 us/op
# Warmup Iteration  15: 107.803 us/op
# Warmup Iteration  16: 108.088 us/op
# Warmup Iteration  17: 108.985 us/op
# Warmup Iteration  18: 109.645 us/op
# Warmup Iteration  19: 107.870 us/op
# Warmup Iteration  20: 107.693 us/op
Iteration   1: 107.961 us/op
Iteration   2: 107.949 us/op
Iteration   3: 107.780 us/op
Iteration   4: 113.726 us/op
Iteration   5: 108.036 us/op
Iteration   6: 107.797 us/op
Iteration   7: 108.379 us/op
Iteration   8: 107.965 us/op
Iteration   9: 108.218 us/op
Iteration  10: 107.936 us/op
Iteration  11: 108.100 us/op
Iteration  12: 108.240 us/op
Iteration  13: 109.302 us/op
Iteration  14: 108.434 us/op
Iteration  15: 109.052 us/op
Iteration  16: 108.208 us/op
Iteration  17: 109.353 us/op
Iteration  18: 108.499 us/op
Iteration  19: 108.485 us/op
Iteration  20: 108.628 us/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testExplicit1000":
  108.602 ±(99.9%) 1.120 us/op [Average]
  (min, avg, max) = (107.780, 108.602, 113.726), stdev = 1.290
  CI (99.9%): [107.482, 109.723] (assumes normal distribution)


# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testExplicit10000

# Run progress: 30.00% complete, ETA 00:04:41
# Fork: 1 of 1
# Warmup Iteration   1: 1430.158 us/op
# Warmup Iteration   2: 1373.812 us/op
# Warmup Iteration   3: 1337.149 us/op
# Warmup Iteration   4: 1368.994 us/op
# Warmup Iteration   5: 1348.066 us/op
# Warmup Iteration   6: 1337.079 us/op
# Warmup Iteration   7: 1350.042 us/op
# Warmup Iteration   8: 1333.683 us/op
# Warmup Iteration   9: 1337.015 us/op
# Warmup Iteration  10: 1339.724 us/op
# Warmup Iteration  11: 1340.126 us/op
# Warmup Iteration  12: 1347.023 us/op
# Warmup Iteration  13: 1341.217 us/op
# Warmup Iteration  14: 1337.132 us/op
# Warmup Iteration  15: 1343.047 us/op
# Warmup Iteration  16: 1337.169 us/op
# Warmup Iteration  17: 1342.508 us/op
# Warmup Iteration  18: 1347.193 us/op
# Warmup Iteration  19: 1340.522 us/op
# Warmup Iteration  20: 1339.389 us/op
Iteration   1: 1340.235 us/op
Iteration   2: 1340.045 us/op
Iteration   3: 1343.287 us/op
Iteration   4: 1340.357 us/op
Iteration   5: 1348.203 us/op
Iteration   6: 1347.566 us/op
Iteration   7: 1349.710 us/op
Iteration   8: 1345.227 us/op
Iteration   9: 1342.416 us/op
Iteration  10: 1346.481 us/op
Iteration  11: 1346.790 us/op
Iteration  12: 1345.676 us/op
Iteration  13: 1349.828 us/op
Iteration  14: 1352.265 us/op
Iteration  15: 1347.400 us/op
Iteration  16: 1359.762 us/op
Iteration  17: 1350.977 us/op
Iteration  18: 1352.083 us/op
Iteration  19: 1352.176 us/op
Iteration  20: 1343.785 us/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testExplicit10000":
  1347.213 ±(99.9%) 4.291 us/op [Average]
  (min, avg, max) = (1340.045, 1347.213, 1359.762), stdev = 4.942
  CI (99.9%): [1342.922, 1351.505] (assumes normal distribution)


# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testExplicit100000

# Run progress: 40.00% complete, ETA 00:04:01
# Fork: 1 of 1
# Warmup Iteration   1: 17469.537 us/op
# Warmup Iteration   2: 16999.761 us/op
# Warmup Iteration   3: 16474.137 us/op
# Warmup Iteration   4: 16935.179 us/op
# Warmup Iteration   5: 16434.563 us/op
# Warmup Iteration   6: 16686.472 us/op
# Warmup Iteration   7: 16575.455 us/op
# Warmup Iteration   8: 16641.439 us/op
# Warmup Iteration   9: 16603.361 us/op
# Warmup Iteration  10: 16367.212 us/op
# Warmup Iteration  11: 16399.925 us/op
# Warmup Iteration  12: 16343.934 us/op
# Warmup Iteration  13: 16433.925 us/op
# Warmup Iteration  14: 16444.177 us/op
# Warmup Iteration  15: 16372.861 us/op
# Warmup Iteration  16: 16516.773 us/op
# Warmup Iteration  17: 17263.531 us/op
# Warmup Iteration  18: 16483.382 us/op
# Warmup Iteration  19: 16456.937 us/op
# Warmup Iteration  20: 16397.273 us/op
Iteration   1: 16342.364 us/op
Iteration   2: 16382.934 us/op
Iteration   3: 16380.475 us/op
Iteration   4: 16365.064 us/op
Iteration   5: 16407.144 us/op
Iteration   6: 16626.790 us/op
Iteration   7: 16522.945 us/op
Iteration   8: 16484.708 us/op
Iteration   9: 16508.272 us/op
Iteration  10: 16416.251 us/op
Iteration  11: 16478.131 us/op
Iteration  12: 16519.767 us/op
Iteration  13: 17585.893 us/op
Iteration  14: 16428.957 us/op
Iteration  15: 16377.650 us/op
Iteration  16: 16910.041 us/op
Iteration  17: 16873.689 us/op
Iteration  18: 16474.569 us/op
Iteration  19: 16436.790 us/op
Iteration  20: 16449.743 us/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testExplicit100000":
  16548.609 ±(99.9%) 249.720 us/op [Average]
  (min, avg, max) = (16342.364, 16548.609, 17585.893), stdev = 287.578
  CI (99.9%): [16298.888, 16798.329] (assumes normal distribution)


# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testImplicit10

# Run progress: 50.00% complete, ETA 00:03:21
# Fork: 1 of 1
# Warmup Iteration   1: 0.654 us/op
# Warmup Iteration   2: 0.624 us/op
# Warmup Iteration   3: 0.606 us/op
# Warmup Iteration   4: 0.618 us/op
# Warmup Iteration   5: 0.603 us/op
# Warmup Iteration   6: 0.610 us/op
# Warmup Iteration   7: 0.603 us/op
# Warmup Iteration   8: 0.604 us/op
# Warmup Iteration   9: 0.604 us/op
# Warmup Iteration  10: 0.603 us/op
# Warmup Iteration  11: 0.606 us/op
# Warmup Iteration  12: 0.604 us/op
# Warmup Iteration  13: 0.604 us/op
# Warmup Iteration  14: 0.603 us/op
# Warmup Iteration  15: 0.603 us/op
# Warmup Iteration  16: 0.605 us/op
# Warmup Iteration  17: 0.595 us/op
# Warmup Iteration  18: 0.595 us/op
# Warmup Iteration  19: 0.594 us/op
# Warmup Iteration  20: 0.595 us/op
Iteration   1: 0.596 us/op
Iteration   2: 0.596 us/op
Iteration   3: 0.595 us/op
Iteration   4: 0.596 us/op
Iteration   5: 0.596 us/op
Iteration   6: 0.604 us/op
Iteration   7: 0.596 us/op
Iteration   8: 0.598 us/op
Iteration   9: 0.598 us/op
Iteration  10: 0.598 us/op
Iteration  11: 0.610 us/op
Iteration  12: 0.598 us/op
Iteration  13: 0.600 us/op
Iteration  14: 0.599 us/op
Iteration  15: 0.602 us/op
Iteration  16: 0.608 us/op
Iteration  17: 0.597 us/op
Iteration  18: 0.596 us/op
Iteration  19: 0.597 us/op
Iteration  20: 0.598 us/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testImplicit10":
  0.599 ±(99.9%) 0.004 us/op [Average]
  (min, avg, max) = (0.595, 0.599, 0.610), stdev = 0.004
  CI (99.9%): [0.595, 0.602] (assumes normal distribution)


# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testImplicit100

# Run progress: 60.00% complete, ETA 00:02:41
# Fork: 1 of 1
# Warmup Iteration   1: 10.926 us/op
# Warmup Iteration   2: 10.438 us/op
# Warmup Iteration   3: 10.494 us/op
# Warmup Iteration   4: 10.210 us/op
# Warmup Iteration   5: 10.264 us/op
# Warmup Iteration   6: 10.667 us/op
# Warmup Iteration   7: 10.194 us/op
# Warmup Iteration   8: 10.204 us/op
# Warmup Iteration   9: 10.207 us/op
# Warmup Iteration  10: 10.203 us/op
# Warmup Iteration  11: 10.201 us/op
# Warmup Iteration  12: 10.204 us/op
# Warmup Iteration  13: 10.318 us/op
# Warmup Iteration  14: 10.256 us/op
# Warmup Iteration  15: 10.324 us/op
# Warmup Iteration  16: 10.197 us/op
# Warmup Iteration  17: 10.164 us/op
# Warmup Iteration  18: 10.156 us/op
# Warmup Iteration  19: 10.151 us/op
# Warmup Iteration  20: 10.153 us/op
Iteration   1: 10.170 us/op
Iteration   2: 10.724 us/op
Iteration   3: 11.789 us/op
Iteration   4: 10.169 us/op
Iteration   5: 10.189 us/op
Iteration   6: 10.160 us/op
Iteration   7: 10.157 us/op
Iteration   8: 10.157 us/op
Iteration   9: 10.166 us/op
Iteration  10: 10.163 us/op
Iteration  11: 10.170 us/op
Iteration  12: 10.168 us/op
Iteration  13: 10.155 us/op
Iteration  14: 10.152 us/op
Iteration  15: 10.198 us/op
Iteration  16: 10.160 us/op
Iteration  17: 10.447 us/op
Iteration  18: 10.168 us/op
Iteration  19: 10.234 us/op
Iteration  20: 10.198 us/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testImplicit100":
  10.295 ±(99.9%) 0.327 us/op [Average]
  (min, avg, max) = (10.152, 10.295, 11.789), stdev = 0.377
  CI (99.9%): [9.967, 10.622] (assumes normal distribution)


# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testImplicit1000

# Run progress: 70.00% complete, ETA 00:02:00
# Fork: 1 of 1
# Warmup Iteration   1: 141.555 us/op
# Warmup Iteration   2: 134.991 us/op
# Warmup Iteration   3: 135.666 us/op
# Warmup Iteration   4: 132.802 us/op
# Warmup Iteration   5: 136.433 us/op
# Warmup Iteration   6: 138.241 us/op
# Warmup Iteration   7: 132.179 us/op
# Warmup Iteration   8: 132.706 us/op
# Warmup Iteration   9: 132.640 us/op
# Warmup Iteration  10: 132.195 us/op
# Warmup Iteration  11: 132.421 us/op
# Warmup Iteration  12: 132.637 us/op
# Warmup Iteration  13: 132.268 us/op
# Warmup Iteration  14: 132.484 us/op
# Warmup Iteration  15: 133.549 us/op
# Warmup Iteration  16: 132.230 us/op
# Warmup Iteration  17: 133.271 us/op
# Warmup Iteration  18: 133.252 us/op
# Warmup Iteration  19: 133.191 us/op
# Warmup Iteration  20: 133.184 us/op
Iteration   1: 133.207 us/op
Iteration   2: 133.243 us/op
Iteration   3: 133.347 us/op
Iteration   4: 133.747 us/op
Iteration   5: 134.057 us/op
Iteration   6: 133.314 us/op
Iteration   7: 133.145 us/op
Iteration   8: 133.220 us/op
Iteration   9: 133.840 us/op
Iteration  10: 133.254 us/op
Iteration  11: 133.479 us/op
Iteration  12: 133.511 us/op
Iteration  13: 133.505 us/op
Iteration  14: 133.497 us/op
Iteration  15: 133.665 us/op
Iteration  16: 133.837 us/op
Iteration  17: 133.555 us/op
Iteration  18: 133.653 us/op
Iteration  19: 133.567 us/op
Iteration  20: 133.728 us/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testImplicit1000":
  133.519 ±(99.9%) 0.216 us/op [Average]
  (min, avg, max) = (133.145, 133.519, 134.057), stdev = 0.249
  CI (99.9%): [133.302, 133.735] (assumes normal distribution)


# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testImplicit10000

# Run progress: 80.00% complete, ETA 00:01:20
# Fork: 1 of 1
# Warmup Iteration   1: 1733.079 us/op
# Warmup Iteration   2: 1644.455 us/op
# Warmup Iteration   3: 1644.219 us/op
# Warmup Iteration   4: 1610.687 us/op
# Warmup Iteration   5: 1670.118 us/op
# Warmup Iteration   6: 1606.731 us/op
# Warmup Iteration   7: 1609.783 us/op
# Warmup Iteration   8: 1613.195 us/op
# Warmup Iteration   9: 1611.278 us/op
# Warmup Iteration  10: 1614.227 us/op
# Warmup Iteration  11: 1605.140 us/op
# Warmup Iteration  12: 1608.556 us/op
# Warmup Iteration  13: 1608.904 us/op
# Warmup Iteration  14: 1611.249 us/op
# Warmup Iteration  15: 1612.562 us/op
# Warmup Iteration  16: 1611.129 us/op
# Warmup Iteration  17: 1611.711 us/op
# Warmup Iteration  18: 1615.955 us/op
# Warmup Iteration  19: 1613.695 us/op
# Warmup Iteration  20: 1616.931 us/op
Iteration   1: 1610.683 us/op
Iteration   2: 1655.217 us/op
Iteration   3: 1641.745 us/op
Iteration   4: 1610.366 us/op
Iteration   5: 1627.887 us/op
Iteration   6: 1610.187 us/op
Iteration   7: 1608.460 us/op
Iteration   8: 1611.714 us/op
Iteration   9: 1612.722 us/op
Iteration  10: 1610.164 us/op
Iteration  11: 1618.846 us/op
Iteration  12: 1625.151 us/op
Iteration  13: 1609.813 us/op
Iteration  14: 1614.167 us/op
Iteration  15: 1619.227 us/op
Iteration  16: 1613.859 us/op
Iteration  17: 1615.659 us/op
Iteration  18: 1614.916 us/op
Iteration  19: 1616.938 us/op
Iteration  20: 1618.857 us/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testImplicit10000":
  1618.329 ±(99.9%) 10.170 us/op [Average]
  (min, avg, max) = (1608.460, 1618.329, 1655.217), stdev = 11.712
  CI (99.9%): [1608.159, 1628.499] (assumes normal distribution)


# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testImplicit100000

# Run progress: 90.00% complete, ETA 00:00:40
# Fork: 1 of 1
# Warmup Iteration   1: 20853.977 us/op
# Warmup Iteration   2: 19817.872 us/op
# Warmup Iteration   3: 19784.715 us/op
# Warmup Iteration   4: 19656.573 us/op
# Warmup Iteration   5: 20140.796 us/op
# Warmup Iteration   6: 19498.012 us/op
# Warmup Iteration   7: 19510.779 us/op
# Warmup Iteration   8: 19765.116 us/op
# Warmup Iteration   9: 19477.549 us/op
# Warmup Iteration  10: 19579.647 us/op
# Warmup Iteration  11: 19541.216 us/op
# Warmup Iteration  12: 19483.396 us/op
# Warmup Iteration  13: 19540.458 us/op
# Warmup Iteration  14: 19616.607 us/op
# Warmup Iteration  15: 19506.560 us/op
# Warmup Iteration  16: 19510.840 us/op
# Warmup Iteration  17: 19521.085 us/op
# Warmup Iteration  18: 19492.431 us/op
# Warmup Iteration  19: 19529.192 us/op
# Warmup Iteration  20: 19446.606 us/op
Iteration   1: 19455.816 us/op
Iteration   2: 19477.605 us/op
Iteration   3: 19478.537 us/op
Iteration   4: 19675.924 us/op
Iteration   5: 19456.467 us/op
Iteration   6: 19516.931 us/op
Iteration   7: 19517.137 us/op
Iteration   8: 19511.360 us/op
Iteration   9: 19506.878 us/op
Iteration  10: 19484.275 us/op
Iteration  11: 19476.490 us/op
Iteration  12: 19492.011 us/op
Iteration  13: 19503.337 us/op
Iteration  14: 19611.266 us/op
Iteration  15: 19534.115 us/op
Iteration  16: 19552.307 us/op
Iteration  17: 19572.309 us/op
Iteration  18: 19605.510 us/op
Iteration  19: 19652.747 us/op
Iteration  20: 19515.830 us/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testImplicit100000":
  19529.843 ±(99.9%) 54.848 us/op [Average]
  (min, avg, max) = (19455.816, 19529.843, 19675.924), stdev = 63.163
  CI (99.9%): [19474.995, 19584.691] (assumes normal distribution)


# Run complete. Total time: 00:06:43

Benchmark                     Mode  Cnt      Score     Error  Units
MergeSort.testExplicit10      avgt   20      0.466 ±   0.003  us/op
MergeSort.testExplicit100     avgt   20      7.999 ±   0.143  us/op
MergeSort.testExplicit1000    avgt   20    108.602 ±   1.120  us/op
MergeSort.testExplicit10000   avgt   20   1347.213 ±   4.291  us/op
MergeSort.testExplicit100000  avgt   20  16548.609 ± 249.720  us/op
MergeSort.testImplicit10      avgt   20      0.599 ±   0.004  us/op
MergeSort.testImplicit100     avgt   20     10.295 ±   0.327  us/op
MergeSort.testImplicit1000    avgt   20    133.519 ±   0.216  us/op
MergeSort.testImplicit10000   avgt   20   1618.329 ±  10.170  us/op
MergeSort.testImplicit100000  avgt   20  19529.843 ±  54.848  us/op
[DONE] ./indy_lru.xml
[START] ./indy_rw_list.xml
# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args0

# Run progress: 0.00% complete, ETA 00:06:00
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.BootstrapMethodError: call site initialization exception
	at java.lang.invoke.CallSite.makeSite(CallSite.java:341)
	at java.lang.invoke.MethodHandleNatives.linkCallSiteImpl(MethodHandleNatives.java:307)
	at java.lang.invoke.MethodHandleNatives.linkCallSite(MethodHandleNatives.java:297)
	at ru.spbau.mit.kotlin.protocols.benchmarks.InterfacesKt.proto$12$Foo$bar0$(Interfaces.kt)
	at ru.spbau.mit.kotlin.protocols.benchmarks.InterfacesKt.run0(Interfaces.kt:35)
	at ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args0(SingleRun.kt:14)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.SingleRun_args0_jmhTest.args0_avgt_jmhStub(SingleRun_args0_jmhTest.java:190)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.SingleRun_args0_jmhTest.args0_AverageTime(SingleRun_args0_jmhTest.java:152)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.ArrayIndexOutOfBoundsException: 3
	at kotlin.jvm.internal.ProtocolCallSite.<init>(ProtocolCallSite.kt:144)
	at kotlin.jvm.internal.ProtocolCallSite$Companion.getBootstrap(ProtocolCallSite.kt:32)
	at kotlin.jvm.internal.ProtocolCallSite.getBootstrap(ProtocolCallSite.kt)
	at java.lang.invoke.CallSite.makeSite(CallSite.java:306)
	... 19 more




# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args1

# Run progress: 11.11% complete, ETA 00:00:01
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.BootstrapMethodError: call site initialization exception
	at java.lang.invoke.CallSite.makeSite(CallSite.java:341)
	at java.lang.invoke.MethodHandleNatives.linkCallSiteImpl(MethodHandleNatives.java:307)
	at java.lang.invoke.MethodHandleNatives.linkCallSite(MethodHandleNatives.java:297)
	at ru.spbau.mit.kotlin.protocols.benchmarks.InterfacesKt.proto$13$Foo$bar1$Int(Interfaces.kt)
	at ru.spbau.mit.kotlin.protocols.benchmarks.InterfacesKt.run1(Interfaces.kt:36)
	at ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args1(SingleRun.kt:17)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.SingleRun_args1_jmhTest.args1_avgt_jmhStub(SingleRun_args1_jmhTest.java:190)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.SingleRun_args1_jmhTest.args1_AverageTime(SingleRun_args1_jmhTest.java:152)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.ArrayIndexOutOfBoundsException: 3
	at kotlin.jvm.internal.ProtocolCallSite.<init>(ProtocolCallSite.kt:144)
	at kotlin.jvm.internal.ProtocolCallSite$Companion.getBootstrap(ProtocolCallSite.kt:32)
	at kotlin.jvm.internal.ProtocolCallSite.getBootstrap(ProtocolCallSite.kt)
	at java.lang.invoke.CallSite.makeSite(CallSite.java:306)
	... 19 more




# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args10

# Run progress: 22.22% complete, ETA 00:00:01
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.BootstrapMethodError: call site initialization exception
	at java.lang.invoke.CallSite.makeSite(CallSite.java:341)
	at java.lang.invoke.MethodHandleNatives.linkCallSiteImpl(MethodHandleNatives.java:307)
	at java.lang.invoke.MethodHandleNatives.linkCallSite(MethodHandleNatives.java:297)
	at ru.spbau.mit.kotlin.protocols.benchmarks.InterfacesKt.proto$18$Foo$bar10$IntIntIntIntIntIntIntIntIntInt(Interfaces.kt)
	at ru.spbau.mit.kotlin.protocols.benchmarks.InterfacesKt.run10(Interfaces.kt:41)
	at ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args10(SingleRun.kt:32)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.SingleRun_args10_jmhTest.args10_avgt_jmhStub(SingleRun_args10_jmhTest.java:190)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.SingleRun_args10_jmhTest.args10_AverageTime(SingleRun_args10_jmhTest.java:152)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.ArrayIndexOutOfBoundsException: 3
	at kotlin.jvm.internal.ProtocolCallSite.<init>(ProtocolCallSite.kt:144)
	at kotlin.jvm.internal.ProtocolCallSite$Companion.getBootstrap(ProtocolCallSite.kt:32)
	at kotlin.jvm.internal.ProtocolCallSite.getBootstrap(ProtocolCallSite.kt)
	at java.lang.invoke.CallSite.makeSite(CallSite.java:306)
	... 19 more




# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args15

# Run progress: 33.33% complete, ETA 00:00:01
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.BootstrapMethodError: call site initialization exception
	at java.lang.invoke.CallSite.makeSite(CallSite.java:341)
	at java.lang.invoke.MethodHandleNatives.linkCallSiteImpl(MethodHandleNatives.java:307)
	at java.lang.invoke.MethodHandleNatives.linkCallSite(MethodHandleNatives.java:297)
	at ru.spbau.mit.kotlin.protocols.benchmarks.InterfacesKt.proto$19$Foo$bar15$IntIntIntIntIntIntIntIntIntIntIntIntIntIntInt(Interfaces.kt)
	at ru.spbau.mit.kotlin.protocols.benchmarks.InterfacesKt.run15(Interfaces.kt:42)
	at ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args15(SingleRun.kt:35)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.SingleRun_args15_jmhTest.args15_avgt_jmhStub(SingleRun_args15_jmhTest.java:190)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.SingleRun_args15_jmhTest.args15_AverageTime(SingleRun_args15_jmhTest.java:152)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.ArrayIndexOutOfBoundsException: 3
	at kotlin.jvm.internal.ProtocolCallSite.<init>(ProtocolCallSite.kt:144)
	at kotlin.jvm.internal.ProtocolCallSite$Companion.getBootstrap(ProtocolCallSite.kt:32)
	at kotlin.jvm.internal.ProtocolCallSite.getBootstrap(ProtocolCallSite.kt)
	at java.lang.invoke.CallSite.makeSite(CallSite.java:306)
	... 19 more




# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args2

# Run progress: 44.44% complete, ETA 00:00:01
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.BootstrapMethodError: call site initialization exception
	at java.lang.invoke.CallSite.makeSite(CallSite.java:341)
	at java.lang.invoke.MethodHandleNatives.linkCallSiteImpl(MethodHandleNatives.java:307)
	at java.lang.invoke.MethodHandleNatives.linkCallSite(MethodHandleNatives.java:297)
	at ru.spbau.mit.kotlin.protocols.benchmarks.InterfacesKt.proto$14$Foo$bar2$IntInt(Interfaces.kt)
	at ru.spbau.mit.kotlin.protocols.benchmarks.InterfacesKt.run2(Interfaces.kt:37)
	at ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args2(SingleRun.kt:20)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.SingleRun_args2_jmhTest.args2_avgt_jmhStub(SingleRun_args2_jmhTest.java:190)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.SingleRun_args2_jmhTest.args2_AverageTime(SingleRun_args2_jmhTest.java:152)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.ArrayIndexOutOfBoundsException: 3
	at kotlin.jvm.internal.ProtocolCallSite.<init>(ProtocolCallSite.kt:144)
	at kotlin.jvm.internal.ProtocolCallSite$Companion.getBootstrap(ProtocolCallSite.kt:32)
	at kotlin.jvm.internal.ProtocolCallSite.getBootstrap(ProtocolCallSite.kt)
	at java.lang.invoke.CallSite.makeSite(CallSite.java:306)
	... 19 more




# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args20

# Run progress: 55.56% complete, ETA 00:00:00
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.BootstrapMethodError: call site initialization exception
	at java.lang.invoke.CallSite.makeSite(CallSite.java:341)
	at java.lang.invoke.MethodHandleNatives.linkCallSiteImpl(MethodHandleNatives.java:307)
	at java.lang.invoke.MethodHandleNatives.linkCallSite(MethodHandleNatives.java:297)
	at ru.spbau.mit.kotlin.protocols.benchmarks.InterfacesKt.proto$20$Foo$bar20$IntIntIntIntIntIntIntIntIntIntIntIntIntIntIntIntIntIntIntInt(Interfaces.kt)
	at ru.spbau.mit.kotlin.protocols.benchmarks.InterfacesKt.run20(Interfaces.kt:43)
	at ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args20(SingleRun.kt:38)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.SingleRun_args20_jmhTest.args20_avgt_jmhStub(SingleRun_args20_jmhTest.java:190)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.SingleRun_args20_jmhTest.args20_AverageTime(SingleRun_args20_jmhTest.java:152)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.ArrayIndexOutOfBoundsException: 3
	at kotlin.jvm.internal.ProtocolCallSite.<init>(ProtocolCallSite.kt:144)
	at kotlin.jvm.internal.ProtocolCallSite$Companion.getBootstrap(ProtocolCallSite.kt:32)
	at kotlin.jvm.internal.ProtocolCallSite.getBootstrap(ProtocolCallSite.kt)
	at java.lang.invoke.CallSite.makeSite(CallSite.java:306)
	... 19 more




# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args3

# Run progress: 66.67% complete, ETA 00:00:00
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.BootstrapMethodError: call site initialization exception
	at java.lang.invoke.CallSite.makeSite(CallSite.java:341)
	at java.lang.invoke.MethodHandleNatives.linkCallSiteImpl(MethodHandleNatives.java:307)
	at java.lang.invoke.MethodHandleNatives.linkCallSite(MethodHandleNatives.java:297)
	at ru.spbau.mit.kotlin.protocols.benchmarks.InterfacesKt.proto$15$Foo$bar3$IntIntInt(Interfaces.kt)
	at ru.spbau.mit.kotlin.protocols.benchmarks.InterfacesKt.run3(Interfaces.kt:38)
	at ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args3(SingleRun.kt:23)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.SingleRun_args3_jmhTest.args3_avgt_jmhStub(SingleRun_args3_jmhTest.java:190)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.SingleRun_args3_jmhTest.args3_AverageTime(SingleRun_args3_jmhTest.java:152)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.ArrayIndexOutOfBoundsException: 3
	at kotlin.jvm.internal.ProtocolCallSite.<init>(ProtocolCallSite.kt:144)
	at kotlin.jvm.internal.ProtocolCallSite$Companion.getBootstrap(ProtocolCallSite.kt:32)
	at kotlin.jvm.internal.ProtocolCallSite.getBootstrap(ProtocolCallSite.kt)
	at java.lang.invoke.CallSite.makeSite(CallSite.java:306)
	... 19 more




# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args4

# Run progress: 77.78% complete, ETA 00:00:00
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.BootstrapMethodError: call site initialization exception
	at java.lang.invoke.CallSite.makeSite(CallSite.java:341)
	at java.lang.invoke.MethodHandleNatives.linkCallSiteImpl(MethodHandleNatives.java:307)
	at java.lang.invoke.MethodHandleNatives.linkCallSite(MethodHandleNatives.java:297)
	at ru.spbau.mit.kotlin.protocols.benchmarks.InterfacesKt.proto$16$Foo$bar4$IntIntIntInt(Interfaces.kt)
	at ru.spbau.mit.kotlin.protocols.benchmarks.InterfacesKt.run4(Interfaces.kt:39)
	at ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args4(SingleRun.kt:26)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.SingleRun_args4_jmhTest.args4_avgt_jmhStub(SingleRun_args4_jmhTest.java:190)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.SingleRun_args4_jmhTest.args4_AverageTime(SingleRun_args4_jmhTest.java:152)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.ArrayIndexOutOfBoundsException: 3
	at kotlin.jvm.internal.ProtocolCallSite.<init>(ProtocolCallSite.kt:144)
	at kotlin.jvm.internal.ProtocolCallSite$Companion.getBootstrap(ProtocolCallSite.kt:32)
	at kotlin.jvm.internal.ProtocolCallSite.getBootstrap(ProtocolCallSite.kt)
	at java.lang.invoke.CallSite.makeSite(CallSite.java:306)
	... 19 more




# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args5

# Run progress: 88.89% complete, ETA 00:00:00
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.BootstrapMethodError: call site initialization exception
	at java.lang.invoke.CallSite.makeSite(CallSite.java:341)
	at java.lang.invoke.MethodHandleNatives.linkCallSiteImpl(MethodHandleNatives.java:307)
	at java.lang.invoke.MethodHandleNatives.linkCallSite(MethodHandleNatives.java:297)
	at ru.spbau.mit.kotlin.protocols.benchmarks.InterfacesKt.proto$17$Foo$bar5$IntIntIntIntInt(Interfaces.kt)
	at ru.spbau.mit.kotlin.protocols.benchmarks.InterfacesKt.run5(Interfaces.kt:40)
	at ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args5(SingleRun.kt:29)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.SingleRun_args5_jmhTest.args5_avgt_jmhStub(SingleRun_args5_jmhTest.java:190)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.SingleRun_args5_jmhTest.args5_AverageTime(SingleRun_args5_jmhTest.java:152)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.ArrayIndexOutOfBoundsException: 3
	at kotlin.jvm.internal.ProtocolCallSite.<init>(ProtocolCallSite.kt:144)
	at kotlin.jvm.internal.ProtocolCallSite$Companion.getBootstrap(ProtocolCallSite.kt:32)
	at kotlin.jvm.internal.ProtocolCallSite.getBootstrap(ProtocolCallSite.kt)
	at java.lang.invoke.CallSite.makeSite(CallSite.java:306)
	... 19 more




# Run complete. Total time: 00:00:01

Benchmark  Mode  Cnt  Score   Error  Units
# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.MultiTarget.test

# Run progress: 0.00% complete, ETA 00:00:40
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.BootstrapMethodError: call site initialization exception
	at java.lang.invoke.CallSite.makeSite(CallSite.java:341)
	at java.lang.invoke.MethodHandleNatives.linkCallSiteImpl(MethodHandleNatives.java:307)
	at java.lang.invoke.MethodHandleNatives.linkCallSite(MethodHandleNatives.java:297)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MultiTarget.proto$23$Bar$foo$(MultiTarget.kt)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MultiTarget.test(MultiTarget.kt:45)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.MultiTarget_test_jmhTest.test_avgt_jmhStub(MultiTarget_test_jmhTest.java:190)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.MultiTarget_test_jmhTest.test_AverageTime(MultiTarget_test_jmhTest.java:152)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.ArrayIndexOutOfBoundsException: 3
	at kotlin.jvm.internal.ProtocolCallSite.<init>(ProtocolCallSite.kt:144)
	at kotlin.jvm.internal.ProtocolCallSite$Companion.getBootstrap(ProtocolCallSite.kt:32)
	at kotlin.jvm.internal.ProtocolCallSite.getBootstrap(ProtocolCallSite.kt)
	at java.lang.invoke.CallSite.makeSite(CallSite.java:306)
	... 18 more




# Run complete. Total time: 00:00:00

Benchmark  Mode  Cnt  Score   Error  Units
# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testExplicit10

# Run progress: 0.00% complete, ETA 00:06:40
# Fork: 1 of 1
# Warmup Iteration   1: 0.510 us/op
# Warmup Iteration   2: 0.479 us/op
# Warmup Iteration   3: 0.482 us/op
# Warmup Iteration   4: 0.468 us/op
# Warmup Iteration   5: 0.475 us/op
# Warmup Iteration   6: 0.487 us/op
# Warmup Iteration   7: 0.467 us/op
# Warmup Iteration   8: 0.468 us/op
# Warmup Iteration   9: 0.468 us/op
# Warmup Iteration  10: 0.468 us/op
# Warmup Iteration  11: 0.468 us/op
# Warmup Iteration  12: 0.468 us/op
# Warmup Iteration  13: 0.469 us/op
# Warmup Iteration  14: 0.467 us/op
# Warmup Iteration  15: 0.470 us/op
# Warmup Iteration  16: 0.468 us/op
# Warmup Iteration  17: 0.467 us/op
# Warmup Iteration  18: 0.469 us/op
# Warmup Iteration  19: 0.468 us/op
# Warmup Iteration  20: 0.468 us/op
Iteration   1: 0.498 us/op
Iteration   2: 0.468 us/op
Iteration   3: 0.468 us/op
Iteration   4: 0.468 us/op
Iteration   5: 0.470 us/op
Iteration   6: 0.469 us/op
Iteration   7: 0.468 us/op
Iteration   8: 0.471 us/op
Iteration   9: 0.481 us/op
Iteration  10: 0.469 us/op
Iteration  11: 0.468 us/op
Iteration  12: 0.468 us/op
Iteration  13: 0.469 us/op
Iteration  14: 0.468 us/op
Iteration  15: 0.471 us/op
Iteration  16: 0.469 us/op
Iteration  17: 0.469 us/op
Iteration  18: 0.469 us/op
Iteration  19: 0.468 us/op
Iteration  20: 0.470 us/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testExplicit10":
  0.471 ±(99.9%) 0.006 us/op [Average]
  (min, avg, max) = (0.468, 0.471, 0.498), stdev = 0.007
  CI (99.9%): [0.465, 0.477] (assumes normal distribution)


# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testExplicit100

# Run progress: 10.00% complete, ETA 00:06:01
# Fork: 1 of 1
# Warmup Iteration   1: 8.534 us/op
# Warmup Iteration   2: 8.087 us/op
# Warmup Iteration   3: 8.103 us/op
# Warmup Iteration   4: 8.074 us/op
# Warmup Iteration   5: 8.260 us/op
# Warmup Iteration   6: 7.931 us/op
# Warmup Iteration   7: 7.949 us/op
# Warmup Iteration   8: 7.953 us/op
# Warmup Iteration   9: 7.939 us/op
# Warmup Iteration  10: 7.960 us/op
# Warmup Iteration  11: 7.952 us/op
# Warmup Iteration  12: 7.954 us/op
# Warmup Iteration  13: 7.942 us/op
# Warmup Iteration  14: 8.000 us/op
# Warmup Iteration  15: 7.952 us/op
# Warmup Iteration  16: 7.952 us/op
# Warmup Iteration  17: 7.950 us/op
# Warmup Iteration  18: 7.926 us/op
# Warmup Iteration  19: 7.933 us/op
# Warmup Iteration  20: 7.922 us/op
Iteration   1: 7.938 us/op
Iteration   2: 7.918 us/op
Iteration   3: 7.944 us/op
Iteration   4: 8.107 us/op
Iteration   5: 7.939 us/op
Iteration   6: 7.943 us/op
Iteration   7: 7.953 us/op
Iteration   8: 7.931 us/op
Iteration   9: 7.932 us/op
Iteration  10: 7.949 us/op
Iteration  11: 7.954 us/op
Iteration  12: 7.946 us/op
Iteration  13: 7.949 us/op
Iteration  14: 7.983 us/op
Iteration  15: 7.978 us/op
Iteration  16: 7.971 us/op
Iteration  17: 7.961 us/op
Iteration  18: 8.018 us/op
Iteration  19: 8.015 us/op
Iteration  20: 7.947 us/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testExplicit100":
  7.964 ±(99.9%) 0.037 us/op [Average]
  (min, avg, max) = (7.918, 7.964, 8.107), stdev = 0.042
  CI (99.9%): [7.927, 8.001] (assumes normal distribution)


# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testExplicit1000

# Run progress: 20.00% complete, ETA 00:05:21
# Fork: 1 of 1
# Warmup Iteration   1: 115.582 us/op
# Warmup Iteration   2: 109.288 us/op
# Warmup Iteration   3: 108.923 us/op
# Warmup Iteration   4: 110.530 us/op
# Warmup Iteration   5: 109.482 us/op
# Warmup Iteration   6: 107.786 us/op
# Warmup Iteration   7: 107.296 us/op
# Warmup Iteration   8: 107.601 us/op
# Warmup Iteration   9: 107.473 us/op
# Warmup Iteration  10: 107.674 us/op
# Warmup Iteration  11: 107.876 us/op
# Warmup Iteration  12: 107.581 us/op
# Warmup Iteration  13: 107.763 us/op
# Warmup Iteration  14: 109.352 us/op
# Warmup Iteration  15: 107.676 us/op
# Warmup Iteration  16: 107.807 us/op
# Warmup Iteration  17: 107.197 us/op
# Warmup Iteration  18: 107.584 us/op
# Warmup Iteration  19: 107.600 us/op
# Warmup Iteration  20: 108.597 us/op
Iteration   1: 109.497 us/op
Iteration   2: 107.582 us/op
Iteration   3: 107.961 us/op
Iteration   4: 108.357 us/op
Iteration   5: 107.543 us/op
Iteration   6: 110.133 us/op
Iteration   7: 109.471 us/op
Iteration   8: 107.763 us/op
Iteration   9: 107.669 us/op
Iteration  10: 109.884 us/op
Iteration  11: 107.477 us/op
Iteration  12: 107.829 us/op
Iteration  13: 107.610 us/op
Iteration  14: 108.234 us/op
Iteration  15: 107.938 us/op
Iteration  16: 108.071 us/op
Iteration  17: 108.165 us/op
Iteration  18: 108.172 us/op
Iteration  19: 108.006 us/op
Iteration  20: 108.416 us/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testExplicit1000":
  108.289 ±(99.9%) 0.698 us/op [Average]
  (min, avg, max) = (107.477, 108.289, 110.133), stdev = 0.803
  CI (99.9%): [107.591, 108.987] (assumes normal distribution)


# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testExplicit10000

# Run progress: 30.00% complete, ETA 00:04:41
# Fork: 1 of 1
# Warmup Iteration   1: 1407.290 us/op
# Warmup Iteration   2: 1335.748 us/op
# Warmup Iteration   3: 1303.522 us/op
# Warmup Iteration   4: 1349.212 us/op
# Warmup Iteration   5: 1302.345 us/op
# Warmup Iteration   6: 1302.795 us/op
# Warmup Iteration   7: 1407.813 us/op
# Warmup Iteration   8: 1317.833 us/op
# Warmup Iteration   9: 1300.792 us/op
# Warmup Iteration  10: 1299.664 us/op
# Warmup Iteration  11: 1366.494 us/op
# Warmup Iteration  12: 1304.104 us/op
# Warmup Iteration  13: 1301.037 us/op
# Warmup Iteration  14: 1320.533 us/op
# Warmup Iteration  15: 1302.033 us/op
# Warmup Iteration  16: 1302.949 us/op
# Warmup Iteration  17: 1309.074 us/op
# Warmup Iteration  18: 1301.656 us/op
# Warmup Iteration  19: 1301.203 us/op
# Warmup Iteration  20: 1302.746 us/op
Iteration   1: 1301.690 us/op
Iteration   2: 1303.445 us/op
Iteration   3: 1301.054 us/op
Iteration   4: 1316.912 us/op
Iteration   5: 1301.477 us/op
Iteration   6: 1414.958 us/op
Iteration   7: 1300.387 us/op
Iteration   8: 1301.189 us/op
Iteration   9: 1301.359 us/op
Iteration  10: 1302.676 us/op
Iteration  11: 1301.348 us/op
Iteration  12: 1320.374 us/op
Iteration  13: 1302.597 us/op
Iteration  14: 1312.753 us/op
Iteration  15: 1320.087 us/op
Iteration  16: 1303.693 us/op
Iteration  17: 1305.503 us/op
Iteration  18: 1306.890 us/op
Iteration  19: 1306.391 us/op
Iteration  20: 1307.524 us/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testExplicit10000":
  1311.615 ±(99.9%) 21.832 us/op [Average]
  (min, avg, max) = (1300.387, 1311.615, 1414.958), stdev = 25.142
  CI (99.9%): [1289.783, 1333.448] (assumes normal distribution)


# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testExplicit100000

# Run progress: 40.00% complete, ETA 00:04:01
# Fork: 1 of 1
# Warmup Iteration   1: 17315.350 us/op
# Warmup Iteration   2: 16527.652 us/op
# Warmup Iteration   3: 16201.082 us/op
# Warmup Iteration   4: 16815.833 us/op
# Warmup Iteration   5: 16124.055 us/op
# Warmup Iteration   6: 16131.391 us/op
# Warmup Iteration   7: 16596.911 us/op
# Warmup Iteration   8: 16152.900 us/op
# Warmup Iteration   9: 16269.719 us/op
# Warmup Iteration  10: 16094.125 us/op
# Warmup Iteration  11: 16094.901 us/op
# Warmup Iteration  12: 16263.115 us/op
# Warmup Iteration  13: 16097.278 us/op
# Warmup Iteration  14: 16207.799 us/op
# Warmup Iteration  15: 16128.063 us/op
# Warmup Iteration  16: 16257.944 us/op
# Warmup Iteration  17: 16231.052 us/op
# Warmup Iteration  18: 16113.671 us/op
# Warmup Iteration  19: 16099.385 us/op
# Warmup Iteration  20: 16212.025 us/op
Iteration   1: 16220.417 us/op
Iteration   2: 16140.913 us/op
Iteration   3: 16296.767 us/op
Iteration   4: 16080.803 us/op
Iteration   5: 16115.338 us/op
Iteration   6: 16631.092 us/op
Iteration   7: 16099.647 us/op
Iteration   8: 16069.937 us/op
Iteration   9: 16075.174 us/op
Iteration  10: 16104.818 us/op
Iteration  11: 16171.288 us/op
Iteration  12: 16205.463 us/op
Iteration  13: 16313.355 us/op
Iteration  14: 16108.619 us/op
Iteration  15: 16244.775 us/op
Iteration  16: 16084.323 us/op
Iteration  17: 16240.832 us/op
Iteration  18: 16161.040 us/op
Iteration  19: 16184.508 us/op
Iteration  20: 16205.546 us/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testExplicit100000":
  16187.733 ±(99.9%) 110.918 us/op [Average]
  (min, avg, max) = (16069.937, 16187.733, 16631.092), stdev = 127.734
  CI (99.9%): [16076.814, 16298.651] (assumes normal distribution)


# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testImplicit10

# Run progress: 50.00% complete, ETA 00:03:21
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.BootstrapMethodError: call site initialization exception
	at java.lang.invoke.CallSite.makeSite(CallSite.java:341)
	at java.lang.invoke.MethodHandleNatives.linkCallSiteImpl(MethodHandleNatives.java:307)
	at java.lang.invoke.MethodHandleNatives.linkCallSite(MethodHandleNatives.java:297)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.proto$21$ImplicitComparable$lessOrEq$ImplicitComparable(MergeSort.kt)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeImplicit(MergeSort.kt:35)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:87)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testImplicit10(MergeSort.kt:143)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.MergeSort_testImplicit10_jmhTest.testImplicit10_avgt_jmhStub(MergeSort_testImplicit10_jmhTest.java:190)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.MergeSort_testImplicit10_jmhTest.testImplicit10_AverageTime(MergeSort_testImplicit10_jmhTest.java:152)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.ArrayIndexOutOfBoundsException: 3
	at kotlin.jvm.internal.ProtocolCallSite.<init>(ProtocolCallSite.kt:144)
	at kotlin.jvm.internal.ProtocolCallSite$Companion.getBootstrap(ProtocolCallSite.kt:32)
	at kotlin.jvm.internal.ProtocolCallSite.getBootstrap(ProtocolCallSite.kt)
	at java.lang.invoke.CallSite.makeSite(CallSite.java:306)
	... 23 more




# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testImplicit100

# Run progress: 60.00% complete, ETA 00:02:14
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.BootstrapMethodError: call site initialization exception
	at java.lang.invoke.CallSite.makeSite(CallSite.java:341)
	at java.lang.invoke.MethodHandleNatives.linkCallSiteImpl(MethodHandleNatives.java:307)
	at java.lang.invoke.MethodHandleNatives.linkCallSite(MethodHandleNatives.java:297)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.proto$21$ImplicitComparable$lessOrEq$ImplicitComparable(MergeSort.kt)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeImplicit(MergeSort.kt:35)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:87)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testImplicit100(MergeSort.kt:146)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.MergeSort_testImplicit100_jmhTest.testImplicit100_avgt_jmhStub(MergeSort_testImplicit100_jmhTest.java:190)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.MergeSort_testImplicit100_jmhTest.testImplicit100_AverageTime(MergeSort_testImplicit100_jmhTest.java:152)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.ArrayIndexOutOfBoundsException: 3
	at kotlin.jvm.internal.ProtocolCallSite.<init>(ProtocolCallSite.kt:144)
	at kotlin.jvm.internal.ProtocolCallSite$Companion.getBootstrap(ProtocolCallSite.kt:32)
	at kotlin.jvm.internal.ProtocolCallSite.getBootstrap(ProtocolCallSite.kt)
	at java.lang.invoke.CallSite.makeSite(CallSite.java:306)
	... 26 more




# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testImplicit1000

# Run progress: 70.00% complete, ETA 00:01:26
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.BootstrapMethodError: call site initialization exception
	at java.lang.invoke.CallSite.makeSite(CallSite.java:341)
	at java.lang.invoke.MethodHandleNatives.linkCallSiteImpl(MethodHandleNatives.java:307)
	at java.lang.invoke.MethodHandleNatives.linkCallSite(MethodHandleNatives.java:297)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.proto$21$ImplicitComparable$lessOrEq$ImplicitComparable(MergeSort.kt)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeImplicit(MergeSort.kt:35)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:87)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testImplicit1000(MergeSort.kt:149)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.MergeSort_testImplicit1000_jmhTest.testImplicit1000_avgt_jmhStub(MergeSort_testImplicit1000_jmhTest.java:190)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.MergeSort_testImplicit1000_jmhTest.testImplicit1000_AverageTime(MergeSort_testImplicit1000_jmhTest.java:152)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.ArrayIndexOutOfBoundsException: 3
	at kotlin.jvm.internal.ProtocolCallSite.<init>(ProtocolCallSite.kt:144)
	at kotlin.jvm.internal.ProtocolCallSite$Companion.getBootstrap(ProtocolCallSite.kt:32)
	at kotlin.jvm.internal.ProtocolCallSite.getBootstrap(ProtocolCallSite.kt)
	at java.lang.invoke.CallSite.makeSite(CallSite.java:306)
	... 29 more




# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testImplicit10000

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.BootstrapMethodError: call site initialization exception
	at java.lang.invoke.CallSite.makeSite(CallSite.java:341)
	at java.lang.invoke.MethodHandleNatives.linkCallSiteImpl(MethodHandleNatives.java:307)
	at java.lang.invoke.MethodHandleNatives.linkCallSite(MethodHandleNatives.java:297)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.proto$21$ImplicitComparable$lessOrEq$ImplicitComparable(MergeSort.kt)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeImplicit(MergeSort.kt:35)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:87)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testImplicit10000(MergeSort.kt:152)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.MergeSort_testImplicit10000_jmhTest.testImplicit10000_avgt_jmhStub(MergeSort_testImplicit10000_jmhTest.java:190)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.MergeSort_testImplicit10000_jmhTest.testImplicit10000_AverageTime(MergeSort_testImplicit10000_jmhTest.java:152)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.ArrayIndexOutOfBoundsException: 3
	at kotlin.jvm.internal.ProtocolCallSite.<init>(ProtocolCallSite.kt:144)
	at kotlin.jvm.internal.ProtocolCallSite$Companion.getBootstrap(ProtocolCallSite.kt:32)
	at kotlin.jvm.internal.ProtocolCallSite.getBootstrap(ProtocolCallSite.kt)
	at java.lang.invoke.CallSite.makeSite(CallSite.java:306)
	... 33 more




# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testImplicit100000

# Run progress: 90.00% complete, ETA 00:00:22
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.BootstrapMethodError: call site initialization exception
	at java.lang.invoke.CallSite.makeSite(CallSite.java:341)
	at java.lang.invoke.MethodHandleNatives.linkCallSiteImpl(MethodHandleNatives.java:307)
	at java.lang.invoke.MethodHandleNatives.linkCallSite(MethodHandleNatives.java:297)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.proto$21$ImplicitComparable$lessOrEq$ImplicitComparable(MergeSort.kt)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeImplicit(MergeSort.kt:35)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:87)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testImplicit100000(MergeSort.kt:155)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.MergeSort_testImplicit100000_jmhTest.testImplicit100000_avgt_jmhStub(MergeSort_testImplicit100000_jmhTest.java:190)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.MergeSort_testImplicit100000_jmhTest.testImplicit100000_AverageTime(MergeSort_testImplicit100000_jmhTest.java:152)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.ArrayIndexOutOfBoundsException: 3
	at kotlin.jvm.internal.ProtocolCallSite.<init>(ProtocolCallSite.kt:144)
	at kotlin.jvm.internal.ProtocolCallSite$Companion.getBootstrap(ProtocolCallSite.kt:32)
	at kotlin.jvm.internal.ProtocolCallSite.getBootstrap(ProtocolCallSite.kt)
	at java.lang.invoke.CallSite.makeSite(CallSite.java:306)
	... 36 more




# Run complete. Total time: 00:03:22

Benchmark                     Mode  Cnt      Score     Error  Units
MergeSort.testExplicit10      avgt   20      0.471 ±   0.006  us/op
MergeSort.testExplicit100     avgt   20      7.964 ±   0.037  us/op
MergeSort.testExplicit1000    avgt   20    108.289 ±   0.698  us/op
MergeSort.testExplicit10000   avgt   20   1311.615 ±  21.832  us/op
MergeSort.testExplicit100000  avgt   20  16187.733 ± 110.918  us/op
[DONE] ./indy_rw_list.xml
[START] ./indy_sync_list.xml
# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args0

# Run progress: 0.00% complete, ETA 00:06:00
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.BootstrapMethodError: call site initialization exception
	at java.lang.invoke.CallSite.makeSite(CallSite.java:341)
	at java.lang.invoke.MethodHandleNatives.linkCallSiteImpl(MethodHandleNatives.java:307)
	at java.lang.invoke.MethodHandleNatives.linkCallSite(MethodHandleNatives.java:297)
	at ru.spbau.mit.kotlin.protocols.benchmarks.InterfacesKt.proto$12$Foo$bar0$(Interfaces.kt)
	at ru.spbau.mit.kotlin.protocols.benchmarks.InterfacesKt.run0(Interfaces.kt:35)
	at ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args0(SingleRun.kt:14)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.SingleRun_args0_jmhTest.args0_avgt_jmhStub(SingleRun_args0_jmhTest.java:190)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.SingleRun_args0_jmhTest.args0_AverageTime(SingleRun_args0_jmhTest.java:152)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.ArrayIndexOutOfBoundsException: 2
	at kotlin.jvm.internal.ProtocolCallSite.<init>(ProtocolCallSite.kt:144)
	at kotlin.jvm.internal.ProtocolCallSite$Companion.getBootstrap(ProtocolCallSite.kt:32)
	at kotlin.jvm.internal.ProtocolCallSite.getBootstrap(ProtocolCallSite.kt)
	at java.lang.invoke.CallSite.makeSite(CallSite.java:306)
	... 19 more




# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args1

# Run progress: 11.11% complete, ETA 00:00:01
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.BootstrapMethodError: call site initialization exception
	at java.lang.invoke.CallSite.makeSite(CallSite.java:341)
	at java.lang.invoke.MethodHandleNatives.linkCallSiteImpl(MethodHandleNatives.java:307)
	at java.lang.invoke.MethodHandleNatives.linkCallSite(MethodHandleNatives.java:297)
	at ru.spbau.mit.kotlin.protocols.benchmarks.InterfacesKt.proto$13$Foo$bar1$Int(Interfaces.kt)
	at ru.spbau.mit.kotlin.protocols.benchmarks.InterfacesKt.run1(Interfaces.kt:36)
	at ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args1(SingleRun.kt:17)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.SingleRun_args1_jmhTest.args1_avgt_jmhStub(SingleRun_args1_jmhTest.java:190)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.SingleRun_args1_jmhTest.args1_AverageTime(SingleRun_args1_jmhTest.java:152)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.ArrayIndexOutOfBoundsException: 2
	at kotlin.jvm.internal.ProtocolCallSite.<init>(ProtocolCallSite.kt:144)
	at kotlin.jvm.internal.ProtocolCallSite$Companion.getBootstrap(ProtocolCallSite.kt:32)
	at kotlin.jvm.internal.ProtocolCallSite.getBootstrap(ProtocolCallSite.kt)
	at java.lang.invoke.CallSite.makeSite(CallSite.java:306)
	... 19 more




# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args10

# Run progress: 22.22% complete, ETA 00:00:01
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.BootstrapMethodError: call site initialization exception
	at java.lang.invoke.CallSite.makeSite(CallSite.java:341)
	at java.lang.invoke.MethodHandleNatives.linkCallSiteImpl(MethodHandleNatives.java:307)
	at java.lang.invoke.MethodHandleNatives.linkCallSite(MethodHandleNatives.java:297)
	at ru.spbau.mit.kotlin.protocols.benchmarks.InterfacesKt.proto$18$Foo$bar10$IntIntIntIntIntIntIntIntIntInt(Interfaces.kt)
	at ru.spbau.mit.kotlin.protocols.benchmarks.InterfacesKt.run10(Interfaces.kt:41)
	at ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args10(SingleRun.kt:32)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.SingleRun_args10_jmhTest.args10_avgt_jmhStub(SingleRun_args10_jmhTest.java:190)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.SingleRun_args10_jmhTest.args10_AverageTime(SingleRun_args10_jmhTest.java:152)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.ArrayIndexOutOfBoundsException: 2
	at kotlin.jvm.internal.ProtocolCallSite.<init>(ProtocolCallSite.kt:144)
	at kotlin.jvm.internal.ProtocolCallSite$Companion.getBootstrap(ProtocolCallSite.kt:32)
	at kotlin.jvm.internal.ProtocolCallSite.getBootstrap(ProtocolCallSite.kt)
	at java.lang.invoke.CallSite.makeSite(CallSite.java:306)
	... 19 more




# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args15

# Run progress: 33.33% complete, ETA 00:00:01
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.BootstrapMethodError: call site initialization exception
	at java.lang.invoke.CallSite.makeSite(CallSite.java:341)
	at java.lang.invoke.MethodHandleNatives.linkCallSiteImpl(MethodHandleNatives.java:307)
	at java.lang.invoke.MethodHandleNatives.linkCallSite(MethodHandleNatives.java:297)
	at ru.spbau.mit.kotlin.protocols.benchmarks.InterfacesKt.proto$19$Foo$bar15$IntIntIntIntIntIntIntIntIntIntIntIntIntIntInt(Interfaces.kt)
	at ru.spbau.mit.kotlin.protocols.benchmarks.InterfacesKt.run15(Interfaces.kt:42)
	at ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args15(SingleRun.kt:35)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.SingleRun_args15_jmhTest.args15_avgt_jmhStub(SingleRun_args15_jmhTest.java:190)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.SingleRun_args15_jmhTest.args15_AverageTime(SingleRun_args15_jmhTest.java:152)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.ArrayIndexOutOfBoundsException: 2
	at kotlin.jvm.internal.ProtocolCallSite.<init>(ProtocolCallSite.kt:144)
	at kotlin.jvm.internal.ProtocolCallSite$Companion.getBootstrap(ProtocolCallSite.kt:32)
	at kotlin.jvm.internal.ProtocolCallSite.getBootstrap(ProtocolCallSite.kt)
	at java.lang.invoke.CallSite.makeSite(CallSite.java:306)
	... 19 more




# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args2

# Run progress: 44.44% complete, ETA 00:00:01
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.BootstrapMethodError: call site initialization exception
	at java.lang.invoke.CallSite.makeSite(CallSite.java:341)
	at java.lang.invoke.MethodHandleNatives.linkCallSiteImpl(MethodHandleNatives.java:307)
	at java.lang.invoke.MethodHandleNatives.linkCallSite(MethodHandleNatives.java:297)
	at ru.spbau.mit.kotlin.protocols.benchmarks.InterfacesKt.proto$14$Foo$bar2$IntInt(Interfaces.kt)
	at ru.spbau.mit.kotlin.protocols.benchmarks.InterfacesKt.run2(Interfaces.kt:37)
	at ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args2(SingleRun.kt:20)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.SingleRun_args2_jmhTest.args2_avgt_jmhStub(SingleRun_args2_jmhTest.java:190)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.SingleRun_args2_jmhTest.args2_AverageTime(SingleRun_args2_jmhTest.java:152)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.ArrayIndexOutOfBoundsException: 2
	at kotlin.jvm.internal.ProtocolCallSite.<init>(ProtocolCallSite.kt:144)
	at kotlin.jvm.internal.ProtocolCallSite$Companion.getBootstrap(ProtocolCallSite.kt:32)
	at kotlin.jvm.internal.ProtocolCallSite.getBootstrap(ProtocolCallSite.kt)
	at java.lang.invoke.CallSite.makeSite(CallSite.java:306)
	... 19 more




# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args20

# Run progress: 55.56% complete, ETA 00:00:00
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.BootstrapMethodError: call site initialization exception
	at java.lang.invoke.CallSite.makeSite(CallSite.java:341)
	at java.lang.invoke.MethodHandleNatives.linkCallSiteImpl(MethodHandleNatives.java:307)
	at java.lang.invoke.MethodHandleNatives.linkCallSite(MethodHandleNatives.java:297)
	at ru.spbau.mit.kotlin.protocols.benchmarks.InterfacesKt.proto$20$Foo$bar20$IntIntIntIntIntIntIntIntIntIntIntIntIntIntIntIntIntIntIntInt(Interfaces.kt)
	at ru.spbau.mit.kotlin.protocols.benchmarks.InterfacesKt.run20(Interfaces.kt:43)
	at ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args20(SingleRun.kt:38)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.SingleRun_args20_jmhTest.args20_avgt_jmhStub(SingleRun_args20_jmhTest.java:190)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.SingleRun_args20_jmhTest.args20_AverageTime(SingleRun_args20_jmhTest.java:152)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.ArrayIndexOutOfBoundsException: 2
	at kotlin.jvm.internal.ProtocolCallSite.<init>(ProtocolCallSite.kt:144)
	at kotlin.jvm.internal.ProtocolCallSite$Companion.getBootstrap(ProtocolCallSite.kt:32)
	at kotlin.jvm.internal.ProtocolCallSite.getBootstrap(ProtocolCallSite.kt)
	at java.lang.invoke.CallSite.makeSite(CallSite.java:306)
	... 19 more




# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args3

# Run progress: 66.67% complete, ETA 00:00:00
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.BootstrapMethodError: call site initialization exception
	at java.lang.invoke.CallSite.makeSite(CallSite.java:341)
	at java.lang.invoke.MethodHandleNatives.linkCallSiteImpl(MethodHandleNatives.java:307)
	at java.lang.invoke.MethodHandleNatives.linkCallSite(MethodHandleNatives.java:297)
	at ru.spbau.mit.kotlin.protocols.benchmarks.InterfacesKt.proto$15$Foo$bar3$IntIntInt(Interfaces.kt)
	at ru.spbau.mit.kotlin.protocols.benchmarks.InterfacesKt.run3(Interfaces.kt:38)
	at ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args3(SingleRun.kt:23)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.SingleRun_args3_jmhTest.args3_avgt_jmhStub(SingleRun_args3_jmhTest.java:190)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.SingleRun_args3_jmhTest.args3_AverageTime(SingleRun_args3_jmhTest.java:152)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.ArrayIndexOutOfBoundsException: 2
	at kotlin.jvm.internal.ProtocolCallSite.<init>(ProtocolCallSite.kt:144)
	at kotlin.jvm.internal.ProtocolCallSite$Companion.getBootstrap(ProtocolCallSite.kt:32)
	at kotlin.jvm.internal.ProtocolCallSite.getBootstrap(ProtocolCallSite.kt)
	at java.lang.invoke.CallSite.makeSite(CallSite.java:306)
	... 19 more




# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args4

# Run progress: 77.78% complete, ETA 00:00:00
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.BootstrapMethodError: call site initialization exception
	at java.lang.invoke.CallSite.makeSite(CallSite.java:341)
	at java.lang.invoke.MethodHandleNatives.linkCallSiteImpl(MethodHandleNatives.java:307)
	at java.lang.invoke.MethodHandleNatives.linkCallSite(MethodHandleNatives.java:297)
	at ru.spbau.mit.kotlin.protocols.benchmarks.InterfacesKt.proto$16$Foo$bar4$IntIntIntInt(Interfaces.kt)
	at ru.spbau.mit.kotlin.protocols.benchmarks.InterfacesKt.run4(Interfaces.kt:39)
	at ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args4(SingleRun.kt:26)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.SingleRun_args4_jmhTest.args4_avgt_jmhStub(SingleRun_args4_jmhTest.java:190)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.SingleRun_args4_jmhTest.args4_AverageTime(SingleRun_args4_jmhTest.java:152)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.ArrayIndexOutOfBoundsException: 2
	at kotlin.jvm.internal.ProtocolCallSite.<init>(ProtocolCallSite.kt:144)
	at kotlin.jvm.internal.ProtocolCallSite$Companion.getBootstrap(ProtocolCallSite.kt:32)
	at kotlin.jvm.internal.ProtocolCallSite.getBootstrap(ProtocolCallSite.kt)
	at java.lang.invoke.CallSite.makeSite(CallSite.java:306)
	... 19 more




# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args5

# Run progress: 88.89% complete, ETA 00:00:00
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.BootstrapMethodError: call site initialization exception
	at java.lang.invoke.CallSite.makeSite(CallSite.java:341)
	at java.lang.invoke.MethodHandleNatives.linkCallSiteImpl(MethodHandleNatives.java:307)
	at java.lang.invoke.MethodHandleNatives.linkCallSite(MethodHandleNatives.java:297)
	at ru.spbau.mit.kotlin.protocols.benchmarks.InterfacesKt.proto$17$Foo$bar5$IntIntIntIntInt(Interfaces.kt)
	at ru.spbau.mit.kotlin.protocols.benchmarks.InterfacesKt.run5(Interfaces.kt:40)
	at ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args5(SingleRun.kt:29)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.SingleRun_args5_jmhTest.args5_avgt_jmhStub(SingleRun_args5_jmhTest.java:190)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.SingleRun_args5_jmhTest.args5_AverageTime(SingleRun_args5_jmhTest.java:152)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.ArrayIndexOutOfBoundsException: 2
	at kotlin.jvm.internal.ProtocolCallSite.<init>(ProtocolCallSite.kt:144)
	at kotlin.jvm.internal.ProtocolCallSite$Companion.getBootstrap(ProtocolCallSite.kt:32)
	at kotlin.jvm.internal.ProtocolCallSite.getBootstrap(ProtocolCallSite.kt)
	at java.lang.invoke.CallSite.makeSite(CallSite.java:306)
	... 19 more




# Run complete. Total time: 00:00:01

Benchmark  Mode  Cnt  Score   Error  Units
# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.MultiTarget.test

# Run progress: 0.00% complete, ETA 00:00:40
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.BootstrapMethodError: call site initialization exception
	at java.lang.invoke.CallSite.makeSite(CallSite.java:341)
	at java.lang.invoke.MethodHandleNatives.linkCallSiteImpl(MethodHandleNatives.java:307)
	at java.lang.invoke.MethodHandleNatives.linkCallSite(MethodHandleNatives.java:297)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MultiTarget.proto$23$Bar$foo$(MultiTarget.kt)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MultiTarget.test(MultiTarget.kt:45)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.MultiTarget_test_jmhTest.test_avgt_jmhStub(MultiTarget_test_jmhTest.java:190)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.MultiTarget_test_jmhTest.test_AverageTime(MultiTarget_test_jmhTest.java:152)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.ArrayIndexOutOfBoundsException: 2
	at kotlin.jvm.internal.ProtocolCallSite.<init>(ProtocolCallSite.kt:144)
	at kotlin.jvm.internal.ProtocolCallSite$Companion.getBootstrap(ProtocolCallSite.kt:32)
	at kotlin.jvm.internal.ProtocolCallSite.getBootstrap(ProtocolCallSite.kt)
	at java.lang.invoke.CallSite.makeSite(CallSite.java:306)
	... 18 more




# Run complete. Total time: 00:00:00

Benchmark  Mode  Cnt  Score   Error  Units
# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testExplicit10

# Run progress: 0.00% complete, ETA 00:06:40
# Fork: 1 of 1
# Warmup Iteration   1: 0.508 us/op
# Warmup Iteration   2: 0.483 us/op
# Warmup Iteration   3: 0.497 us/op
# Warmup Iteration   4: 0.481 us/op
# Warmup Iteration   5: 0.471 us/op
# Warmup Iteration   6: 0.485 us/op
# Warmup Iteration   7: 0.484 us/op
# Warmup Iteration   8: 0.541 us/op
# Warmup Iteration   9: 0.491 us/op
# Warmup Iteration  10: 0.518 us/op
# Warmup Iteration  11: 0.466 us/op
# Warmup Iteration  12: 0.532 us/op
# Warmup Iteration  13: 0.470 us/op
# Warmup Iteration  14: 0.512 us/op
# Warmup Iteration  15: 0.466 us/op
# Warmup Iteration  16: 0.478 us/op
# Warmup Iteration  17: 0.466 us/op
# Warmup Iteration  18: 0.466 us/op
# Warmup Iteration  19: 0.468 us/op
# Warmup Iteration  20: 0.466 us/op
Iteration   1: 0.466 us/op
Iteration   2: 0.467 us/op
Iteration   3: 0.469 us/op
Iteration   4: 0.467 us/op
Iteration   5: 0.466 us/op
Iteration   6: 0.468 us/op
Iteration   7: 0.467 us/op
Iteration   8: 0.466 us/op
Iteration   9: 0.466 us/op
Iteration  10: 0.466 us/op
Iteration  11: 0.466 us/op
Iteration  12: 0.466 us/op
Iteration  13: 0.468 us/op
Iteration  14: 0.467 us/op
Iteration  15: 0.466 us/op
Iteration  16: 0.467 us/op
Iteration  17: 0.466 us/op
Iteration  18: 0.466 us/op
Iteration  19: 0.467 us/op
Iteration  20: 0.469 us/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testExplicit10":
  0.467 ±(99.9%) 0.001 us/op [Average]
  (min, avg, max) = (0.466, 0.467, 0.469), stdev = 0.001
  CI (99.9%): [0.466, 0.468] (assumes normal distribution)


# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testExplicit100

# Run progress: 10.00% complete, ETA 00:06:01
# Fork: 1 of 1
# Warmup Iteration   1: 8.535 us/op
# Warmup Iteration   2: 8.046 us/op
# Warmup Iteration   3: 8.051 us/op
# Warmup Iteration   4: 7.932 us/op
# Warmup Iteration   5: 8.148 us/op
# Warmup Iteration   6: 7.851 us/op
# Warmup Iteration   7: 8.073 us/op
# Warmup Iteration   8: 7.908 us/op
# Warmup Iteration   9: 7.840 us/op
# Warmup Iteration  10: 7.850 us/op
# Warmup Iteration  11: 7.857 us/op
# Warmup Iteration  12: 7.847 us/op
# Warmup Iteration  13: 7.881 us/op
# Warmup Iteration  14: 7.850 us/op
# Warmup Iteration  15: 7.862 us/op
# Warmup Iteration  16: 7.868 us/op
# Warmup Iteration  17: 7.871 us/op
# Warmup Iteration  18: 7.869 us/op
# Warmup Iteration  19: 7.851 us/op
# Warmup Iteration  20: 7.856 us/op
Iteration   1: 7.865 us/op
Iteration   2: 7.871 us/op
Iteration   3: 7.906 us/op
Iteration   4: 7.864 us/op
Iteration   5: 7.865 us/op
Iteration   6: 7.857 us/op
Iteration   7: 7.865 us/op
Iteration   8: 8.356 us/op
Iteration   9: 7.867 us/op
Iteration  10: 7.865 us/op
Iteration  11: 7.873 us/op
Iteration  12: 7.880 us/op
Iteration  13: 7.930 us/op
Iteration  14: 7.867 us/op
Iteration  15: 7.892 us/op
Iteration  16: 7.872 us/op
Iteration  17: 7.902 us/op
Iteration  18: 7.968 us/op
Iteration  19: 7.884 us/op
Iteration  20: 7.882 us/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testExplicit100":
  7.907 ±(99.9%) 0.095 us/op [Average]
  (min, avg, max) = (7.857, 7.907, 8.356), stdev = 0.109
  CI (99.9%): [7.812, 8.001] (assumes normal distribution)


# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testExplicit1000

# Run progress: 20.00% complete, ETA 00:05:21
# Fork: 1 of 1
# Warmup Iteration   1: 115.334 us/op
# Warmup Iteration   2: 110.858 us/op
# Warmup Iteration   3: 108.516 us/op
# Warmup Iteration   4: 108.728 us/op
# Warmup Iteration   5: 109.225 us/op
# Warmup Iteration   6: 107.612 us/op
# Warmup Iteration   7: 106.910 us/op
# Warmup Iteration   8: 107.345 us/op
# Warmup Iteration   9: 107.268 us/op
# Warmup Iteration  10: 107.555 us/op
# Warmup Iteration  11: 107.559 us/op
# Warmup Iteration  12: 108.321 us/op
# Warmup Iteration  13: 107.626 us/op
# Warmup Iteration  14: 107.688 us/op
# Warmup Iteration  15: 107.661 us/op
# Warmup Iteration  16: 107.593 us/op
# Warmup Iteration  17: 112.776 us/op
# Warmup Iteration  18: 107.350 us/op
# Warmup Iteration  19: 107.492 us/op
# Warmup Iteration  20: 107.473 us/op
Iteration   1: 107.468 us/op
Iteration   2: 108.862 us/op
Iteration   3: 108.327 us/op
Iteration   4: 107.448 us/op
Iteration   5: 107.703 us/op
Iteration   6: 107.819 us/op
Iteration   7: 107.427 us/op
Iteration   8: 107.771 us/op
Iteration   9: 107.652 us/op
Iteration  10: 107.868 us/op
Iteration  11: 107.662 us/op
Iteration  12: 108.408 us/op
Iteration  13: 107.696 us/op
Iteration  14: 107.737 us/op
Iteration  15: 108.193 us/op
Iteration  16: 108.100 us/op
Iteration  17: 108.172 us/op
Iteration  18: 108.342 us/op
Iteration  19: 108.103 us/op
Iteration  20: 108.213 us/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testExplicit1000":
  107.949 ±(99.9%) 0.328 us/op [Average]
  (min, avg, max) = (107.427, 107.949, 108.862), stdev = 0.378
  CI (99.9%): [107.620, 108.277] (assumes normal distribution)


# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testExplicit10000

# Run progress: 30.00% complete, ETA 00:04:41
# Fork: 1 of 1
# Warmup Iteration   1: 1414.308 us/op
# Warmup Iteration   2: 1368.531 us/op
# Warmup Iteration   3: 1336.506 us/op
# Warmup Iteration   4: 1544.681 us/op
# Warmup Iteration   5: 1332.326 us/op
# Warmup Iteration   6: 1323.690 us/op
# Warmup Iteration   7: 1322.380 us/op
# Warmup Iteration   8: 1320.700 us/op
# Warmup Iteration   9: 1323.504 us/op
# Warmup Iteration  10: 1326.397 us/op
# Warmup Iteration  11: 1322.247 us/op
# Warmup Iteration  12: 1353.687 us/op
# Warmup Iteration  13: 1329.173 us/op
# Warmup Iteration  14: 1328.397 us/op
# Warmup Iteration  15: 1322.753 us/op
# Warmup Iteration  16: 1397.670 us/op
# Warmup Iteration  17: 1340.783 us/op
# Warmup Iteration  18: 1328.370 us/op
# Warmup Iteration  19: 1323.432 us/op
# Warmup Iteration  20: 1403.476 us/op
Iteration   1: 1326.204 us/op
Iteration   2: 1336.534 us/op
Iteration   3: 1325.658 us/op
Iteration   4: 1389.349 us/op
Iteration   5: 1328.139 us/op
Iteration   6: 1326.518 us/op
Iteration   7: 1327.422 us/op
Iteration   8: 1330.817 us/op
Iteration   9: 1331.271 us/op
Iteration  10: 1332.669 us/op
Iteration  11: 1331.638 us/op
Iteration  12: 1346.229 us/op
Iteration  13: 1332.920 us/op
Iteration  14: 1329.069 us/op
Iteration  15: 1330.918 us/op
Iteration  16: 1331.988 us/op
Iteration  17: 1335.702 us/op
Iteration  18: 1337.026 us/op
Iteration  19: 1334.910 us/op
Iteration  20: 1334.025 us/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testExplicit10000":
  1334.950 ±(99.9%) 11.857 us/op [Average]
  (min, avg, max) = (1325.658, 1334.950, 1389.349), stdev = 13.654
  CI (99.9%): [1323.094, 1346.807] (assumes normal distribution)


# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testExplicit100000

# Run progress: 40.00% complete, ETA 00:04:01
# Fork: 1 of 1
# Warmup Iteration   1: 17491.431 us/op
# Warmup Iteration   2: 17162.145 us/op
# Warmup Iteration   3: 16462.258 us/op
# Warmup Iteration   4: 16985.548 us/op
# Warmup Iteration   5: 16512.240 us/op
# Warmup Iteration   6: 16492.264 us/op
# Warmup Iteration   7: 17464.452 us/op
# Warmup Iteration   8: 16626.529 us/op
# Warmup Iteration   9: 16564.087 us/op
# Warmup Iteration  10: 16479.493 us/op
# Warmup Iteration  11: 16494.369 us/op
# Warmup Iteration  12: 16586.707 us/op
# Warmup Iteration  13: 16869.558 us/op
# Warmup Iteration  14: 16476.106 us/op
# Warmup Iteration  15: 16432.828 us/op
# Warmup Iteration  16: 16375.970 us/op
# Warmup Iteration  17: 16451.065 us/op
# Warmup Iteration  18: 16378.866 us/op
# Warmup Iteration  19: 16567.505 us/op
# Warmup Iteration  20: 16579.564 us/op
Iteration   1: 16403.898 us/op
Iteration   2: 16803.565 us/op
Iteration   3: 17878.480 us/op
Iteration   4: 17456.299 us/op
Iteration   5: 16422.065 us/op
Iteration   6: 16461.350 us/op
Iteration   7: 16511.714 us/op
Iteration   8: 17726.938 us/op
Iteration   9: 16466.591 us/op
Iteration  10: 16454.201 us/op
Iteration  11: 16987.211 us/op
Iteration  12: 16537.335 us/op
Iteration  13: 16421.370 us/op
Iteration  14: 16428.671 us/op
Iteration  15: 16534.276 us/op
Iteration  16: 16477.853 us/op
Iteration  17: 16618.038 us/op
Iteration  18: 16496.229 us/op
Iteration  19: 16415.348 us/op
Iteration  20: 16510.636 us/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testExplicit100000":
  16700.603 ±(99.9%) 393.442 us/op [Average]
  (min, avg, max) = (16403.898, 16700.603, 17878.480), stdev = 453.089
  CI (99.9%): [16307.161, 17094.046] (assumes normal distribution)


# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testImplicit10

# Run progress: 50.00% complete, ETA 00:03:21
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.BootstrapMethodError: call site initialization exception
	at java.lang.invoke.CallSite.makeSite(CallSite.java:341)
	at java.lang.invoke.MethodHandleNatives.linkCallSiteImpl(MethodHandleNatives.java:307)
	at java.lang.invoke.MethodHandleNatives.linkCallSite(MethodHandleNatives.java:297)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.proto$21$ImplicitComparable$lessOrEq$ImplicitComparable(MergeSort.kt)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeImplicit(MergeSort.kt:35)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:87)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testImplicit10(MergeSort.kt:143)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.MergeSort_testImplicit10_jmhTest.testImplicit10_avgt_jmhStub(MergeSort_testImplicit10_jmhTest.java:190)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.MergeSort_testImplicit10_jmhTest.testImplicit10_AverageTime(MergeSort_testImplicit10_jmhTest.java:152)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.ArrayIndexOutOfBoundsException: 2
	at kotlin.jvm.internal.ProtocolCallSite.<init>(ProtocolCallSite.kt:144)
	at kotlin.jvm.internal.ProtocolCallSite$Companion.getBootstrap(ProtocolCallSite.kt:32)
	at kotlin.jvm.internal.ProtocolCallSite.getBootstrap(ProtocolCallSite.kt)
	at java.lang.invoke.CallSite.makeSite(CallSite.java:306)
	... 23 more




# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testImplicit100

# Run progress: 60.00% complete, ETA 00:02:14
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.BootstrapMethodError: call site initialization exception
	at java.lang.invoke.CallSite.makeSite(CallSite.java:341)
	at java.lang.invoke.MethodHandleNatives.linkCallSiteImpl(MethodHandleNatives.java:307)
	at java.lang.invoke.MethodHandleNatives.linkCallSite(MethodHandleNatives.java:297)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.proto$21$ImplicitComparable$lessOrEq$ImplicitComparable(MergeSort.kt)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeImplicit(MergeSort.kt:35)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:87)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testImplicit100(MergeSort.kt:146)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.MergeSort_testImplicit100_jmhTest.testImplicit100_avgt_jmhStub(MergeSort_testImplicit100_jmhTest.java:190)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.MergeSort_testImplicit100_jmhTest.testImplicit100_AverageTime(MergeSort_testImplicit100_jmhTest.java:152)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.ArrayIndexOutOfBoundsException: 2
	at kotlin.jvm.internal.ProtocolCallSite.<init>(ProtocolCallSite.kt:144)
	at kotlin.jvm.internal.ProtocolCallSite$Companion.getBootstrap(ProtocolCallSite.kt:32)
	at kotlin.jvm.internal.ProtocolCallSite.getBootstrap(ProtocolCallSite.kt)
	at java.lang.invoke.CallSite.makeSite(CallSite.java:306)
	... 26 more




# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testImplicit1000

# Run progress: 70.00% complete, ETA 00:01:26
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.BootstrapMethodError: call site initialization exception
	at java.lang.invoke.CallSite.makeSite(CallSite.java:341)
	at java.lang.invoke.MethodHandleNatives.linkCallSiteImpl(MethodHandleNatives.java:307)
	at java.lang.invoke.MethodHandleNatives.linkCallSite(MethodHandleNatives.java:297)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.proto$21$ImplicitComparable$lessOrEq$ImplicitComparable(MergeSort.kt)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeImplicit(MergeSort.kt:35)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:87)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testImplicit1000(MergeSort.kt:149)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.MergeSort_testImplicit1000_jmhTest.testImplicit1000_avgt_jmhStub(MergeSort_testImplicit1000_jmhTest.java:190)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.MergeSort_testImplicit1000_jmhTest.testImplicit1000_AverageTime(MergeSort_testImplicit1000_jmhTest.java:152)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.ArrayIndexOutOfBoundsException: 2
	at kotlin.jvm.internal.ProtocolCallSite.<init>(ProtocolCallSite.kt:144)
	at kotlin.jvm.internal.ProtocolCallSite$Companion.getBootstrap(ProtocolCallSite.kt:32)
	at kotlin.jvm.internal.ProtocolCallSite.getBootstrap(ProtocolCallSite.kt)
	at java.lang.invoke.CallSite.makeSite(CallSite.java:306)
	... 29 more




# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testImplicit10000

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.BootstrapMethodError: call site initialization exception
	at java.lang.invoke.CallSite.makeSite(CallSite.java:341)
	at java.lang.invoke.MethodHandleNatives.linkCallSiteImpl(MethodHandleNatives.java:307)
	at java.lang.invoke.MethodHandleNatives.linkCallSite(MethodHandleNatives.java:297)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.proto$21$ImplicitComparable$lessOrEq$ImplicitComparable(MergeSort.kt)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeImplicit(MergeSort.kt:35)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:87)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testImplicit10000(MergeSort.kt:152)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.MergeSort_testImplicit10000_jmhTest.testImplicit10000_avgt_jmhStub(MergeSort_testImplicit10000_jmhTest.java:190)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.MergeSort_testImplicit10000_jmhTest.testImplicit10000_AverageTime(MergeSort_testImplicit10000_jmhTest.java:152)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.ArrayIndexOutOfBoundsException: 2
	at kotlin.jvm.internal.ProtocolCallSite.<init>(ProtocolCallSite.kt:144)
	at kotlin.jvm.internal.ProtocolCallSite$Companion.getBootstrap(ProtocolCallSite.kt:32)
	at kotlin.jvm.internal.ProtocolCallSite.getBootstrap(ProtocolCallSite.kt)
	at java.lang.invoke.CallSite.makeSite(CallSite.java:306)
	... 33 more




# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testImplicit100000

# Run progress: 90.00% complete, ETA 00:00:22
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.BootstrapMethodError: call site initialization exception
	at java.lang.invoke.CallSite.makeSite(CallSite.java:341)
	at java.lang.invoke.MethodHandleNatives.linkCallSiteImpl(MethodHandleNatives.java:307)
	at java.lang.invoke.MethodHandleNatives.linkCallSite(MethodHandleNatives.java:297)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.proto$21$ImplicitComparable$lessOrEq$ImplicitComparable(MergeSort.kt)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeImplicit(MergeSort.kt:35)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:87)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testImplicit100000(MergeSort.kt:155)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.MergeSort_testImplicit100000_jmhTest.testImplicit100000_avgt_jmhStub(MergeSort_testImplicit100000_jmhTest.java:190)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.MergeSort_testImplicit100000_jmhTest.testImplicit100000_AverageTime(MergeSort_testImplicit100000_jmhTest.java:152)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.ArrayIndexOutOfBoundsException: 2
	at kotlin.jvm.internal.ProtocolCallSite.<init>(ProtocolCallSite.kt:144)
	at kotlin.jvm.internal.ProtocolCallSite$Companion.getBootstrap(ProtocolCallSite.kt:32)
	at kotlin.jvm.internal.ProtocolCallSite.getBootstrap(ProtocolCallSite.kt)
	at java.lang.invoke.CallSite.makeSite(CallSite.java:306)
	... 36 more




# Run complete. Total time: 00:03:22

Benchmark                     Mode  Cnt      Score     Error  Units
MergeSort.testExplicit10      avgt   20      0.467 ±   0.001  us/op
MergeSort.testExplicit100     avgt   20      7.907 ±   0.095  us/op
MergeSort.testExplicit1000    avgt   20    107.949 ±   0.328  us/op
MergeSort.testExplicit10000   avgt   20   1334.950 ±  11.857  us/op
MergeSort.testExplicit100000  avgt   20  16700.603 ± 393.442  us/op
[DONE] ./indy_sync_list.xml
[START] ./reflection_array.xml
# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args0

# Run progress: 0.00% complete, ETA 00:06:00
# Fork: 1 of 1
# Warmup Iteration   1: 10.698 ns/op
# Warmup Iteration   2: 13.827 ns/op
# Warmup Iteration   3: 12.704 ns/op
# Warmup Iteration   4: 16.220 ns/op
# Warmup Iteration   5: 12.043 ns/op
# Warmup Iteration   6: 12.044 ns/op
# Warmup Iteration   7: 11.996 ns/op
# Warmup Iteration   8: 12.001 ns/op
# Warmup Iteration   9: 12.034 ns/op
# Warmup Iteration  10: 12.004 ns/op
# Warmup Iteration  11: 12.727 ns/op
# Warmup Iteration  12: 12.108 ns/op
# Warmup Iteration  13: 12.111 ns/op
# Warmup Iteration  14: 12.067 ns/op
# Warmup Iteration  15: 12.083 ns/op
# Warmup Iteration  16: 12.120 ns/op
# Warmup Iteration  17: 11.983 ns/op
# Warmup Iteration  18: 12.023 ns/op
# Warmup Iteration  19: 11.951 ns/op
# Warmup Iteration  20: 11.945 ns/op
Iteration   1: 12.035 ns/op
Iteration   2: 12.115 ns/op
Iteration   3: 12.037 ns/op
Iteration   4: 12.077 ns/op
Iteration   5: 11.984 ns/op
Iteration   6: 12.026 ns/op
Iteration   7: 11.950 ns/op
Iteration   8: 11.987 ns/op
Iteration   9: 11.979 ns/op
Iteration  10: 11.974 ns/op
Iteration  11: 11.995 ns/op
Iteration  12: 12.017 ns/op
Iteration  13: 12.185 ns/op
Iteration  14: 12.015 ns/op
Iteration  15: 12.132 ns/op
Iteration  16: 11.932 ns/op
Iteration  17: 11.963 ns/op
Iteration  18: 11.938 ns/op
Iteration  19: 12.003 ns/op
Iteration  20: 11.996 ns/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args0":
  12.017 ±(99.9%) 0.057 ns/op [Average]
  (min, avg, max) = (11.932, 12.017, 12.185), stdev = 0.066
  CI (99.9%): [11.960, 12.074] (assumes normal distribution)


# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args1

# Run progress: 11.11% complete, ETA 00:05:21
# Fork: 1 of 1
# Warmup Iteration   1: 10.514 ns/op
# Warmup Iteration   2: 14.948 ns/op
# Warmup Iteration   3: 14.941 ns/op
# Warmup Iteration   4: 14.743 ns/op
# Warmup Iteration   5: 14.400 ns/op
# Warmup Iteration   6: 14.389 ns/op
# Warmup Iteration   7: 14.368 ns/op
# Warmup Iteration   8: 14.397 ns/op
# Warmup Iteration   9: 14.375 ns/op
# Warmup Iteration  10: 14.438 ns/op
# Warmup Iteration  11: 14.432 ns/op
# Warmup Iteration  12: 14.492 ns/op
# Warmup Iteration  13: 14.487 ns/op
# Warmup Iteration  14: 14.451 ns/op
# Warmup Iteration  15: 14.454 ns/op
# Warmup Iteration  16: 14.546 ns/op
# Warmup Iteration  17: 14.440 ns/op
# Warmup Iteration  18: 14.429 ns/op
# Warmup Iteration  19: 14.458 ns/op
# Warmup Iteration  20: 14.505 ns/op
Iteration   1: 14.500 ns/op
Iteration   2: 14.500 ns/op
Iteration   3: 14.445 ns/op
Iteration   4: 14.410 ns/op
Iteration   5: 14.398 ns/op
Iteration   6: 14.430 ns/op
Iteration   7: 14.564 ns/op
Iteration   8: 14.468 ns/op
Iteration   9: 14.447 ns/op
Iteration  10: 14.494 ns/op
Iteration  11: 14.578 ns/op
Iteration  12: 14.404 ns/op
Iteration  13: 14.465 ns/op
Iteration  14: 14.426 ns/op
Iteration  15: 14.447 ns/op
Iteration  16: 14.694 ns/op
Iteration  17: 14.505 ns/op
Iteration  18: 14.610 ns/op
Iteration  19: 14.484 ns/op
Iteration  20: 14.550 ns/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args1":
  14.491 ±(99.9%) 0.066 ns/op [Average]
  (min, avg, max) = (14.398, 14.491, 14.694), stdev = 0.076
  CI (99.9%): [14.425, 14.557] (assumes normal distribution)


# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args10

# Run progress: 22.22% complete, ETA 00:04:41
# Fork: 1 of 1
# Warmup Iteration   1: 57.555 ns/op
# Warmup Iteration   2: 55.135 ns/op
# Warmup Iteration   3: 57.159 ns/op
# Warmup Iteration   4: 55.896 ns/op
# Warmup Iteration   5: 55.574 ns/op
# Warmup Iteration   6: 55.613 ns/op
# Warmup Iteration   7: 55.779 ns/op
# Warmup Iteration   8: 55.671 ns/op
# Warmup Iteration   9: 55.716 ns/op
# Warmup Iteration  10: 55.973 ns/op
# Warmup Iteration  11: 55.922 ns/op
# Warmup Iteration  12: 56.084 ns/op
# Warmup Iteration  13: 55.954 ns/op
# Warmup Iteration  14: 55.744 ns/op
# Warmup Iteration  15: 55.630 ns/op
# Warmup Iteration  16: 55.587 ns/op
# Warmup Iteration  17: 55.685 ns/op
# Warmup Iteration  18: 55.682 ns/op
# Warmup Iteration  19: 55.977 ns/op
# Warmup Iteration  20: 55.913 ns/op
Iteration   1: 55.847 ns/op
Iteration   2: 55.817 ns/op
Iteration   3: 56.350 ns/op
Iteration   4: 55.850 ns/op
Iteration   5: 55.716 ns/op
Iteration   6: 55.633 ns/op
Iteration   7: 55.844 ns/op
Iteration   8: 55.789 ns/op
Iteration   9: 55.810 ns/op
Iteration  10: 55.754 ns/op
Iteration  11: 56.046 ns/op
Iteration  12: 55.941 ns/op
Iteration  13: 56.155 ns/op
Iteration  14: 55.829 ns/op
Iteration  15: 55.645 ns/op
Iteration  16: 55.699 ns/op
Iteration  17: 55.773 ns/op
Iteration  18: 56.224 ns/op
Iteration  19: 55.904 ns/op
Iteration  20: 55.738 ns/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args10":
  55.868 ±(99.9%) 0.166 ns/op [Average]
  (min, avg, max) = (55.633, 55.868, 56.350), stdev = 0.191
  CI (99.9%): [55.702, 56.034] (assumes normal distribution)


# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args15

# Run progress: 33.33% complete, ETA 00:04:01
# Fork: 1 of 1
# Warmup Iteration   1: 84.819 ns/op
# Warmup Iteration   2: 80.754 ns/op
# Warmup Iteration   3: 81.400 ns/op
# Warmup Iteration   4: 79.309 ns/op
# Warmup Iteration   5: 79.121 ns/op
# Warmup Iteration   6: 79.405 ns/op
# Warmup Iteration   7: 79.220 ns/op
# Warmup Iteration   8: 79.382 ns/op
# Warmup Iteration   9: 79.805 ns/op
# Warmup Iteration  10: 79.572 ns/op
# Warmup Iteration  11: 81.123 ns/op
# Warmup Iteration  12: 79.224 ns/op
# Warmup Iteration  13: 79.580 ns/op
# Warmup Iteration  14: 79.080 ns/op
# Warmup Iteration  15: 79.255 ns/op
# Warmup Iteration  16: 79.254 ns/op
# Warmup Iteration  17: 79.857 ns/op
# Warmup Iteration  18: 79.461 ns/op
# Warmup Iteration  19: 79.363 ns/op
# Warmup Iteration  20: 79.713 ns/op
Iteration   1: 79.273 ns/op
Iteration   2: 79.000 ns/op
Iteration   3: 80.154 ns/op
Iteration   4: 79.937 ns/op
Iteration   5: 79.364 ns/op
Iteration   6: 79.393 ns/op
Iteration   7: 79.775 ns/op
Iteration   8: 79.814 ns/op
Iteration   9: 79.468 ns/op
Iteration  10: 79.062 ns/op
Iteration  11: 79.128 ns/op
Iteration  12: 79.251 ns/op
Iteration  13: 80.307 ns/op
Iteration  14: 79.662 ns/op
Iteration  15: 79.589 ns/op
Iteration  16: 79.606 ns/op
Iteration  17: 80.045 ns/op
Iteration  18: 79.856 ns/op
Iteration  19: 79.284 ns/op
Iteration  20: 78.949 ns/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args15":
  79.546 ±(99.9%) 0.342 ns/op [Average]
  (min, avg, max) = (78.949, 79.546, 80.307), stdev = 0.394
  CI (99.9%): [79.204, 79.888] (assumes normal distribution)


# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args2

# Run progress: 44.44% complete, ETA 00:03:21
# Fork: 1 of 1
# Warmup Iteration   1: 10.567 ns/op
# Warmup Iteration   2: 16.519 ns/op
# Warmup Iteration   3: 16.587 ns/op
# Warmup Iteration   4: 16.610 ns/op
# Warmup Iteration   5: 16.254 ns/op
# Warmup Iteration   6: 16.221 ns/op
# Warmup Iteration   7: 16.207 ns/op
# Warmup Iteration   8: 16.224 ns/op
# Warmup Iteration   9: 16.214 ns/op
# Warmup Iteration  10: 16.266 ns/op
# Warmup Iteration  11: 16.228 ns/op
# Warmup Iteration  12: 16.783 ns/op
# Warmup Iteration  13: 16.235 ns/op
# Warmup Iteration  14: 16.354 ns/op
# Warmup Iteration  15: 16.263 ns/op
# Warmup Iteration  16: 16.293 ns/op
# Warmup Iteration  17: 16.315 ns/op
# Warmup Iteration  18: 16.353 ns/op
# Warmup Iteration  19: 16.390 ns/op
# Warmup Iteration  20: 16.464 ns/op
Iteration   1: 16.344 ns/op
Iteration   2: 16.731 ns/op
Iteration   3: 16.310 ns/op
Iteration   4: 16.473 ns/op
Iteration   5: 16.247 ns/op
Iteration   6: 16.865 ns/op
Iteration   7: 16.469 ns/op
Iteration   8: 16.323 ns/op
Iteration   9: 16.413 ns/op
Iteration  10: 16.409 ns/op
Iteration  11: 16.387 ns/op
Iteration  12: 16.428 ns/op
Iteration  13: 16.428 ns/op
Iteration  14: 16.376 ns/op
Iteration  15: 16.321 ns/op
Iteration  16: 16.389 ns/op
Iteration  17: 16.337 ns/op
Iteration  18: 16.404 ns/op
Iteration  19: 16.368 ns/op
Iteration  20: 16.810 ns/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args2":
  16.441 ±(99.9%) 0.144 ns/op [Average]
  (min, avg, max) = (16.247, 16.441, 16.865), stdev = 0.166
  CI (99.9%): [16.297, 16.586] (assumes normal distribution)


# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args20

# Run progress: 55.56% complete, ETA 00:02:40
# Fork: 1 of 1
# Warmup Iteration   1: 120.540 ns/op
# Warmup Iteration   2: 116.468 ns/op
# Warmup Iteration   3: 114.230 ns/op
# Warmup Iteration   4: 114.224 ns/op
# Warmup Iteration   5: 112.861 ns/op
# Warmup Iteration   6: 112.883 ns/op
# Warmup Iteration   7: 112.918 ns/op
# Warmup Iteration   8: 113.020 ns/op
# Warmup Iteration   9: 114.302 ns/op
# Warmup Iteration  10: 113.372 ns/op
# Warmup Iteration  11: 112.896 ns/op
# Warmup Iteration  12: 114.049 ns/op
# Warmup Iteration  13: 112.928 ns/op
# Warmup Iteration  14: 116.832 ns/op
# Warmup Iteration  15: 112.907 ns/op
# Warmup Iteration  16: 116.580 ns/op
# Warmup Iteration  17: 113.392 ns/op
# Warmup Iteration  18: 113.105 ns/op
# Warmup Iteration  19: 113.202 ns/op
# Warmup Iteration  20: 113.468 ns/op
Iteration   1: 112.969 ns/op
Iteration   2: 114.488 ns/op
Iteration   3: 113.333 ns/op
Iteration   4: 113.490 ns/op
Iteration   5: 118.166 ns/op
Iteration   6: 113.914 ns/op
Iteration   7: 113.173 ns/op
Iteration   8: 113.215 ns/op
Iteration   9: 113.203 ns/op
Iteration  10: 113.507 ns/op
Iteration  11: 113.795 ns/op
Iteration  12: 114.184 ns/op
Iteration  13: 113.958 ns/op
Iteration  14: 114.208 ns/op
Iteration  15: 113.267 ns/op
Iteration  16: 113.071 ns/op
Iteration  17: 113.981 ns/op
Iteration  18: 113.563 ns/op
Iteration  19: 113.689 ns/op
Iteration  20: 113.590 ns/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args20":
  113.838 ±(99.9%) 0.955 ns/op [Average]
  (min, avg, max) = (112.969, 113.838, 118.166), stdev = 1.100
  CI (99.9%): [112.883, 114.794] (assumes normal distribution)


# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args3

# Run progress: 66.67% complete, ETA 00:02:00
# Fork: 1 of 1
# Warmup Iteration   1: 13.597 ns/op
# Warmup Iteration   2: 18.470 ns/op
# Warmup Iteration   3: 18.229 ns/op
# Warmup Iteration   4: 18.301 ns/op
# Warmup Iteration   5: 17.831 ns/op
# Warmup Iteration   6: 17.760 ns/op
# Warmup Iteration   7: 21.113 ns/op
# Warmup Iteration   8: 17.971 ns/op
# Warmup Iteration   9: 17.814 ns/op
# Warmup Iteration  10: 17.937 ns/op
# Warmup Iteration  11: 17.865 ns/op
# Warmup Iteration  12: 17.973 ns/op
# Warmup Iteration  13: 17.884 ns/op
# Warmup Iteration  14: 18.079 ns/op
# Warmup Iteration  15: 17.813 ns/op
# Warmup Iteration  16: 17.887 ns/op
# Warmup Iteration  17: 18.162 ns/op
# Warmup Iteration  18: 18.130 ns/op
# Warmup Iteration  19: 18.070 ns/op
# Warmup Iteration  20: 18.573 ns/op
Iteration   1: 18.185 ns/op
Iteration   2: 18.282 ns/op
Iteration   3: 18.086 ns/op
Iteration   4: 18.128 ns/op
Iteration   5: 18.168 ns/op
Iteration   6: 18.145 ns/op
Iteration   7: 18.017 ns/op
Iteration   8: 17.870 ns/op
Iteration   9: 17.934 ns/op
Iteration  10: 17.965 ns/op
Iteration  11: 18.009 ns/op
Iteration  12: 18.028 ns/op
Iteration  13: 18.014 ns/op
Iteration  14: 17.962 ns/op
Iteration  15: 17.988 ns/op
Iteration  16: 18.027 ns/op
Iteration  17: 18.022 ns/op
Iteration  18: 18.143 ns/op
Iteration  19: 18.151 ns/op
Iteration  20: 17.912 ns/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args3":
  18.052 ±(99.9%) 0.091 ns/op [Average]
  (min, avg, max) = (17.870, 18.052, 18.282), stdev = 0.105
  CI (99.9%): [17.960, 18.143] (assumes normal distribution)


# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args4

# Run progress: 77.78% complete, ETA 00:01:20
# Fork: 1 of 1
# Warmup Iteration   1: 31.755 ns/op
# Warmup Iteration   2: 31.686 ns/op
# Warmup Iteration   3: 30.712 ns/op
# Warmup Iteration   4: 30.771 ns/op
# Warmup Iteration   5: 30.788 ns/op
# Warmup Iteration   6: 30.715 ns/op
# Warmup Iteration   7: 31.312 ns/op
# Warmup Iteration   8: 30.624 ns/op
# Warmup Iteration   9: 30.722 ns/op
# Warmup Iteration  10: 30.760 ns/op
# Warmup Iteration  11: 30.806 ns/op
# Warmup Iteration  12: 30.938 ns/op
# Warmup Iteration  13: 30.917 ns/op
# Warmup Iteration  14: 31.315 ns/op
# Warmup Iteration  15: 33.399 ns/op
# Warmup Iteration  16: 32.686 ns/op
# Warmup Iteration  17: 32.007 ns/op
# Warmup Iteration  18: 32.370 ns/op
# Warmup Iteration  19: 32.122 ns/op
# Warmup Iteration  20: 30.904 ns/op
Iteration   1: 30.697 ns/op
Iteration   2: 31.046 ns/op
Iteration   3: 30.796 ns/op
Iteration   4: 30.867 ns/op
Iteration   5: 30.881 ns/op
Iteration   6: 31.040 ns/op
Iteration   7: 30.996 ns/op
Iteration   8: 30.812 ns/op
Iteration   9: 30.913 ns/op
Iteration  10: 30.832 ns/op
Iteration  11: 30.896 ns/op
Iteration  12: 31.335 ns/op
Iteration  13: 30.822 ns/op
Iteration  14: 30.811 ns/op
Iteration  15: 30.750 ns/op
Iteration  16: 30.937 ns/op
Iteration  17: 30.972 ns/op
Iteration  18: 30.887 ns/op
Iteration  19: 30.984 ns/op
Iteration  20: 30.924 ns/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args4":
  30.910 ±(99.9%) 0.119 ns/op [Average]
  (min, avg, max) = (30.697, 30.910, 31.335), stdev = 0.137
  CI (99.9%): [30.791, 31.028] (assumes normal distribution)


# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args5

# Run progress: 88.89% complete, ETA 00:00:40
# Fork: 1 of 1
# Warmup Iteration   1: 35.977 ns/op
# Warmup Iteration   2: 34.661 ns/op
# Warmup Iteration   3: 33.382 ns/op
# Warmup Iteration   4: 33.427 ns/op
# Warmup Iteration   5: 33.482 ns/op
# Warmup Iteration   6: 33.563 ns/op
# Warmup Iteration   7: 33.335 ns/op
# Warmup Iteration   8: 33.478 ns/op
# Warmup Iteration   9: 33.382 ns/op
# Warmup Iteration  10: 34.765 ns/op
# Warmup Iteration  11: 33.410 ns/op
# Warmup Iteration  12: 33.630 ns/op
# Warmup Iteration  13: 33.489 ns/op
# Warmup Iteration  14: 33.524 ns/op
# Warmup Iteration  15: 33.698 ns/op
# Warmup Iteration  16: 33.632 ns/op
# Warmup Iteration  17: 33.680 ns/op
# Warmup Iteration  18: 33.679 ns/op
# Warmup Iteration  19: 33.707 ns/op
# Warmup Iteration  20: 33.582 ns/op
Iteration   1: 33.707 ns/op
Iteration   2: 33.723 ns/op
Iteration   3: 33.566 ns/op
Iteration   4: 33.433 ns/op
Iteration   5: 33.436 ns/op
Iteration   6: 33.572 ns/op
Iteration   7: 33.547 ns/op
Iteration   8: 33.656 ns/op
Iteration   9: 33.582 ns/op
Iteration  10: 33.462 ns/op
Iteration  11: 33.602 ns/op
Iteration  12: 34.039 ns/op
Iteration  13: 34.257 ns/op
Iteration  14: 33.610 ns/op
Iteration  15: 33.704 ns/op
Iteration  16: 33.682 ns/op
Iteration  17: 33.401 ns/op
Iteration  18: 33.496 ns/op
Iteration  19: 33.591 ns/op
Iteration  20: 33.664 ns/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args5":
  33.637 ±(99.9%) 0.176 ns/op [Average]
  (min, avg, max) = (33.401, 33.637, 34.257), stdev = 0.202
  CI (99.9%): [33.461, 33.812] (assumes normal distribution)


# Run complete. Total time: 00:06:02

Benchmark         Mode  Cnt    Score   Error  Units
SingleRun.args0   avgt   20   12.017 ± 0.057  ns/op
SingleRun.args1   avgt   20   14.491 ± 0.066  ns/op
SingleRun.args10  avgt   20   55.868 ± 0.166  ns/op
SingleRun.args15  avgt   20   79.546 ± 0.342  ns/op
SingleRun.args2   avgt   20   16.441 ± 0.144  ns/op
SingleRun.args20  avgt   20  113.838 ± 0.955  ns/op
SingleRun.args3   avgt   20   18.052 ± 0.091  ns/op
SingleRun.args4   avgt   20   30.910 ± 0.119  ns/op
SingleRun.args5   avgt   20   33.637 ± 0.176  ns/op
# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.MultiTarget.test

# Run progress: 0.00% complete, ETA 00:00:40
# Fork: 1 of 1
# Warmup Iteration   1: 54081.228 ns/op
# Warmup Iteration   2: 52466.202 ns/op
# Warmup Iteration   3: 51340.350 ns/op
# Warmup Iteration   4: 51117.524 ns/op
# Warmup Iteration   5: 51083.735 ns/op
# Warmup Iteration   6: 51085.041 ns/op
# Warmup Iteration   7: 50742.954 ns/op
# Warmup Iteration   8: 50573.795 ns/op
# Warmup Iteration   9: 50657.739 ns/op
# Warmup Iteration  10: 50496.349 ns/op
# Warmup Iteration  11: 51898.069 ns/op
# Warmup Iteration  12: 50722.619 ns/op
# Warmup Iteration  13: 50718.261 ns/op
# Warmup Iteration  14: 50749.919 ns/op
# Warmup Iteration  15: 50926.125 ns/op
# Warmup Iteration  16: 50530.168 ns/op
# Warmup Iteration  17: 50711.895 ns/op
# Warmup Iteration  18: 50788.798 ns/op
# Warmup Iteration  19: 50705.718 ns/op
# Warmup Iteration  20: 50777.083 ns/op
Iteration   1: 51009.843 ns/op
Iteration   2: 50591.493 ns/op
Iteration   3: 50580.972 ns/op
Iteration   4: 50790.421 ns/op
Iteration   5: 50842.220 ns/op
Iteration   6: 50597.380 ns/op
Iteration   7: 50624.040 ns/op
Iteration   8: 50854.167 ns/op
Iteration   9: 50623.847 ns/op
Iteration  10: 50587.902 ns/op
Iteration  11: 50859.353 ns/op
Iteration  12: 50692.926 ns/op
Iteration  13: 50765.561 ns/op
Iteration  14: 50635.757 ns/op
Iteration  15: 50552.613 ns/op
Iteration  16: 50743.928 ns/op
Iteration  17: 50841.989 ns/op
Iteration  18: 50790.650 ns/op
Iteration  19: 50879.901 ns/op
Iteration  20: 51118.215 ns/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.MultiTarget.test":
  50749.159 ±(99.9%) 134.173 ns/op [Average]
  (min, avg, max) = (50552.613, 50749.159, 51118.215), stdev = 154.514
  CI (99.9%): [50614.986, 50883.332] (assumes normal distribution)


# Run complete. Total time: 00:00:40

Benchmark         Mode  Cnt      Score     Error  Units
MultiTarget.test  avgt   20  50749.159 ± 134.173  ns/op
# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testExplicit10

# Run progress: 0.00% complete, ETA 00:06:40
# Fork: 1 of 1
# Warmup Iteration   1: 0.509 us/op
# Warmup Iteration   2: 0.477 us/op
# Warmup Iteration   3: 0.490 us/op
# Warmup Iteration   4: 0.463 us/op
# Warmup Iteration   5: 0.467 us/op
# Warmup Iteration   6: 0.479 us/op
# Warmup Iteration   7: 0.462 us/op
# Warmup Iteration   8: 0.463 us/op
# Warmup Iteration   9: 0.463 us/op
# Warmup Iteration  10: 0.473 us/op
# Warmup Iteration  11: 0.469 us/op
# Warmup Iteration  12: 0.464 us/op
# Warmup Iteration  13: 0.463 us/op
# Warmup Iteration  14: 0.462 us/op
# Warmup Iteration  15: 0.463 us/op
# Warmup Iteration  16: 0.463 us/op
# Warmup Iteration  17: 0.462 us/op
# Warmup Iteration  18: 0.464 us/op
# Warmup Iteration  19: 0.463 us/op
# Warmup Iteration  20: 0.463 us/op
Iteration   1: 0.465 us/op
Iteration   2: 0.462 us/op
Iteration   3: 0.467 us/op
Iteration   4: 0.463 us/op
Iteration   5: 0.463 us/op
Iteration   6: 0.463 us/op
Iteration   7: 0.463 us/op
Iteration   8: 0.463 us/op
Iteration   9: 0.463 us/op
Iteration  10: 0.463 us/op
Iteration  11: 0.466 us/op
Iteration  12: 0.463 us/op
Iteration  13: 0.463 us/op
Iteration  14: 0.464 us/op
Iteration  15: 0.464 us/op
Iteration  16: 0.466 us/op
Iteration  17: 0.463 us/op
Iteration  18: 0.464 us/op
Iteration  19: 0.464 us/op
Iteration  20: 0.465 us/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testExplicit10":
  0.464 ±(99.9%) 0.001 us/op [Average]
  (min, avg, max) = (0.462, 0.464, 0.467), stdev = 0.001
  CI (99.9%): [0.463, 0.465] (assumes normal distribution)


# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testExplicit100

# Run progress: 10.00% complete, ETA 00:06:01
# Fork: 1 of 1
# Warmup Iteration   1: 8.623 us/op
# Warmup Iteration   2: 8.122 us/op
# Warmup Iteration   3: 8.112 us/op
# Warmup Iteration   4: 8.009 us/op
# Warmup Iteration   5: 8.269 us/op
# Warmup Iteration   6: 7.938 us/op
# Warmup Iteration   7: 7.994 us/op
# Warmup Iteration   8: 7.945 us/op
# Warmup Iteration   9: 7.938 us/op
# Warmup Iteration  10: 7.977 us/op
# Warmup Iteration  11: 7.965 us/op
# Warmup Iteration  12: 7.949 us/op
# Warmup Iteration  13: 7.936 us/op
# Warmup Iteration  14: 7.949 us/op
# Warmup Iteration  15: 7.949 us/op
# Warmup Iteration  16: 7.951 us/op
# Warmup Iteration  17: 8.096 us/op
# Warmup Iteration  18: 7.949 us/op
# Warmup Iteration  19: 7.950 us/op
# Warmup Iteration  20: 7.961 us/op
Iteration   1: 7.940 us/op
Iteration   2: 7.943 us/op
Iteration   3: 7.966 us/op
Iteration   4: 7.952 us/op
Iteration   5: 8.167 us/op
Iteration   6: 7.959 us/op
Iteration   7: 7.949 us/op
Iteration   8: 8.008 us/op
Iteration   9: 8.001 us/op
Iteration  10: 8.168 us/op
Iteration  11: 7.958 us/op
Iteration  12: 7.965 us/op
Iteration  13: 7.995 us/op
Iteration  14: 7.972 us/op
Iteration  15: 7.960 us/op
Iteration  16: 7.989 us/op
Iteration  17: 8.003 us/op
Iteration  18: 7.979 us/op
Iteration  19: 8.005 us/op
Iteration  20: 8.033 us/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testExplicit100":
  7.996 ±(99.9%) 0.055 us/op [Average]
  (min, avg, max) = (7.940, 7.996, 8.168), stdev = 0.064
  CI (99.9%): [7.940, 8.051] (assumes normal distribution)


# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testExplicit1000

# Run progress: 20.00% complete, ETA 00:05:21
# Fork: 1 of 1
# Warmup Iteration   1: 116.432 us/op
# Warmup Iteration   2: 110.186 us/op
# Warmup Iteration   3: 110.093 us/op
# Warmup Iteration   4: 110.149 us/op
# Warmup Iteration   5: 111.172 us/op
# Warmup Iteration   6: 108.658 us/op
# Warmup Iteration   7: 108.295 us/op
# Warmup Iteration   8: 109.435 us/op
# Warmup Iteration   9: 108.643 us/op
# Warmup Iteration  10: 109.036 us/op
# Warmup Iteration  11: 108.669 us/op
# Warmup Iteration  12: 108.563 us/op
# Warmup Iteration  13: 108.809 us/op
# Warmup Iteration  14: 108.610 us/op
# Warmup Iteration  15: 108.547 us/op
# Warmup Iteration  16: 108.602 us/op
# Warmup Iteration  17: 108.384 us/op
# Warmup Iteration  18: 108.404 us/op
# Warmup Iteration  19: 108.464 us/op
# Warmup Iteration  20: 109.866 us/op
Iteration   1: 108.508 us/op
Iteration   2: 109.198 us/op
Iteration   3: 108.423 us/op
Iteration   4: 108.522 us/op
Iteration   5: 108.538 us/op
Iteration   6: 108.884 us/op
Iteration   7: 112.325 us/op
Iteration   8: 108.544 us/op
Iteration   9: 108.484 us/op
Iteration  10: 109.054 us/op
Iteration  11: 108.841 us/op
Iteration  12: 109.059 us/op
Iteration  13: 108.945 us/op
Iteration  14: 108.878 us/op
Iteration  15: 109.289 us/op
Iteration  16: 109.520 us/op
Iteration  17: 109.549 us/op
Iteration  18: 109.191 us/op
Iteration  19: 109.319 us/op
Iteration  20: 110.149 us/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testExplicit1000":
  109.161 ±(99.9%) 0.752 us/op [Average]
  (min, avg, max) = (108.423, 109.161, 112.325), stdev = 0.866
  CI (99.9%): [108.409, 109.913] (assumes normal distribution)


# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testExplicit10000

# Run progress: 30.00% complete, ETA 00:04:41
# Fork: 1 of 1
# Warmup Iteration   1: 1391.547 us/op
# Warmup Iteration   2: 1331.615 us/op
# Warmup Iteration   3: 1297.695 us/op
# Warmup Iteration   4: 1336.674 us/op
# Warmup Iteration   5: 1292.437 us/op
# Warmup Iteration   6: 1296.144 us/op
# Warmup Iteration   7: 1296.390 us/op
# Warmup Iteration   8: 1296.037 us/op
# Warmup Iteration   9: 1304.338 us/op
# Warmup Iteration  10: 1308.170 us/op
# Warmup Iteration  11: 1295.973 us/op
# Warmup Iteration  12: 1295.637 us/op
# Warmup Iteration  13: 1294.045 us/op
# Warmup Iteration  14: 1297.298 us/op
# Warmup Iteration  15: 1301.006 us/op
# Warmup Iteration  16: 1297.133 us/op
# Warmup Iteration  17: 1299.577 us/op
# Warmup Iteration  18: 1304.986 us/op
# Warmup Iteration  19: 1298.510 us/op
# Warmup Iteration  20: 1302.219 us/op
Iteration   1: 1299.323 us/op
Iteration   2: 1300.393 us/op
Iteration   3: 1298.088 us/op
Iteration   4: 1299.374 us/op
Iteration   5: 1297.867 us/op
Iteration   6: 1299.022 us/op
Iteration   7: 1299.705 us/op
Iteration   8: 1304.060 us/op
Iteration   9: 1301.309 us/op
Iteration  10: 1311.189 us/op
Iteration  11: 1304.368 us/op
Iteration  12: 1306.320 us/op
Iteration  13: 1325.500 us/op
Iteration  14: 1302.319 us/op
Iteration  15: 1301.246 us/op
Iteration  16: 1304.648 us/op
Iteration  17: 1306.130 us/op
Iteration  18: 1310.221 us/op
Iteration  19: 1308.083 us/op
Iteration  20: 1312.141 us/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testExplicit10000":
  1304.565 ±(99.9%) 5.737 us/op [Average]
  (min, avg, max) = (1297.867, 1304.565, 1325.500), stdev = 6.607
  CI (99.9%): [1298.828, 1310.302] (assumes normal distribution)


# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testExplicit100000

# Run progress: 40.00% complete, ETA 00:04:01
# Fork: 1 of 1
# Warmup Iteration   1: 18100.071 us/op
# Warmup Iteration   2: 16770.221 us/op
# Warmup Iteration   3: 16347.681 us/op
# Warmup Iteration   4: 16956.394 us/op
# Warmup Iteration   5: 16283.397 us/op
# Warmup Iteration   6: 16353.658 us/op
# Warmup Iteration   7: 16424.893 us/op
# Warmup Iteration   8: 16376.040 us/op
# Warmup Iteration   9: 16368.025 us/op
# Warmup Iteration  10: 16337.524 us/op
# Warmup Iteration  11: 16278.306 us/op
# Warmup Iteration  12: 16242.149 us/op
# Warmup Iteration  13: 16216.807 us/op
# Warmup Iteration  14: 16228.209 us/op
# Warmup Iteration  15: 16400.138 us/op
# Warmup Iteration  16: 16353.775 us/op
# Warmup Iteration  17: 16254.663 us/op
# Warmup Iteration  18: 16301.911 us/op
# Warmup Iteration  19: 16312.267 us/op
# Warmup Iteration  20: 16376.901 us/op
Iteration   1: 16274.929 us/op
Iteration   2: 16258.267 us/op
Iteration   3: 16258.031 us/op
Iteration   4: 16252.808 us/op
Iteration   5: 16290.201 us/op
Iteration   6: 16243.271 us/op
Iteration   7: 16266.583 us/op
Iteration   8: 16271.762 us/op
Iteration   9: 16364.800 us/op
Iteration  10: 16231.755 us/op
Iteration  11: 16271.325 us/op
Iteration  12: 16189.959 us/op
Iteration  13: 16200.177 us/op
Iteration  14: 16202.920 us/op
Iteration  15: 16321.192 us/op
Iteration  16: 16223.448 us/op
Iteration  17: 16230.007 us/op
Iteration  18: 16216.873 us/op
Iteration  19: 16411.759 us/op
Iteration  20: 16269.621 us/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testExplicit100000":
  16262.484 ±(99.9%) 47.205 us/op [Average]
  (min, avg, max) = (16189.959, 16262.484, 16411.759), stdev = 54.361
  CI (99.9%): [16215.280, 16309.689] (assumes normal distribution)


# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testImplicit10

# Run progress: 50.00% complete, ETA 00:03:21
# Fork: 1 of 1
# Warmup Iteration   1: 0.682 us/op
# Warmup Iteration   2: 0.586 us/op
# Warmup Iteration   3: 0.585 us/op
# Warmup Iteration   4: 0.594 us/op
# Warmup Iteration   5: 0.579 us/op
# Warmup Iteration   6: 0.579 us/op
# Warmup Iteration   7: 0.579 us/op
# Warmup Iteration   8: 0.578 us/op
# Warmup Iteration   9: 0.599 us/op
# Warmup Iteration  10: 0.579 us/op
# Warmup Iteration  11: 0.580 us/op
# Warmup Iteration  12: 0.579 us/op
# Warmup Iteration  13: 0.587 us/op
# Warmup Iteration  14: 0.579 us/op
# Warmup Iteration  15: 0.579 us/op
# Warmup Iteration  16: 0.580 us/op
# Warmup Iteration  17: 0.574 us/op
# Warmup Iteration  18: 0.574 us/op
# Warmup Iteration  19: 0.616 us/op
# Warmup Iteration  20: 0.575 us/op
Iteration   1: 0.576 us/op
Iteration   2: 0.581 us/op
Iteration   3: 0.575 us/op
Iteration   4: 0.574 us/op
Iteration   5: 0.575 us/op
Iteration   6: 0.575 us/op
Iteration   7: 0.577 us/op
Iteration   8: 0.576 us/op
Iteration   9: 0.579 us/op
Iteration  10: 0.577 us/op
Iteration  11: 0.582 us/op
Iteration  12: 0.578 us/op
Iteration  13: 0.578 us/op
Iteration  14: 0.579 us/op
Iteration  15: 0.580 us/op
Iteration  16: 0.578 us/op
Iteration  17: 0.579 us/op
Iteration  18: 0.579 us/op
Iteration  19: 0.582 us/op
Iteration  20: 0.575 us/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testImplicit10":
  0.578 ±(99.9%) 0.002 us/op [Average]
  (min, avg, max) = (0.574, 0.578, 0.582), stdev = 0.002
  CI (99.9%): [0.576, 0.580] (assumes normal distribution)


# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testImplicit100

# Run progress: 60.00% complete, ETA 00:02:41
# Fork: 1 of 1
# Warmup Iteration   1: 10.885 us/op
# Warmup Iteration   2: 9.824 us/op
# Warmup Iteration   3: 9.861 us/op
# Warmup Iteration   4: 9.608 us/op
# Warmup Iteration   5: 9.734 us/op
# Warmup Iteration   6: 9.911 us/op
# Warmup Iteration   7: 9.586 us/op
# Warmup Iteration   8: 9.595 us/op
# Warmup Iteration   9: 9.738 us/op
# Warmup Iteration  10: 9.610 us/op
# Warmup Iteration  11: 9.917 us/op
# Warmup Iteration  12: 9.583 us/op
# Warmup Iteration  13: 9.600 us/op
# Warmup Iteration  14: 9.584 us/op
# Warmup Iteration  15: 9.897 us/op
# Warmup Iteration  16: 9.612 us/op
# Warmup Iteration  17: 9.600 us/op
# Warmup Iteration  18: 9.578 us/op
# Warmup Iteration  19: 9.621 us/op
# Warmup Iteration  20: 9.594 us/op
Iteration   1: 9.589 us/op
Iteration   2: 9.591 us/op
Iteration   3: 9.914 us/op
Iteration   4: 9.593 us/op
Iteration   5: 9.593 us/op
Iteration   6: 9.591 us/op
Iteration   7: 9.602 us/op
Iteration   8: 9.597 us/op
Iteration   9: 9.751 us/op
Iteration  10: 9.743 us/op
Iteration  11: 9.606 us/op
Iteration  12: 9.844 us/op
Iteration  13: 9.662 us/op
Iteration  14: 9.732 us/op
Iteration  15: 9.754 us/op
Iteration  16: 9.598 us/op
Iteration  17: 9.650 us/op
Iteration  18: 9.627 us/op
Iteration  19: 9.907 us/op
Iteration  20: 9.650 us/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testImplicit100":
  9.680 ±(99.9%) 0.093 us/op [Average]
  (min, avg, max) = (9.589, 9.680, 9.914), stdev = 0.108
  CI (99.9%): [9.586, 9.773] (assumes normal distribution)


# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testImplicit1000

# Run progress: 70.00% complete, ETA 00:02:00
# Fork: 1 of 1
# Warmup Iteration   1: 137.708 us/op
# Warmup Iteration   2: 124.917 us/op
# Warmup Iteration   3: 125.698 us/op
# Warmup Iteration   4: 122.951 us/op
# Warmup Iteration   5: 127.169 us/op
# Warmup Iteration   6: 123.109 us/op
# Warmup Iteration   7: 122.931 us/op
# Warmup Iteration   8: 122.687 us/op
# Warmup Iteration   9: 124.044 us/op
# Warmup Iteration  10: 123.151 us/op
# Warmup Iteration  11: 122.759 us/op
# Warmup Iteration  12: 123.085 us/op
# Warmup Iteration  13: 122.827 us/op
# Warmup Iteration  14: 122.959 us/op
# Warmup Iteration  15: 123.222 us/op
# Warmup Iteration  16: 123.287 us/op
# Warmup Iteration  17: 122.900 us/op
# Warmup Iteration  18: 122.736 us/op
# Warmup Iteration  19: 123.430 us/op
# Warmup Iteration  20: 122.449 us/op
Iteration   1: 122.746 us/op
Iteration   2: 139.776 us/op
Iteration   3: 122.704 us/op
Iteration   4: 122.859 us/op
Iteration   5: 122.834 us/op
Iteration   6: 122.689 us/op
Iteration   7: 122.881 us/op
Iteration   8: 122.919 us/op
Iteration   9: 123.086 us/op
Iteration  10: 122.863 us/op
Iteration  11: 123.104 us/op
Iteration  12: 122.928 us/op
Iteration  13: 122.922 us/op
Iteration  14: 122.952 us/op
Iteration  15: 122.899 us/op
Iteration  16: 123.996 us/op
Iteration  17: 123.945 us/op
Iteration  18: 123.137 us/op
Iteration  19: 123.523 us/op
Iteration  20: 123.578 us/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testImplicit1000":
  123.917 ±(99.9%) 3.258 us/op [Average]
  (min, avg, max) = (122.689, 123.917, 139.776), stdev = 3.752
  CI (99.9%): [120.659, 127.175] (assumes normal distribution)


# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testImplicit10000

# Run progress: 80.00% complete, ETA 00:01:20
# Fork: 1 of 1
# Warmup Iteration   1: 1625.611 us/op
# Warmup Iteration   2: 1488.423 us/op
# Warmup Iteration   3: 1483.504 us/op
# Warmup Iteration   4: 1472.350 us/op
# Warmup Iteration   5: 1486.002 us/op
# Warmup Iteration   6: 1458.720 us/op
# Warmup Iteration   7: 1543.352 us/op
# Warmup Iteration   8: 1479.216 us/op
# Warmup Iteration   9: 1461.635 us/op
# Warmup Iteration  10: 1456.670 us/op
# Warmup Iteration  11: 1461.262 us/op
# Warmup Iteration  12: 1462.702 us/op
# Warmup Iteration  13: 1460.109 us/op
# Warmup Iteration  14: 1466.020 us/op
# Warmup Iteration  15: 1458.994 us/op
# Warmup Iteration  16: 1466.963 us/op
# Warmup Iteration  17: 1467.472 us/op
# Warmup Iteration  18: 1473.853 us/op
# Warmup Iteration  19: 1471.384 us/op
# Warmup Iteration  20: 1470.846 us/op
Iteration   1: 1465.710 us/op
Iteration   2: 1480.495 us/op
Iteration   3: 1471.246 us/op
Iteration   4: 1488.468 us/op
Iteration   5: 1472.410 us/op
Iteration   6: 1475.041 us/op
Iteration   7: 1467.055 us/op
Iteration   8: 1488.692 us/op
Iteration   9: 1522.015 us/op
Iteration  10: 1564.062 us/op
Iteration  11: 1468.526 us/op
Iteration  12: 1469.160 us/op
Iteration  13: 1474.690 us/op
Iteration  14: 1470.182 us/op
Iteration  15: 1475.807 us/op
Iteration  16: 1476.897 us/op
Iteration  17: 1479.800 us/op
Iteration  18: 1482.595 us/op
Iteration  19: 1481.188 us/op
Iteration  20: 1475.373 us/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testImplicit10000":
  1482.471 ±(99.9%) 19.740 us/op [Average]
  (min, avg, max) = (1465.710, 1482.471, 1564.062), stdev = 22.732
  CI (99.9%): [1462.731, 1502.210] (assumes normal distribution)


# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testImplicit100000

# Run progress: 90.00% complete, ETA 00:00:40
# Fork: 1 of 1
# Warmup Iteration   1: 19594.953 us/op
# Warmup Iteration   2: 17805.881 us/op
# Warmup Iteration   3: 17733.060 us/op
# Warmup Iteration   4: 17751.719 us/op
# Warmup Iteration   5: 17652.354 us/op
# Warmup Iteration   6: 17463.134 us/op
# Warmup Iteration   7: 17409.889 us/op
# Warmup Iteration   8: 17794.246 us/op
# Warmup Iteration   9: 17608.500 us/op
# Warmup Iteration  10: 17474.224 us/op
# Warmup Iteration  11: 18626.943 us/op
# Warmup Iteration  12: 17436.713 us/op
# Warmup Iteration  13: 17440.039 us/op
# Warmup Iteration  14: 17436.984 us/op
# Warmup Iteration  15: 17525.313 us/op
# Warmup Iteration  16: 17461.811 us/op
# Warmup Iteration  17: 17477.320 us/op
# Warmup Iteration  18: 17600.638 us/op
# Warmup Iteration  19: 17454.341 us/op
# Warmup Iteration  20: 17452.351 us/op
Iteration   1: 17416.371 us/op
Iteration   2: 17456.215 us/op
Iteration   3: 17565.007 us/op
Iteration   4: 17448.467 us/op
Iteration   5: 17407.386 us/op
Iteration   6: 17412.011 us/op
Iteration   7: 17441.956 us/op
Iteration   8: 17640.267 us/op
Iteration   9: 17443.803 us/op
Iteration  10: 17502.703 us/op
Iteration  11: 17460.545 us/op
Iteration  12: 17464.479 us/op
Iteration  13: 17489.593 us/op
Iteration  14: 17549.659 us/op
Iteration  15: 17551.961 us/op
Iteration  16: 17625.076 us/op
Iteration  17: 17602.910 us/op
Iteration  18: 17636.539 us/op
Iteration  19: 17602.621 us/op
Iteration  20: 17551.758 us/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testImplicit100000":
  17513.466 ±(99.9%) 69.261 us/op [Average]
  (min, avg, max) = (17407.386, 17513.466, 17640.267), stdev = 79.761
  CI (99.9%): [17444.205, 17582.727] (assumes normal distribution)


# Run complete. Total time: 00:06:43

Benchmark                     Mode  Cnt      Score    Error  Units
MergeSort.testExplicit10      avgt   20      0.464 ±  0.001  us/op
MergeSort.testExplicit100     avgt   20      7.996 ±  0.055  us/op
MergeSort.testExplicit1000    avgt   20    109.161 ±  0.752  us/op
MergeSort.testExplicit10000   avgt   20   1304.565 ±  5.737  us/op
MergeSort.testExplicit100000  avgt   20  16262.484 ± 47.205  us/op
MergeSort.testImplicit10      avgt   20      0.578 ±  0.002  us/op
MergeSort.testImplicit100     avgt   20      9.680 ±  0.093  us/op
MergeSort.testImplicit1000    avgt   20    123.917 ±  3.258  us/op
MergeSort.testImplicit10000   avgt   20   1482.471 ± 19.740  us/op
MergeSort.testImplicit100000  avgt   20  17513.466 ± 69.261  us/op
[DONE] ./reflection_array.xml
[START] ./reflection_lru.xml
# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args0

# Run progress: 0.00% complete, ETA 00:06:00
# Fork: 1 of 1
# Warmup Iteration   1: 7.242 ns/op
# Warmup Iteration   2: 10.830 ns/op
# Warmup Iteration   3: 9.677 ns/op
# Warmup Iteration   4: 9.405 ns/op
# Warmup Iteration   5: 9.650 ns/op
# Warmup Iteration   6: 9.315 ns/op
# Warmup Iteration   7: 9.325 ns/op
# Warmup Iteration   8: 9.323 ns/op
# Warmup Iteration   9: 9.330 ns/op
# Warmup Iteration  10: 9.324 ns/op
# Warmup Iteration  11: 9.380 ns/op
# Warmup Iteration  12: 9.321 ns/op
# Warmup Iteration  13: 9.349 ns/op
# Warmup Iteration  14: 9.346 ns/op
# Warmup Iteration  15: 9.340 ns/op
# Warmup Iteration  16: 9.346 ns/op
# Warmup Iteration  17: 9.379 ns/op
# Warmup Iteration  18: 9.385 ns/op
# Warmup Iteration  19: 9.442 ns/op
# Warmup Iteration  20: 9.376 ns/op
Iteration   1: 9.399 ns/op
Iteration   2: 9.364 ns/op
Iteration   3: 9.351 ns/op
Iteration   4: 9.365 ns/op
Iteration   5: 9.372 ns/op
Iteration   6: 9.377 ns/op
Iteration   7: 9.402 ns/op
Iteration   8: 9.409 ns/op
Iteration   9: 9.423 ns/op
Iteration  10: 9.417 ns/op
Iteration  11: 9.427 ns/op
Iteration  12: 9.412 ns/op
Iteration  13: 9.418 ns/op
Iteration  14: 9.394 ns/op
Iteration  15: 9.376 ns/op
Iteration  16: 9.426 ns/op
Iteration  17: 9.376 ns/op
Iteration  18: 9.376 ns/op
Iteration  19: 9.398 ns/op
Iteration  20: 9.394 ns/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args0":
  9.394 ±(99.9%) 0.020 ns/op [Average]
  (min, avg, max) = (9.351, 9.394, 9.427), stdev = 0.023
  CI (99.9%): [9.374, 9.414] (assumes normal distribution)


# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args1

# Run progress: 11.11% complete, ETA 00:05:21
# Fork: 1 of 1
# Warmup Iteration   1: 7.280 ns/op
# Warmup Iteration   2: 12.370 ns/op
# Warmup Iteration   3: 12.094 ns/op
# Warmup Iteration   4: 11.791 ns/op
# Warmup Iteration   5: 11.793 ns/op
# Warmup Iteration   6: 11.787 ns/op
# Warmup Iteration   7: 11.839 ns/op
# Warmup Iteration   8: 12.038 ns/op
# Warmup Iteration   9: 13.112 ns/op
# Warmup Iteration  10: 11.831 ns/op
# Warmup Iteration  11: 11.980 ns/op
# Warmup Iteration  12: 13.089 ns/op
# Warmup Iteration  13: 13.263 ns/op
# Warmup Iteration  14: 13.323 ns/op
# Warmup Iteration  15: 13.239 ns/op
# Warmup Iteration  16: 13.254 ns/op
# Warmup Iteration  17: 13.282 ns/op
# Warmup Iteration  18: 13.209 ns/op
# Warmup Iteration  19: 13.045 ns/op
# Warmup Iteration  20: 13.177 ns/op
Iteration   1: 13.350 ns/op
Iteration   2: 12.600 ns/op
Iteration   3: 11.348 ns/op
Iteration   4: 11.460 ns/op
Iteration   5: 11.939 ns/op
Iteration   6: 11.376 ns/op
Iteration   7: 11.651 ns/op
Iteration   8: 11.366 ns/op
Iteration   9: 11.515 ns/op
Iteration  10: 11.537 ns/op
Iteration  11: 11.420 ns/op
Iteration  12: 11.315 ns/op
Iteration  13: 11.337 ns/op
Iteration  14: 11.386 ns/op
Iteration  15: 11.736 ns/op
Iteration  16: 11.379 ns/op
Iteration  17: 11.389 ns/op
Iteration  18: 11.415 ns/op
Iteration  19: 11.445 ns/op
Iteration  20: 11.833 ns/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args1":
  11.640 ±(99.9%) 0.437 ns/op [Average]
  (min, avg, max) = (11.315, 11.640, 13.350), stdev = 0.503
  CI (99.9%): [11.203, 12.076] (assumes normal distribution)


# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args10

# Run progress: 22.22% complete, ETA 00:04:41
# Fork: 1 of 1
# Warmup Iteration   1: 56.990 ns/op
# Warmup Iteration   2: 54.893 ns/op
# Warmup Iteration   3: 54.821 ns/op
# Warmup Iteration   4: 54.048 ns/op
# Warmup Iteration   5: 54.113 ns/op
# Warmup Iteration   6: 54.090 ns/op
# Warmup Iteration   7: 54.066 ns/op
# Warmup Iteration   8: 54.427 ns/op
# Warmup Iteration   9: 54.051 ns/op
# Warmup Iteration  10: 54.305 ns/op
# Warmup Iteration  11: 54.082 ns/op
# Warmup Iteration  12: 54.171 ns/op
# Warmup Iteration  13: 54.092 ns/op
# Warmup Iteration  14: 54.063 ns/op
# Warmup Iteration  15: 54.251 ns/op
# Warmup Iteration  16: 54.213 ns/op
# Warmup Iteration  17: 54.477 ns/op
# Warmup Iteration  18: 54.332 ns/op
# Warmup Iteration  19: 54.195 ns/op
# Warmup Iteration  20: 54.521 ns/op
Iteration   1: 54.462 ns/op
Iteration   2: 54.492 ns/op
Iteration   3: 54.538 ns/op
Iteration   4: 54.949 ns/op
Iteration   5: 54.172 ns/op
Iteration   6: 54.342 ns/op
Iteration   7: 55.748 ns/op
Iteration   8: 54.240 ns/op
Iteration   9: 54.266 ns/op
Iteration  10: 54.710 ns/op
Iteration  11: 54.309 ns/op
Iteration  12: 54.489 ns/op
Iteration  13: 54.551 ns/op
Iteration  14: 54.385 ns/op
Iteration  15: 54.550 ns/op
Iteration  16: 54.424 ns/op
Iteration  17: 54.471 ns/op
Iteration  18: 54.330 ns/op
Iteration  19: 54.639 ns/op
Iteration  20: 54.488 ns/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args10":
  54.528 ±(99.9%) 0.292 ns/op [Average]
  (min, avg, max) = (54.172, 54.528, 55.748), stdev = 0.337
  CI (99.9%): [54.235, 54.820] (assumes normal distribution)


# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args15

# Run progress: 33.33% complete, ETA 00:04:01
# Fork: 1 of 1
# Warmup Iteration   1: 82.526 ns/op
# Warmup Iteration   2: 79.982 ns/op
# Warmup Iteration   3: 80.467 ns/op
# Warmup Iteration   4: 78.970 ns/op
# Warmup Iteration   5: 78.746 ns/op
# Warmup Iteration   6: 78.753 ns/op
# Warmup Iteration   7: 78.960 ns/op
# Warmup Iteration   8: 78.770 ns/op
# Warmup Iteration   9: 78.842 ns/op
# Warmup Iteration  10: 79.193 ns/op
# Warmup Iteration  11: 78.875 ns/op
# Warmup Iteration  12: 79.183 ns/op
# Warmup Iteration  13: 78.818 ns/op
# Warmup Iteration  14: 79.003 ns/op
# Warmup Iteration  15: 86.859 ns/op
# Warmup Iteration  16: 78.851 ns/op
# Warmup Iteration  17: 82.543 ns/op
# Warmup Iteration  18: 79.832 ns/op
# Warmup Iteration  19: 80.565 ns/op
# Warmup Iteration  20: 79.766 ns/op
Iteration   1: 79.733 ns/op
Iteration   2: 79.337 ns/op
Iteration   3: 79.587 ns/op
Iteration   4: 79.871 ns/op
Iteration   5: 79.152 ns/op
Iteration   6: 79.117 ns/op
Iteration   7: 79.332 ns/op
Iteration   8: 79.137 ns/op
Iteration   9: 79.358 ns/op
Iteration  10: 80.026 ns/op
Iteration  11: 80.405 ns/op
Iteration  12: 79.471 ns/op
Iteration  13: 79.213 ns/op
Iteration  14: 79.200 ns/op
Iteration  15: 79.178 ns/op
Iteration  16: 81.906 ns/op
Iteration  17: 79.516 ns/op
Iteration  18: 79.462 ns/op
Iteration  19: 79.315 ns/op
Iteration  20: 79.510 ns/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args15":
  79.591 ±(99.9%) 0.553 ns/op [Average]
  (min, avg, max) = (79.117, 79.591, 81.906), stdev = 0.637
  CI (99.9%): [79.038, 80.144] (assumes normal distribution)


# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args2

# Run progress: 44.44% complete, ETA 00:03:21
# Fork: 1 of 1
# Warmup Iteration   1: 7.494 ns/op
# Warmup Iteration   2: 13.293 ns/op
# Warmup Iteration   3: 13.010 ns/op
# Warmup Iteration   4: 12.555 ns/op
# Warmup Iteration   5: 12.557 ns/op
# Warmup Iteration   6: 13.095 ns/op
# Warmup Iteration   7: 13.076 ns/op
# Warmup Iteration   8: 13.113 ns/op
# Warmup Iteration   9: 13.102 ns/op
# Warmup Iteration  10: 13.198 ns/op
# Warmup Iteration  11: 13.157 ns/op
# Warmup Iteration  12: 13.165 ns/op
# Warmup Iteration  13: 13.139 ns/op
# Warmup Iteration  14: 13.116 ns/op
# Warmup Iteration  15: 13.161 ns/op
# Warmup Iteration  16: 13.212 ns/op
# Warmup Iteration  17: 12.583 ns/op
# Warmup Iteration  18: 12.582 ns/op
# Warmup Iteration  19: 12.622 ns/op
# Warmup Iteration  20: 12.642 ns/op
Iteration   1: 12.641 ns/op
Iteration   2: 12.614 ns/op
Iteration   3: 12.525 ns/op
Iteration   4: 12.536 ns/op
Iteration   5: 12.577 ns/op
Iteration   6: 12.552 ns/op
Iteration   7: 12.681 ns/op
Iteration   8: 12.611 ns/op
Iteration   9: 12.557 ns/op
Iteration  10: 12.688 ns/op
Iteration  11: 12.558 ns/op
Iteration  12: 12.621 ns/op
Iteration  13: 12.657 ns/op
Iteration  14: 12.639 ns/op
Iteration  15: 12.619 ns/op
Iteration  16: 12.634 ns/op
Iteration  17: 12.639 ns/op
Iteration  18: 12.615 ns/op
Iteration  19: 12.630 ns/op
Iteration  20: 12.651 ns/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args2":
  12.612 ±(99.9%) 0.041 ns/op [Average]
  (min, avg, max) = (12.525, 12.612, 12.688), stdev = 0.047
  CI (99.9%): [12.572, 12.653] (assumes normal distribution)


# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args20

# Run progress: 55.56% complete, ETA 00:02:40
# Fork: 1 of 1
# Warmup Iteration   1: 116.607 ns/op
# Warmup Iteration   2: 111.685 ns/op
# Warmup Iteration   3: 110.127 ns/op
# Warmup Iteration   4: 110.233 ns/op
# Warmup Iteration   5: 110.042 ns/op
# Warmup Iteration   6: 110.346 ns/op
# Warmup Iteration   7: 110.353 ns/op
# Warmup Iteration   8: 110.662 ns/op
# Warmup Iteration   9: 110.979 ns/op
# Warmup Iteration  10: 110.523 ns/op
# Warmup Iteration  11: 110.440 ns/op
# Warmup Iteration  12: 110.640 ns/op
# Warmup Iteration  13: 110.803 ns/op
# Warmup Iteration  14: 111.067 ns/op
# Warmup Iteration  15: 110.258 ns/op
# Warmup Iteration  16: 110.215 ns/op
# Warmup Iteration  17: 110.425 ns/op
# Warmup Iteration  18: 110.458 ns/op
# Warmup Iteration  19: 110.841 ns/op
# Warmup Iteration  20: 111.284 ns/op
Iteration   1: 110.332 ns/op
Iteration   2: 112.724 ns/op
Iteration   3: 110.670 ns/op
Iteration   4: 110.902 ns/op
Iteration   5: 110.950 ns/op
Iteration   6: 111.230 ns/op
Iteration   7: 111.009 ns/op
Iteration   8: 110.674 ns/op
Iteration   9: 111.627 ns/op
Iteration  10: 111.321 ns/op
Iteration  11: 111.301 ns/op
Iteration  12: 110.371 ns/op
Iteration  13: 109.986 ns/op
Iteration  14: 110.288 ns/op
Iteration  15: 110.116 ns/op
Iteration  16: 110.943 ns/op
Iteration  17: 110.493 ns/op
Iteration  18: 110.891 ns/op
Iteration  19: 110.688 ns/op
Iteration  20: 111.468 ns/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args20":
  110.899 ±(99.9%) 0.541 ns/op [Average]
  (min, avg, max) = (109.986, 110.899, 112.724), stdev = 0.623
  CI (99.9%): [110.358, 111.441] (assumes normal distribution)


# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args3

# Run progress: 66.67% complete, ETA 00:02:00
# Fork: 1 of 1
# Warmup Iteration   1: 7.426 ns/op
# Warmup Iteration   2: 14.948 ns/op
# Warmup Iteration   3: 14.203 ns/op
# Warmup Iteration   4: 13.822 ns/op
# Warmup Iteration   5: 13.802 ns/op
# Warmup Iteration   6: 13.852 ns/op
# Warmup Iteration   7: 13.836 ns/op
# Warmup Iteration   8: 13.863 ns/op
# Warmup Iteration   9: 13.866 ns/op
# Warmup Iteration  10: 13.950 ns/op
# Warmup Iteration  11: 13.838 ns/op
# Warmup Iteration  12: 13.839 ns/op
# Warmup Iteration  13: 13.846 ns/op
# Warmup Iteration  14: 13.933 ns/op
# Warmup Iteration  15: 13.960 ns/op
# Warmup Iteration  16: 13.916 ns/op
# Warmup Iteration  17: 14.075 ns/op
# Warmup Iteration  18: 14.071 ns/op
# Warmup Iteration  19: 14.580 ns/op
# Warmup Iteration  20: 14.058 ns/op
Iteration   1: 14.037 ns/op
Iteration   2: 14.169 ns/op
Iteration   3: 13.968 ns/op
Iteration   4: 14.015 ns/op
Iteration   5: 13.961 ns/op
Iteration   6: 14.047 ns/op
Iteration   7: 14.072 ns/op
Iteration   8: 14.032 ns/op
Iteration   9: 14.101 ns/op
Iteration  10: 14.041 ns/op
Iteration  11: 14.095 ns/op
Iteration  12: 14.044 ns/op
Iteration  13: 14.093 ns/op
Iteration  14: 14.092 ns/op
Iteration  15: 13.989 ns/op
Iteration  16: 13.931 ns/op
Iteration  17: 13.964 ns/op
Iteration  18: 13.956 ns/op
Iteration  19: 14.603 ns/op
Iteration  20: 13.986 ns/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args3":
  14.060 ±(99.9%) 0.123 ns/op [Average]
  (min, avg, max) = (13.931, 14.060, 14.603), stdev = 0.142
  CI (99.9%): [13.937, 14.183] (assumes normal distribution)


# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args4

# Run progress: 77.78% complete, ETA 00:01:20
# Fork: 1 of 1
# Warmup Iteration   1: 26.262 ns/op
# Warmup Iteration   2: 25.726 ns/op
# Warmup Iteration   3: 25.225 ns/op
# Warmup Iteration   4: 24.714 ns/op
# Warmup Iteration   5: 24.392 ns/op
# Warmup Iteration   6: 24.287 ns/op
# Warmup Iteration   7: 24.356 ns/op
# Warmup Iteration   8: 24.331 ns/op
# Warmup Iteration   9: 27.062 ns/op
# Warmup Iteration  10: 27.373 ns/op
# Warmup Iteration  11: 26.160 ns/op
# Warmup Iteration  12: 24.337 ns/op
# Warmup Iteration  13: 26.652 ns/op
# Warmup Iteration  14: 24.447 ns/op
# Warmup Iteration  15: 25.431 ns/op
# Warmup Iteration  16: 26.418 ns/op
# Warmup Iteration  17: 26.279 ns/op
# Warmup Iteration  18: 24.344 ns/op
# Warmup Iteration  19: 24.410 ns/op
# Warmup Iteration  20: 24.352 ns/op
Iteration   1: 24.443 ns/op
Iteration   2: 24.549 ns/op
Iteration   3: 24.487 ns/op
Iteration   4: 24.459 ns/op
Iteration   5: 24.495 ns/op
Iteration   6: 24.507 ns/op
Iteration   7: 24.642 ns/op
Iteration   8: 24.400 ns/op
Iteration   9: 24.482 ns/op
Iteration  10: 24.423 ns/op
Iteration  11: 24.513 ns/op
Iteration  12: 24.612 ns/op
Iteration  13: 24.366 ns/op
Iteration  14: 24.369 ns/op
Iteration  15: 24.461 ns/op
Iteration  16: 24.493 ns/op
Iteration  17: 24.480 ns/op
Iteration  18: 24.474 ns/op
Iteration  19: 24.681 ns/op
Iteration  20: 24.405 ns/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args4":
  24.487 ±(99.9%) 0.073 ns/op [Average]
  (min, avg, max) = (24.366, 24.487, 24.681), stdev = 0.084
  CI (99.9%): [24.415, 24.560] (assumes normal distribution)


# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args5

# Run progress: 88.89% complete, ETA 00:00:40
# Fork: 1 of 1
# Warmup Iteration   1: 30.469 ns/op
# Warmup Iteration   2: 34.128 ns/op
# Warmup Iteration   3: 29.573 ns/op
# Warmup Iteration   4: 29.580 ns/op
# Warmup Iteration   5: 29.523 ns/op
# Warmup Iteration   6: 29.604 ns/op
# Warmup Iteration   7: 29.652 ns/op
# Warmup Iteration   8: 29.593 ns/op
# Warmup Iteration   9: 29.636 ns/op
# Warmup Iteration  10: 29.741 ns/op
# Warmup Iteration  11: 29.866 ns/op
# Warmup Iteration  12: 29.644 ns/op
# Warmup Iteration  13: 29.552 ns/op
# Warmup Iteration  14: 29.604 ns/op
# Warmup Iteration  15: 29.789 ns/op
# Warmup Iteration  16: 29.946 ns/op
# Warmup Iteration  17: 29.471 ns/op
# Warmup Iteration  18: 29.563 ns/op
# Warmup Iteration  19: 29.594 ns/op
# Warmup Iteration  20: 29.580 ns/op
Iteration   1: 29.565 ns/op
Iteration   2: 29.657 ns/op
Iteration   3: 29.657 ns/op
Iteration   4: 29.822 ns/op
Iteration   5: 29.767 ns/op
Iteration   6: 29.855 ns/op
Iteration   7: 29.825 ns/op
Iteration   8: 29.804 ns/op
Iteration   9: 29.906 ns/op
Iteration  10: 29.773 ns/op
Iteration  11: 29.798 ns/op
Iteration  12: 29.838 ns/op
Iteration  13: 29.995 ns/op
Iteration  14: 29.819 ns/op
Iteration  15: 29.810 ns/op
Iteration  16: 29.795 ns/op
Iteration  17: 29.901 ns/op
Iteration  18: 30.541 ns/op
Iteration  19: 29.943 ns/op
Iteration  20: 29.800 ns/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args5":
  29.844 ±(99.9%) 0.166 ns/op [Average]
  (min, avg, max) = (29.565, 29.844, 30.541), stdev = 0.191
  CI (99.9%): [29.677, 30.010] (assumes normal distribution)


# Run complete. Total time: 00:06:02

Benchmark         Mode  Cnt    Score   Error  Units
SingleRun.args0   avgt   20    9.394 ± 0.020  ns/op
SingleRun.args1   avgt   20   11.640 ± 0.437  ns/op
SingleRun.args10  avgt   20   54.528 ± 0.292  ns/op
SingleRun.args15  avgt   20   79.591 ± 0.553  ns/op
SingleRun.args2   avgt   20   12.612 ± 0.041  ns/op
SingleRun.args20  avgt   20  110.899 ± 0.541  ns/op
SingleRun.args3   avgt   20   14.060 ± 0.123  ns/op
SingleRun.args4   avgt   20   24.487 ± 0.073  ns/op
SingleRun.args5   avgt   20   29.844 ± 0.166  ns/op
# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.MultiTarget.test

# Run progress: 0.00% complete, ETA 00:00:40
# Fork: 1 of 1
# Warmup Iteration   1: 24374.904 ns/op
# Warmup Iteration   2: 22817.326 ns/op
# Warmup Iteration   3: 22610.414 ns/op
# Warmup Iteration   4: 23247.942 ns/op
# Warmup Iteration   5: 22940.917 ns/op
# Warmup Iteration   6: 22958.627 ns/op
# Warmup Iteration   7: 23021.185 ns/op
# Warmup Iteration   8: 23102.897 ns/op
# Warmup Iteration   9: 23056.598 ns/op
# Warmup Iteration  10: 22931.911 ns/op
# Warmup Iteration  11: 22948.462 ns/op
# Warmup Iteration  12: 23111.491 ns/op
# Warmup Iteration  13: 23158.708 ns/op
# Warmup Iteration  14: 22975.134 ns/op
# Warmup Iteration  15: 23049.083 ns/op
# Warmup Iteration  16: 22989.740 ns/op
# Warmup Iteration  17: 23268.047 ns/op
# Warmup Iteration  18: 23314.549 ns/op
# Warmup Iteration  19: 23312.868 ns/op
# Warmup Iteration  20: 23351.706 ns/op
Iteration   1: 23422.748 ns/op
Iteration   2: 23260.672 ns/op
Iteration   3: 23308.588 ns/op
Iteration   4: 23347.845 ns/op
Iteration   5: 23368.180 ns/op
Iteration   6: 23285.394 ns/op
Iteration   7: 23304.621 ns/op
Iteration   8: 23401.574 ns/op
Iteration   9: 23276.117 ns/op
Iteration  10: 23265.729 ns/op
Iteration  11: 23226.123 ns/op
Iteration  12: 23182.586 ns/op
Iteration  13: 23163.048 ns/op
Iteration  14: 23106.175 ns/op
Iteration  15: 23169.108 ns/op
Iteration  16: 23185.768 ns/op
Iteration  17: 23321.165 ns/op
Iteration  18: 23319.631 ns/op
Iteration  19: 23222.023 ns/op
Iteration  20: 23231.289 ns/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.MultiTarget.test":
  23268.419 ±(99.9%) 72.750 ns/op [Average]
  (min, avg, max) = (23106.175, 23268.419, 23422.748), stdev = 83.779
  CI (99.9%): [23195.669, 23341.169] (assumes normal distribution)


# Run complete. Total time: 00:00:40

Benchmark         Mode  Cnt      Score    Error  Units
MultiTarget.test  avgt   20  23268.419 ± 72.750  ns/op
# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testExplicit10

# Run progress: 0.00% complete, ETA 00:06:40
# Fork: 1 of 1
# Warmup Iteration   1: 0.507 us/op
# Warmup Iteration   2: 0.479 us/op
# Warmup Iteration   3: 0.478 us/op
# Warmup Iteration   4: 0.466 us/op
# Warmup Iteration   5: 0.470 us/op
# Warmup Iteration   6: 0.482 us/op
# Warmup Iteration   7: 0.466 us/op
# Warmup Iteration   8: 0.470 us/op
# Warmup Iteration   9: 0.468 us/op
# Warmup Iteration  10: 0.467 us/op
# Warmup Iteration  11: 0.466 us/op
# Warmup Iteration  12: 0.472 us/op
# Warmup Iteration  13: 0.469 us/op
# Warmup Iteration  14: 0.468 us/op
# Warmup Iteration  15: 0.468 us/op
# Warmup Iteration  16: 0.469 us/op
# Warmup Iteration  17: 0.468 us/op
# Warmup Iteration  18: 0.470 us/op
# Warmup Iteration  19: 0.470 us/op
# Warmup Iteration  20: 0.470 us/op
Iteration   1: 0.468 us/op
Iteration   2: 0.469 us/op
Iteration   3: 0.469 us/op
Iteration   4: 0.469 us/op
Iteration   5: 0.470 us/op
Iteration   6: 0.469 us/op
Iteration   7: 0.468 us/op
Iteration   8: 0.469 us/op
Iteration   9: 0.497 us/op
Iteration  10: 0.469 us/op
Iteration  11: 0.467 us/op
Iteration  12: 0.469 us/op
Iteration  13: 0.469 us/op
Iteration  14: 0.467 us/op
Iteration  15: 0.470 us/op
Iteration  16: 0.468 us/op
Iteration  17: 0.471 us/op
Iteration  18: 0.479 us/op
Iteration  19: 0.470 us/op
Iteration  20: 0.470 us/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testExplicit10":
  0.471 ±(99.9%) 0.006 us/op [Average]
  (min, avg, max) = (0.467, 0.471, 0.497), stdev = 0.007
  CI (99.9%): [0.465, 0.477] (assumes normal distribution)


# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testExplicit100

# Run progress: 10.00% complete, ETA 00:06:01
# Fork: 1 of 1
# Warmup Iteration   1: 8.474 us/op
# Warmup Iteration   2: 8.168 us/op
# Warmup Iteration   3: 7.980 us/op
# Warmup Iteration   4: 7.906 us/op
# Warmup Iteration   5: 8.118 us/op
# Warmup Iteration   6: 7.823 us/op
# Warmup Iteration   7: 7.812 us/op
# Warmup Iteration   8: 7.822 us/op
# Warmup Iteration   9: 7.776 us/op
# Warmup Iteration  10: 7.789 us/op
# Warmup Iteration  11: 7.797 us/op
# Warmup Iteration  12: 7.783 us/op
# Warmup Iteration  13: 7.790 us/op
# Warmup Iteration  14: 7.772 us/op
# Warmup Iteration  15: 7.784 us/op
# Warmup Iteration  16: 7.779 us/op
# Warmup Iteration  17: 7.791 us/op
# Warmup Iteration  18: 7.820 us/op
# Warmup Iteration  19: 7.782 us/op
# Warmup Iteration  20: 7.777 us/op
Iteration   1: 7.794 us/op
Iteration   2: 7.996 us/op
Iteration   3: 8.504 us/op
Iteration   4: 8.170 us/op
Iteration   5: 7.833 us/op
Iteration   6: 7.801 us/op
Iteration   7: 7.836 us/op
Iteration   8: 7.866 us/op
Iteration   9: 7.883 us/op
Iteration  10: 7.798 us/op
Iteration  11: 7.851 us/op
Iteration  12: 7.842 us/op
Iteration  13: 7.872 us/op
Iteration  14: 7.862 us/op
Iteration  15: 7.955 us/op
Iteration  16: 7.905 us/op
Iteration  17: 7.837 us/op
Iteration  18: 7.932 us/op
Iteration  19: 7.873 us/op
Iteration  20: 7.894 us/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testExplicit100":
  7.915 ±(99.9%) 0.141 us/op [Average]
  (min, avg, max) = (7.794, 7.915, 8.504), stdev = 0.162
  CI (99.9%): [7.774, 8.056] (assumes normal distribution)


# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testExplicit1000

# Run progress: 20.00% complete, ETA 00:05:21
# Fork: 1 of 1
# Warmup Iteration   1: 114.439 us/op
# Warmup Iteration   2: 108.277 us/op
# Warmup Iteration   3: 107.910 us/op
# Warmup Iteration   4: 108.429 us/op
# Warmup Iteration   5: 109.414 us/op
# Warmup Iteration   6: 106.827 us/op
# Warmup Iteration   7: 106.746 us/op
# Warmup Iteration   8: 108.017 us/op
# Warmup Iteration   9: 106.866 us/op
# Warmup Iteration  10: 106.703 us/op
# Warmup Iteration  11: 106.572 us/op
# Warmup Iteration  12: 106.681 us/op
# Warmup Iteration  13: 106.910 us/op
# Warmup Iteration  14: 106.987 us/op
# Warmup Iteration  15: 106.382 us/op
# Warmup Iteration  16: 106.578 us/op
# Warmup Iteration  17: 106.461 us/op
# Warmup Iteration  18: 107.105 us/op
# Warmup Iteration  19: 106.444 us/op
# Warmup Iteration  20: 106.971 us/op
Iteration   1: 106.613 us/op
Iteration   2: 106.311 us/op
Iteration   3: 106.538 us/op
Iteration   4: 106.144 us/op
Iteration   5: 106.869 us/op
Iteration   6: 107.128 us/op
Iteration   7: 106.878 us/op
Iteration   8: 106.674 us/op
Iteration   9: 110.142 us/op
Iteration  10: 106.672 us/op
Iteration  11: 110.075 us/op
Iteration  12: 107.055 us/op
Iteration  13: 107.049 us/op
Iteration  14: 107.742 us/op
Iteration  15: 106.814 us/op
Iteration  16: 106.280 us/op
Iteration  17: 107.043 us/op
Iteration  18: 107.169 us/op
Iteration  19: 106.488 us/op
Iteration  20: 107.278 us/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testExplicit1000":
  107.148 ±(99.9%) 0.939 us/op [Average]
  (min, avg, max) = (106.144, 107.148, 110.142), stdev = 1.081
  CI (99.9%): [106.209, 108.087] (assumes normal distribution)


# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testExplicit10000

# Run progress: 30.00% complete, ETA 00:04:41
# Fork: 1 of 1
# Warmup Iteration   1: 1393.888 us/op
# Warmup Iteration   2: 1335.546 us/op
# Warmup Iteration   3: 1306.508 us/op
# Warmup Iteration   4: 1348.483 us/op
# Warmup Iteration   5: 1309.286 us/op
# Warmup Iteration   6: 1311.028 us/op
# Warmup Iteration   7: 1311.930 us/op
# Warmup Iteration   8: 1316.775 us/op
# Warmup Iteration   9: 1304.599 us/op
# Warmup Iteration  10: 1304.813 us/op
# Warmup Iteration  11: 1304.918 us/op
# Warmup Iteration  12: 1305.063 us/op
# Warmup Iteration  13: 1306.640 us/op
# Warmup Iteration  14: 1307.145 us/op
# Warmup Iteration  15: 1306.347 us/op
# Warmup Iteration  16: 1308.033 us/op
# Warmup Iteration  17: 1313.821 us/op
# Warmup Iteration  18: 1315.028 us/op
# Warmup Iteration  19: 1302.723 us/op
# Warmup Iteration  20: 1303.967 us/op
Iteration   1: 1308.099 us/op
Iteration   2: 1313.323 us/op
Iteration   3: 1309.624 us/op
Iteration   4: 1309.813 us/op
Iteration   5: 1382.095 us/op
Iteration   6: 1312.552 us/op
Iteration   7: 1326.879 us/op
Iteration   8: 1311.838 us/op
Iteration   9: 1333.457 us/op
Iteration  10: 1313.536 us/op
Iteration  11: 1315.703 us/op
Iteration  12: 1315.828 us/op
Iteration  13: 1313.564 us/op
Iteration  14: 1323.790 us/op
Iteration  15: 1319.104 us/op
Iteration  16: 1317.958 us/op
Iteration  17: 1324.927 us/op
Iteration  18: 1316.076 us/op
Iteration  19: 1309.226 us/op
Iteration  20: 1311.163 us/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testExplicit10000":
  1319.428 ±(99.9%) 14.044 us/op [Average]
  (min, avg, max) = (1308.099, 1319.428, 1382.095), stdev = 16.173
  CI (99.9%): [1305.384, 1333.472] (assumes normal distribution)


# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testExplicit100000

# Run progress: 40.00% complete, ETA 00:04:01
# Fork: 1 of 1
# Warmup Iteration   1: 16856.493 us/op
# Warmup Iteration   2: 16042.676 us/op
# Warmup Iteration   3: 17050.979 us/op
# Warmup Iteration   4: 16202.740 us/op
# Warmup Iteration   5: 15745.728 us/op
# Warmup Iteration   6: 15883.402 us/op
# Warmup Iteration   7: 16275.053 us/op
# Warmup Iteration   8: 15728.297 us/op
# Warmup Iteration   9: 15847.189 us/op
# Warmup Iteration  10: 15736.277 us/op
# Warmup Iteration  11: 15784.130 us/op
# Warmup Iteration  12: 15741.167 us/op
# Warmup Iteration  13: 15722.725 us/op
# Warmup Iteration  14: 15758.903 us/op
# Warmup Iteration  15: 15845.796 us/op
# Warmup Iteration  16: 15765.229 us/op
# Warmup Iteration  17: 16023.167 us/op
# Warmup Iteration  18: 15730.921 us/op
# Warmup Iteration  19: 15794.825 us/op
# Warmup Iteration  20: 15882.242 us/op
Iteration   1: 15812.615 us/op
Iteration   2: 15767.854 us/op
Iteration   3: 15745.915 us/op
Iteration   4: 15737.317 us/op
Iteration   5: 15789.072 us/op
Iteration   6: 15752.781 us/op
Iteration   7: 15832.962 us/op
Iteration   8: 15801.860 us/op
Iteration   9: 15764.062 us/op
Iteration  10: 15770.605 us/op
Iteration  11: 15795.885 us/op
Iteration  12: 15815.009 us/op
Iteration  13: 15881.823 us/op
Iteration  14: 16008.512 us/op
Iteration  15: 15800.029 us/op
Iteration  16: 15764.974 us/op
Iteration  17: 15927.009 us/op
Iteration  18: 15800.838 us/op
Iteration  19: 15877.471 us/op
Iteration  20: 15819.988 us/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testExplicit100000":
  15813.329 ±(99.9%) 57.828 us/op [Average]
  (min, avg, max) = (15737.317, 15813.329, 16008.512), stdev = 66.595
  CI (99.9%): [15755.501, 15871.157] (assumes normal distribution)


# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testImplicit10

# Run progress: 50.00% complete, ETA 00:03:21
# Fork: 1 of 1
# Warmup Iteration   1: 0.639 us/op
# Warmup Iteration   2: 0.593 us/op
# Warmup Iteration   3: 0.576 us/op
# Warmup Iteration   4: 0.586 us/op
# Warmup Iteration   5: 0.578 us/op
# Warmup Iteration   6: 0.579 us/op
# Warmup Iteration   7: 0.579 us/op
# Warmup Iteration   8: 0.582 us/op
# Warmup Iteration   9: 0.580 us/op
# Warmup Iteration  10: 0.580 us/op
# Warmup Iteration  11: 0.585 us/op
# Warmup Iteration  12: 0.576 us/op
# Warmup Iteration  13: 0.579 us/op
# Warmup Iteration  14: 0.583 us/op
# Warmup Iteration  15: 0.585 us/op
# Warmup Iteration  16: 0.579 us/op
# Warmup Iteration  17: 0.572 us/op
# Warmup Iteration  18: 0.567 us/op
# Warmup Iteration  19: 0.567 us/op
# Warmup Iteration  20: 0.567 us/op
Iteration   1: 0.568 us/op
Iteration   2: 0.567 us/op
Iteration   3: 0.568 us/op
Iteration   4: 0.594 us/op
Iteration   5: 0.570 us/op
Iteration   6: 0.572 us/op
Iteration   7: 0.567 us/op
Iteration   8: 0.570 us/op
Iteration   9: 0.569 us/op
Iteration  10: 0.568 us/op
Iteration  11: 0.571 us/op
Iteration  12: 0.567 us/op
Iteration  13: 0.572 us/op
Iteration  14: 0.575 us/op
Iteration  15: 0.572 us/op
Iteration  16: 0.572 us/op
Iteration  17: 0.574 us/op
Iteration  18: 0.574 us/op
Iteration  19: 0.571 us/op
Iteration  20: 0.574 us/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testImplicit10":
  0.572 ±(99.9%) 0.005 us/op [Average]
  (min, avg, max) = (0.567, 0.572, 0.594), stdev = 0.006
  CI (99.9%): [0.567, 0.577] (assumes normal distribution)


# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testImplicit100

# Run progress: 60.00% complete, ETA 00:02:41
# Fork: 1 of 1
# Warmup Iteration   1: 10.505 us/op
# Warmup Iteration   2: 9.780 us/op
# Warmup Iteration   3: 9.758 us/op
# Warmup Iteration   4: 9.511 us/op
# Warmup Iteration   5: 9.652 us/op
# Warmup Iteration   6: 9.838 us/op
# Warmup Iteration   7: 9.489 us/op
# Warmup Iteration   8: 9.541 us/op
# Warmup Iteration   9: 10.216 us/op
# Warmup Iteration  10: 9.507 us/op
# Warmup Iteration  11: 9.570 us/op
# Warmup Iteration  12: 9.490 us/op
# Warmup Iteration  13: 9.508 us/op
# Warmup Iteration  14: 9.502 us/op
# Warmup Iteration  15: 9.483 us/op
# Warmup Iteration  16: 9.528 us/op
# Warmup Iteration  17: 9.539 us/op
# Warmup Iteration  18: 9.502 us/op
# Warmup Iteration  19: 9.507 us/op
# Warmup Iteration  20: 9.516 us/op
Iteration   1: 9.492 us/op
Iteration   2: 9.479 us/op
Iteration   3: 9.489 us/op
Iteration   4: 9.552 us/op
Iteration   5: 9.511 us/op
Iteration   6: 9.588 us/op
Iteration   7: 9.507 us/op
Iteration   8: 9.519 us/op
Iteration   9: 9.487 us/op
Iteration  10: 9.625 us/op
Iteration  11: 9.504 us/op
Iteration  12: 9.513 us/op
Iteration  13: 9.514 us/op
Iteration  14: 9.516 us/op
Iteration  15: 9.520 us/op
Iteration  16: 9.593 us/op
Iteration  17: 9.555 us/op
Iteration  18: 9.581 us/op
Iteration  19: 9.531 us/op
Iteration  20: 9.531 us/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testImplicit100":
  9.530 ±(99.9%) 0.035 us/op [Average]
  (min, avg, max) = (9.479, 9.530, 9.625), stdev = 0.040
  CI (99.9%): [9.496, 9.565] (assumes normal distribution)


# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testImplicit1000

# Run progress: 70.00% complete, ETA 00:02:00
# Fork: 1 of 1
# Warmup Iteration   1: 135.782 us/op
# Warmup Iteration   2: 127.520 us/op
# Warmup Iteration   3: 128.932 us/op
# Warmup Iteration   4: 126.257 us/op
# Warmup Iteration   5: 130.121 us/op
# Warmup Iteration   6: 128.976 us/op
# Warmup Iteration   7: 127.071 us/op
# Warmup Iteration   8: 126.341 us/op
# Warmup Iteration   9: 126.082 us/op
# Warmup Iteration  10: 126.033 us/op
# Warmup Iteration  11: 125.705 us/op
# Warmup Iteration  12: 125.787 us/op
# Warmup Iteration  13: 125.883 us/op
# Warmup Iteration  14: 125.806 us/op
# Warmup Iteration  15: 125.949 us/op
# Warmup Iteration  16: 125.814 us/op
# Warmup Iteration  17: 126.207 us/op
# Warmup Iteration  18: 126.145 us/op
# Warmup Iteration  19: 126.296 us/op
# Warmup Iteration  20: 127.959 us/op
Iteration   1: 126.255 us/op
Iteration   2: 126.248 us/op
Iteration   3: 126.920 us/op
Iteration   4: 126.436 us/op
Iteration   5: 126.313 us/op
Iteration   6: 126.429 us/op
Iteration   7: 126.514 us/op
Iteration   8: 126.302 us/op
Iteration   9: 126.444 us/op
Iteration  10: 126.266 us/op
Iteration  11: 126.254 us/op
Iteration  12: 126.208 us/op
Iteration  13: 126.950 us/op
Iteration  14: 126.628 us/op
Iteration  15: 126.505 us/op
Iteration  16: 127.954 us/op
Iteration  17: 126.218 us/op
Iteration  18: 128.535 us/op
Iteration  19: 127.541 us/op
Iteration  20: 126.453 us/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testImplicit1000":
  126.669 ±(99.9%) 0.551 us/op [Average]
  (min, avg, max) = (126.208, 126.669, 128.535), stdev = 0.635
  CI (99.9%): [126.117, 127.220] (assumes normal distribution)


# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testImplicit10000

# Run progress: 80.00% complete, ETA 00:01:20
# Fork: 1 of 1
# Warmup Iteration   1: 1660.259 us/op
# Warmup Iteration   2: 1553.618 us/op
# Warmup Iteration   3: 1558.217 us/op
# Warmup Iteration   4: 1537.349 us/op
# Warmup Iteration   5: 1571.349 us/op
# Warmup Iteration   6: 1538.285 us/op
# Warmup Iteration   7: 1533.774 us/op
# Warmup Iteration   8: 1532.754 us/op
# Warmup Iteration   9: 1529.087 us/op
# Warmup Iteration  10: 1533.488 us/op
# Warmup Iteration  11: 1534.250 us/op
# Warmup Iteration  12: 1532.202 us/op
# Warmup Iteration  13: 1535.717 us/op
# Warmup Iteration  14: 1533.590 us/op
# Warmup Iteration  15: 1535.344 us/op
# Warmup Iteration  16: 1541.416 us/op
# Warmup Iteration  17: 1527.462 us/op
# Warmup Iteration  18: 1530.387 us/op
# Warmup Iteration  19: 1525.203 us/op
# Warmup Iteration  20: 1525.726 us/op
Iteration   1: 1524.293 us/op
Iteration   2: 1524.940 us/op
Iteration   3: 1528.102 us/op
Iteration   4: 1525.189 us/op
Iteration   5: 1526.073 us/op
Iteration   6: 1537.257 us/op
Iteration   7: 1521.352 us/op
Iteration   8: 1520.269 us/op
Iteration   9: 1522.983 us/op
Iteration  10: 1528.542 us/op
Iteration  11: 1539.911 us/op
Iteration  12: 1529.773 us/op
Iteration  13: 1530.795 us/op
Iteration  14: 1532.570 us/op
Iteration  15: 1545.352 us/op
Iteration  16: 1544.045 us/op
Iteration  17: 1540.857 us/op
Iteration  18: 1549.678 us/op
Iteration  19: 1540.619 us/op
Iteration  20: 1529.961 us/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testImplicit10000":
  1532.128 ±(99.9%) 7.559 us/op [Average]
  (min, avg, max) = (1520.269, 1532.128, 1549.678), stdev = 8.704
  CI (99.9%): [1524.570, 1539.687] (assumes normal distribution)


# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testImplicit100000

# Run progress: 90.00% complete, ETA 00:00:40
# Fork: 1 of 1
# Warmup Iteration   1: 19989.307 us/op
# Warmup Iteration   2: 18896.809 us/op
# Warmup Iteration   3: 18858.691 us/op
# Warmup Iteration   4: 18776.777 us/op
# Warmup Iteration   5: 18985.203 us/op
# Warmup Iteration   6: 18534.529 us/op
# Warmup Iteration   7: 18544.558 us/op
# Warmup Iteration   8: 18502.185 us/op
# Warmup Iteration   9: 18516.171 us/op
# Warmup Iteration  10: 18572.366 us/op
# Warmup Iteration  11: 18617.762 us/op
# Warmup Iteration  12: 18887.184 us/op
# Warmup Iteration  13: 18644.576 us/op
# Warmup Iteration  14: 18586.997 us/op
# Warmup Iteration  15: 18656.107 us/op
# Warmup Iteration  16: 18499.214 us/op
# Warmup Iteration  17: 19792.475 us/op
# Warmup Iteration  18: 18527.073 us/op
# Warmup Iteration  19: 18508.343 us/op
# Warmup Iteration  20: 18774.380 us/op
Iteration   1: 18644.520 us/op
Iteration   2: 18603.559 us/op
Iteration   3: 18667.676 us/op
Iteration   4: 18689.493 us/op
Iteration   5: 18956.280 us/op
Iteration   6: 18584.973 us/op
Iteration   7: 18600.685 us/op
Iteration   8: 18667.740 us/op
Iteration   9: 18633.457 us/op
Iteration  10: 18649.095 us/op
Iteration  11: 18741.871 us/op
Iteration  12: 18602.817 us/op
Iteration  13: 18733.993 us/op
Iteration  14: 18742.636 us/op
Iteration  15: 18772.996 us/op
Iteration  16: 18781.994 us/op
Iteration  17: 18794.978 us/op
Iteration  18: 18797.687 us/op
Iteration  19: 18785.155 us/op
Iteration  20: 18901.229 us/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testImplicit100000":
  18717.642 ±(99.9%) 88.348 us/op [Average]
  (min, avg, max) = (18584.973, 18717.642, 18956.280), stdev = 101.741
  CI (99.9%): [18629.294, 18805.989] (assumes normal distribution)


# Run complete. Total time: 00:06:43

Benchmark                     Mode  Cnt      Score    Error  Units
MergeSort.testExplicit10      avgt   20      0.471 ±  0.006  us/op
MergeSort.testExplicit100     avgt   20      7.915 ±  0.141  us/op
MergeSort.testExplicit1000    avgt   20    107.148 ±  0.939  us/op
MergeSort.testExplicit10000   avgt   20   1319.428 ± 14.044  us/op
MergeSort.testExplicit100000  avgt   20  15813.329 ± 57.828  us/op
MergeSort.testImplicit10      avgt   20      0.572 ±  0.005  us/op
MergeSort.testImplicit100     avgt   20      9.530 ±  0.035  us/op
MergeSort.testImplicit1000    avgt   20    126.669 ±  0.551  us/op
MergeSort.testImplicit10000   avgt   20   1532.128 ±  7.559  us/op
MergeSort.testImplicit100000  avgt   20  18717.642 ± 88.348  us/op
[DONE] ./reflection_lru.xml
[START] ./reflection_rw_list.xml
# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args0

# Run progress: 0.00% complete, ETA 00:06:00
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.BootstrapMethodError: call site initialization exception
	at java.lang.invoke.CallSite.makeSite(CallSite.java:341)
	at java.lang.invoke.MethodHandleNatives.linkCallSiteImpl(MethodHandleNatives.java:307)
	at java.lang.invoke.MethodHandleNatives.linkCallSite(MethodHandleNatives.java:297)
	at ru.spbau.mit.kotlin.protocols.benchmarks.InterfacesKt.proto$12$Foo$bar0$(Interfaces.kt)
	at ru.spbau.mit.kotlin.protocols.benchmarks.InterfacesKt.run0(Interfaces.kt:35)
	at ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args0(SingleRun.kt:14)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.SingleRun_args0_jmhTest.args0_avgt_jmhStub(SingleRun_args0_jmhTest.java:190)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.SingleRun_args0_jmhTest.args0_AverageTime(SingleRun_args0_jmhTest.java:152)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.ArrayIndexOutOfBoundsException: 3
	at kotlin.jvm.internal.ProtocolCallSite.<init>(ProtocolCallSite.kt:144)
	at kotlin.jvm.internal.ProtocolCallSite$Companion.getBootstrap(ProtocolCallSite.kt:32)
	at kotlin.jvm.internal.ProtocolCallSite.getBootstrap(ProtocolCallSite.kt)
	at java.lang.invoke.CallSite.makeSite(CallSite.java:306)
	... 19 more




# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args1

# Run progress: 11.11% complete, ETA 00:00:01
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.BootstrapMethodError: call site initialization exception
	at java.lang.invoke.CallSite.makeSite(CallSite.java:341)
	at java.lang.invoke.MethodHandleNatives.linkCallSiteImpl(MethodHandleNatives.java:307)
	at java.lang.invoke.MethodHandleNatives.linkCallSite(MethodHandleNatives.java:297)
	at ru.spbau.mit.kotlin.protocols.benchmarks.InterfacesKt.proto$13$Foo$bar1$Int(Interfaces.kt)
	at ru.spbau.mit.kotlin.protocols.benchmarks.InterfacesKt.run1(Interfaces.kt:36)
	at ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args1(SingleRun.kt:17)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.SingleRun_args1_jmhTest.args1_avgt_jmhStub(SingleRun_args1_jmhTest.java:190)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.SingleRun_args1_jmhTest.args1_AverageTime(SingleRun_args1_jmhTest.java:152)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.ArrayIndexOutOfBoundsException: 3
	at kotlin.jvm.internal.ProtocolCallSite.<init>(ProtocolCallSite.kt:144)
	at kotlin.jvm.internal.ProtocolCallSite$Companion.getBootstrap(ProtocolCallSite.kt:32)
	at kotlin.jvm.internal.ProtocolCallSite.getBootstrap(ProtocolCallSite.kt)
	at java.lang.invoke.CallSite.makeSite(CallSite.java:306)
	... 19 more




# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args10

# Run progress: 22.22% complete, ETA 00:00:01
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.BootstrapMethodError: call site initialization exception
	at java.lang.invoke.CallSite.makeSite(CallSite.java:341)
	at java.lang.invoke.MethodHandleNatives.linkCallSiteImpl(MethodHandleNatives.java:307)
	at java.lang.invoke.MethodHandleNatives.linkCallSite(MethodHandleNatives.java:297)
	at ru.spbau.mit.kotlin.protocols.benchmarks.InterfacesKt.proto$18$Foo$bar10$IntIntIntIntIntIntIntIntIntInt(Interfaces.kt)
	at ru.spbau.mit.kotlin.protocols.benchmarks.InterfacesKt.run10(Interfaces.kt:41)
	at ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args10(SingleRun.kt:32)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.SingleRun_args10_jmhTest.args10_avgt_jmhStub(SingleRun_args10_jmhTest.java:190)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.SingleRun_args10_jmhTest.args10_AverageTime(SingleRun_args10_jmhTest.java:152)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.ArrayIndexOutOfBoundsException: 3
	at kotlin.jvm.internal.ProtocolCallSite.<init>(ProtocolCallSite.kt:144)
	at kotlin.jvm.internal.ProtocolCallSite$Companion.getBootstrap(ProtocolCallSite.kt:32)
	at kotlin.jvm.internal.ProtocolCallSite.getBootstrap(ProtocolCallSite.kt)
	at java.lang.invoke.CallSite.makeSite(CallSite.java:306)
	... 19 more




# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args15

# Run progress: 33.33% complete, ETA 00:00:01
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.BootstrapMethodError: call site initialization exception
	at java.lang.invoke.CallSite.makeSite(CallSite.java:341)
	at java.lang.invoke.MethodHandleNatives.linkCallSiteImpl(MethodHandleNatives.java:307)
	at java.lang.invoke.MethodHandleNatives.linkCallSite(MethodHandleNatives.java:297)
	at ru.spbau.mit.kotlin.protocols.benchmarks.InterfacesKt.proto$19$Foo$bar15$IntIntIntIntIntIntIntIntIntIntIntIntIntIntInt(Interfaces.kt)
	at ru.spbau.mit.kotlin.protocols.benchmarks.InterfacesKt.run15(Interfaces.kt:42)
	at ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args15(SingleRun.kt:35)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.SingleRun_args15_jmhTest.args15_avgt_jmhStub(SingleRun_args15_jmhTest.java:190)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.SingleRun_args15_jmhTest.args15_AverageTime(SingleRun_args15_jmhTest.java:152)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.ArrayIndexOutOfBoundsException: 3
	at kotlin.jvm.internal.ProtocolCallSite.<init>(ProtocolCallSite.kt:144)
	at kotlin.jvm.internal.ProtocolCallSite$Companion.getBootstrap(ProtocolCallSite.kt:32)
	at kotlin.jvm.internal.ProtocolCallSite.getBootstrap(ProtocolCallSite.kt)
	at java.lang.invoke.CallSite.makeSite(CallSite.java:306)
	... 19 more




# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args2

# Run progress: 44.44% complete, ETA 00:00:01
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.BootstrapMethodError: call site initialization exception
	at java.lang.invoke.CallSite.makeSite(CallSite.java:341)
	at java.lang.invoke.MethodHandleNatives.linkCallSiteImpl(MethodHandleNatives.java:307)
	at java.lang.invoke.MethodHandleNatives.linkCallSite(MethodHandleNatives.java:297)
	at ru.spbau.mit.kotlin.protocols.benchmarks.InterfacesKt.proto$14$Foo$bar2$IntInt(Interfaces.kt)
	at ru.spbau.mit.kotlin.protocols.benchmarks.InterfacesKt.run2(Interfaces.kt:37)
	at ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args2(SingleRun.kt:20)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.SingleRun_args2_jmhTest.args2_avgt_jmhStub(SingleRun_args2_jmhTest.java:190)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.SingleRun_args2_jmhTest.args2_AverageTime(SingleRun_args2_jmhTest.java:152)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.ArrayIndexOutOfBoundsException: 3
	at kotlin.jvm.internal.ProtocolCallSite.<init>(ProtocolCallSite.kt:144)
	at kotlin.jvm.internal.ProtocolCallSite$Companion.getBootstrap(ProtocolCallSite.kt:32)
	at kotlin.jvm.internal.ProtocolCallSite.getBootstrap(ProtocolCallSite.kt)
	at java.lang.invoke.CallSite.makeSite(CallSite.java:306)
	... 19 more




# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args20

# Run progress: 55.56% complete, ETA 00:00:00
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.BootstrapMethodError: call site initialization exception
	at java.lang.invoke.CallSite.makeSite(CallSite.java:341)
	at java.lang.invoke.MethodHandleNatives.linkCallSiteImpl(MethodHandleNatives.java:307)
	at java.lang.invoke.MethodHandleNatives.linkCallSite(MethodHandleNatives.java:297)
	at ru.spbau.mit.kotlin.protocols.benchmarks.InterfacesKt.proto$20$Foo$bar20$IntIntIntIntIntIntIntIntIntIntIntIntIntIntIntIntIntIntIntInt(Interfaces.kt)
	at ru.spbau.mit.kotlin.protocols.benchmarks.InterfacesKt.run20(Interfaces.kt:43)
	at ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args20(SingleRun.kt:38)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.SingleRun_args20_jmhTest.args20_avgt_jmhStub(SingleRun_args20_jmhTest.java:190)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.SingleRun_args20_jmhTest.args20_AverageTime(SingleRun_args20_jmhTest.java:152)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.ArrayIndexOutOfBoundsException: 3
	at kotlin.jvm.internal.ProtocolCallSite.<init>(ProtocolCallSite.kt:144)
	at kotlin.jvm.internal.ProtocolCallSite$Companion.getBootstrap(ProtocolCallSite.kt:32)
	at kotlin.jvm.internal.ProtocolCallSite.getBootstrap(ProtocolCallSite.kt)
	at java.lang.invoke.CallSite.makeSite(CallSite.java:306)
	... 19 more




# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args3

# Run progress: 66.67% complete, ETA 00:00:00
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.BootstrapMethodError: call site initialization exception
	at java.lang.invoke.CallSite.makeSite(CallSite.java:341)
	at java.lang.invoke.MethodHandleNatives.linkCallSiteImpl(MethodHandleNatives.java:307)
	at java.lang.invoke.MethodHandleNatives.linkCallSite(MethodHandleNatives.java:297)
	at ru.spbau.mit.kotlin.protocols.benchmarks.InterfacesKt.proto$15$Foo$bar3$IntIntInt(Interfaces.kt)
	at ru.spbau.mit.kotlin.protocols.benchmarks.InterfacesKt.run3(Interfaces.kt:38)
	at ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args3(SingleRun.kt:23)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.SingleRun_args3_jmhTest.args3_avgt_jmhStub(SingleRun_args3_jmhTest.java:190)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.SingleRun_args3_jmhTest.args3_AverageTime(SingleRun_args3_jmhTest.java:152)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.ArrayIndexOutOfBoundsException: 3
	at kotlin.jvm.internal.ProtocolCallSite.<init>(ProtocolCallSite.kt:144)
	at kotlin.jvm.internal.ProtocolCallSite$Companion.getBootstrap(ProtocolCallSite.kt:32)
	at kotlin.jvm.internal.ProtocolCallSite.getBootstrap(ProtocolCallSite.kt)
	at java.lang.invoke.CallSite.makeSite(CallSite.java:306)
	... 19 more




# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args4

# Run progress: 77.78% complete, ETA 00:00:00
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.BootstrapMethodError: call site initialization exception
	at java.lang.invoke.CallSite.makeSite(CallSite.java:341)
	at java.lang.invoke.MethodHandleNatives.linkCallSiteImpl(MethodHandleNatives.java:307)
	at java.lang.invoke.MethodHandleNatives.linkCallSite(MethodHandleNatives.java:297)
	at ru.spbau.mit.kotlin.protocols.benchmarks.InterfacesKt.proto$16$Foo$bar4$IntIntIntInt(Interfaces.kt)
	at ru.spbau.mit.kotlin.protocols.benchmarks.InterfacesKt.run4(Interfaces.kt:39)
	at ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args4(SingleRun.kt:26)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.SingleRun_args4_jmhTest.args4_avgt_jmhStub(SingleRun_args4_jmhTest.java:190)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.SingleRun_args4_jmhTest.args4_AverageTime(SingleRun_args4_jmhTest.java:152)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.ArrayIndexOutOfBoundsException: 3
	at kotlin.jvm.internal.ProtocolCallSite.<init>(ProtocolCallSite.kt:144)
	at kotlin.jvm.internal.ProtocolCallSite$Companion.getBootstrap(ProtocolCallSite.kt:32)
	at kotlin.jvm.internal.ProtocolCallSite.getBootstrap(ProtocolCallSite.kt)
	at java.lang.invoke.CallSite.makeSite(CallSite.java:306)
	... 19 more




# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args5

# Run progress: 88.89% complete, ETA 00:00:00
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.BootstrapMethodError: call site initialization exception
	at java.lang.invoke.CallSite.makeSite(CallSite.java:341)
	at java.lang.invoke.MethodHandleNatives.linkCallSiteImpl(MethodHandleNatives.java:307)
	at java.lang.invoke.MethodHandleNatives.linkCallSite(MethodHandleNatives.java:297)
	at ru.spbau.mit.kotlin.protocols.benchmarks.InterfacesKt.proto$17$Foo$bar5$IntIntIntIntInt(Interfaces.kt)
	at ru.spbau.mit.kotlin.protocols.benchmarks.InterfacesKt.run5(Interfaces.kt:40)
	at ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args5(SingleRun.kt:29)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.SingleRun_args5_jmhTest.args5_avgt_jmhStub(SingleRun_args5_jmhTest.java:190)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.SingleRun_args5_jmhTest.args5_AverageTime(SingleRun_args5_jmhTest.java:152)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.ArrayIndexOutOfBoundsException: 3
	at kotlin.jvm.internal.ProtocolCallSite.<init>(ProtocolCallSite.kt:144)
	at kotlin.jvm.internal.ProtocolCallSite$Companion.getBootstrap(ProtocolCallSite.kt:32)
	at kotlin.jvm.internal.ProtocolCallSite.getBootstrap(ProtocolCallSite.kt)
	at java.lang.invoke.CallSite.makeSite(CallSite.java:306)
	... 19 more




# Run complete. Total time: 00:00:01

Benchmark  Mode  Cnt  Score   Error  Units
# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.MultiTarget.test

# Run progress: 0.00% complete, ETA 00:00:40
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.BootstrapMethodError: call site initialization exception
	at java.lang.invoke.CallSite.makeSite(CallSite.java:341)
	at java.lang.invoke.MethodHandleNatives.linkCallSiteImpl(MethodHandleNatives.java:307)
	at java.lang.invoke.MethodHandleNatives.linkCallSite(MethodHandleNatives.java:297)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MultiTarget.proto$23$Bar$foo$(MultiTarget.kt)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MultiTarget.test(MultiTarget.kt:45)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.MultiTarget_test_jmhTest.test_avgt_jmhStub(MultiTarget_test_jmhTest.java:190)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.MultiTarget_test_jmhTest.test_AverageTime(MultiTarget_test_jmhTest.java:152)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.ArrayIndexOutOfBoundsException: 3
	at kotlin.jvm.internal.ProtocolCallSite.<init>(ProtocolCallSite.kt:144)
	at kotlin.jvm.internal.ProtocolCallSite$Companion.getBootstrap(ProtocolCallSite.kt:32)
	at kotlin.jvm.internal.ProtocolCallSite.getBootstrap(ProtocolCallSite.kt)
	at java.lang.invoke.CallSite.makeSite(CallSite.java:306)
	... 18 more




# Run complete. Total time: 00:00:00

Benchmark  Mode  Cnt  Score   Error  Units
# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testExplicit10

# Run progress: 0.00% complete, ETA 00:06:40
# Fork: 1 of 1
# Warmup Iteration   1: 0.508 us/op
# Warmup Iteration   2: 0.474 us/op
# Warmup Iteration   3: 0.476 us/op
# Warmup Iteration   4: 0.463 us/op
# Warmup Iteration   5: 0.477 us/op
# Warmup Iteration   6: 0.490 us/op
# Warmup Iteration   7: 0.462 us/op
# Warmup Iteration   8: 0.463 us/op
# Warmup Iteration   9: 0.462 us/op
# Warmup Iteration  10: 0.463 us/op
# Warmup Iteration  11: 0.462 us/op
# Warmup Iteration  12: 0.464 us/op
# Warmup Iteration  13: 0.463 us/op
# Warmup Iteration  14: 0.463 us/op
# Warmup Iteration  15: 0.482 us/op
# Warmup Iteration  16: 0.485 us/op
# Warmup Iteration  17: 0.461 us/op
# Warmup Iteration  18: 0.461 us/op
# Warmup Iteration  19: 0.462 us/op
# Warmup Iteration  20: 0.462 us/op
Iteration   1: 0.462 us/op
Iteration   2: 0.461 us/op
Iteration   3: 0.462 us/op
Iteration   4: 0.462 us/op
Iteration   5: 0.462 us/op
Iteration   6: 0.463 us/op
Iteration   7: 0.462 us/op
Iteration   8: 0.469 us/op
Iteration   9: 0.463 us/op
Iteration  10: 0.465 us/op
Iteration  11: 0.463 us/op
Iteration  12: 0.465 us/op
Iteration  13: 0.464 us/op
Iteration  14: 0.462 us/op
Iteration  15: 0.464 us/op
Iteration  16: 0.465 us/op
Iteration  17: 0.466 us/op
Iteration  18: 0.466 us/op
Iteration  19: 0.464 us/op
Iteration  20: 0.464 us/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testExplicit10":
  0.464 ±(99.9%) 0.002 us/op [Average]
  (min, avg, max) = (0.461, 0.464, 0.469), stdev = 0.002
  CI (99.9%): [0.462, 0.465] (assumes normal distribution)


# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testExplicit100

# Run progress: 10.00% complete, ETA 00:06:01
# Fork: 1 of 1
# Warmup Iteration   1: 8.474 us/op
# Warmup Iteration   2: 8.042 us/op
# Warmup Iteration   3: 8.007 us/op
# Warmup Iteration   4: 7.937 us/op
# Warmup Iteration   5: 8.142 us/op
# Warmup Iteration   6: 7.900 us/op
# Warmup Iteration   7: 7.875 us/op
# Warmup Iteration   8: 7.864 us/op
# Warmup Iteration   9: 7.851 us/op
# Warmup Iteration  10: 7.937 us/op
# Warmup Iteration  11: 7.892 us/op
# Warmup Iteration  12: 7.896 us/op
# Warmup Iteration  13: 7.871 us/op
# Warmup Iteration  14: 7.894 us/op
# Warmup Iteration  15: 7.900 us/op
# Warmup Iteration  16: 7.910 us/op
# Warmup Iteration  17: 7.893 us/op
# Warmup Iteration  18: 7.917 us/op
# Warmup Iteration  19: 7.889 us/op
# Warmup Iteration  20: 8.098 us/op
Iteration   1: 7.844 us/op
Iteration   2: 7.959 us/op
Iteration   3: 7.897 us/op
Iteration   4: 7.890 us/op
Iteration   5: 8.009 us/op
Iteration   6: 7.915 us/op
Iteration   7: 7.902 us/op
Iteration   8: 7.900 us/op
Iteration   9: 7.920 us/op
Iteration  10: 7.905 us/op
Iteration  11: 7.854 us/op
Iteration  12: 7.867 us/op
Iteration  13: 7.861 us/op
Iteration  14: 7.861 us/op
Iteration  15: 7.883 us/op
Iteration  16: 7.942 us/op
Iteration  17: 7.939 us/op
Iteration  18: 7.939 us/op
Iteration  19: 7.981 us/op
Iteration  20: 7.882 us/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testExplicit100":
  7.907 ±(99.9%) 0.038 us/op [Average]
  (min, avg, max) = (7.844, 7.907, 8.009), stdev = 0.044
  CI (99.9%): [7.869, 7.945] (assumes normal distribution)


# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testExplicit1000

# Run progress: 20.00% complete, ETA 00:05:21
# Fork: 1 of 1
# Warmup Iteration   1: 114.101 us/op
# Warmup Iteration   2: 108.408 us/op
# Warmup Iteration   3: 107.989 us/op
# Warmup Iteration   4: 108.670 us/op
# Warmup Iteration   5: 108.879 us/op
# Warmup Iteration   6: 106.720 us/op
# Warmup Iteration   7: 106.289 us/op
# Warmup Iteration   8: 108.994 us/op
# Warmup Iteration   9: 106.241 us/op
# Warmup Iteration  10: 106.538 us/op
# Warmup Iteration  11: 109.029 us/op
# Warmup Iteration  12: 106.461 us/op
# Warmup Iteration  13: 106.432 us/op
# Warmup Iteration  14: 106.509 us/op
# Warmup Iteration  15: 106.894 us/op
# Warmup Iteration  16: 106.330 us/op
# Warmup Iteration  17: 106.467 us/op
# Warmup Iteration  18: 106.512 us/op
# Warmup Iteration  19: 106.186 us/op
# Warmup Iteration  20: 106.227 us/op
Iteration   1: 106.329 us/op
Iteration   2: 106.367 us/op
Iteration   3: 107.541 us/op
Iteration   4: 106.233 us/op
Iteration   5: 106.422 us/op
Iteration   6: 106.349 us/op
Iteration   7: 106.245 us/op
Iteration   8: 106.259 us/op
Iteration   9: 106.343 us/op
Iteration  10: 106.512 us/op
Iteration  11: 106.259 us/op
Iteration  12: 106.680 us/op
Iteration  13: 106.316 us/op
Iteration  14: 106.972 us/op
Iteration  15: 107.492 us/op
Iteration  16: 106.565 us/op
Iteration  17: 106.385 us/op
Iteration  18: 106.624 us/op
Iteration  19: 106.509 us/op
Iteration  20: 106.638 us/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testExplicit1000":
  106.552 ±(99.9%) 0.328 us/op [Average]
  (min, avg, max) = (106.233, 106.552, 107.541), stdev = 0.378
  CI (99.9%): [106.224, 106.880] (assumes normal distribution)


# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testExplicit10000

# Run progress: 30.00% complete, ETA 00:04:41
# Fork: 1 of 1
# Warmup Iteration   1: 1422.253 us/op
# Warmup Iteration   2: 1364.324 us/op
# Warmup Iteration   3: 1329.664 us/op
# Warmup Iteration   4: 1382.256 us/op
# Warmup Iteration   5: 1341.776 us/op
# Warmup Iteration   6: 1325.951 us/op
# Warmup Iteration   7: 1330.026 us/op
# Warmup Iteration   8: 1333.254 us/op
# Warmup Iteration   9: 1334.442 us/op
# Warmup Iteration  10: 1319.697 us/op
# Warmup Iteration  11: 1319.879 us/op
# Warmup Iteration  12: 1319.885 us/op
# Warmup Iteration  13: 1325.013 us/op
# Warmup Iteration  14: 1325.263 us/op
# Warmup Iteration  15: 1331.905 us/op
# Warmup Iteration  16: 1323.532 us/op
# Warmup Iteration  17: 1323.501 us/op
# Warmup Iteration  18: 1328.063 us/op
# Warmup Iteration  19: 1317.537 us/op
# Warmup Iteration  20: 1326.927 us/op
Iteration   1: 1328.892 us/op
Iteration   2: 1408.843 us/op
Iteration   3: 1326.887 us/op
Iteration   4: 1328.047 us/op
Iteration   5: 1340.311 us/op
Iteration   6: 1327.365 us/op
Iteration   7: 1338.422 us/op
Iteration   8: 1344.734 us/op
Iteration   9: 1341.272 us/op
Iteration  10: 1329.082 us/op
Iteration  11: 1334.165 us/op
Iteration  12: 1334.298 us/op
Iteration  13: 1339.124 us/op
Iteration  14: 1339.776 us/op
Iteration  15: 1332.099 us/op
Iteration  16: 1343.277 us/op
Iteration  17: 1332.755 us/op
Iteration  18: 1333.347 us/op
Iteration  19: 1334.258 us/op
Iteration  20: 1338.593 us/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testExplicit10000":
  1338.777 ±(99.9%) 15.074 us/op [Average]
  (min, avg, max) = (1326.887, 1338.777, 1408.843), stdev = 17.359
  CI (99.9%): [1323.704, 1353.851] (assumes normal distribution)


# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testExplicit100000

# Run progress: 40.00% complete, ETA 00:04:01
# Fork: 1 of 1
# Warmup Iteration   1: 17299.766 us/op
# Warmup Iteration   2: 16686.902 us/op
# Warmup Iteration   3: 16167.055 us/op
# Warmup Iteration   4: 16875.242 us/op
# Warmup Iteration   5: 16247.898 us/op
# Warmup Iteration   6: 16104.775 us/op
# Warmup Iteration   7: 16361.009 us/op
# Warmup Iteration   8: 16170.552 us/op
# Warmup Iteration   9: 16105.933 us/op
# Warmup Iteration  10: 16099.212 us/op
# Warmup Iteration  11: 16118.368 us/op
# Warmup Iteration  12: 16226.426 us/op
# Warmup Iteration  13: 16228.375 us/op
# Warmup Iteration  14: 16162.330 us/op
# Warmup Iteration  15: 16318.888 us/op
# Warmup Iteration  16: 17654.844 us/op
# Warmup Iteration  17: 16164.324 us/op
# Warmup Iteration  18: 16158.862 us/op
# Warmup Iteration  19: 16126.703 us/op
# Warmup Iteration  20: 16126.186 us/op
Iteration   1: 16182.222 us/op
Iteration   2: 16174.939 us/op
Iteration   3: 16126.080 us/op
Iteration   4: 16162.269 us/op
Iteration   5: 16250.398 us/op
Iteration   6: 16180.175 us/op
Iteration   7: 16159.850 us/op
Iteration   8: 16207.233 us/op
Iteration   9: 16126.837 us/op
Iteration  10: 16203.263 us/op
Iteration  11: 16136.359 us/op
Iteration  12: 16190.294 us/op
Iteration  13: 16224.835 us/op
Iteration  14: 16043.547 us/op
Iteration  15: 16064.918 us/op
Iteration  16: 16071.743 us/op
Iteration  17: 16035.804 us/op
Iteration  18: 16047.884 us/op
Iteration  19: 16047.623 us/op
Iteration  20: 16057.428 us/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testExplicit100000":
  16134.685 ±(99.9%) 59.782 us/op [Average]
  (min, avg, max) = (16035.804, 16134.685, 16250.398), stdev = 68.845
  CI (99.9%): [16074.903, 16194.467] (assumes normal distribution)


# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testImplicit10

# Run progress: 50.00% complete, ETA 00:03:21
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.BootstrapMethodError: call site initialization exception
	at java.lang.invoke.CallSite.makeSite(CallSite.java:341)
	at java.lang.invoke.MethodHandleNatives.linkCallSiteImpl(MethodHandleNatives.java:307)
	at java.lang.invoke.MethodHandleNatives.linkCallSite(MethodHandleNatives.java:297)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.proto$21$ImplicitComparable$lessOrEq$ImplicitComparable(MergeSort.kt)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeImplicit(MergeSort.kt:35)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:87)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testImplicit10(MergeSort.kt:143)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.MergeSort_testImplicit10_jmhTest.testImplicit10_avgt_jmhStub(MergeSort_testImplicit10_jmhTest.java:190)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.MergeSort_testImplicit10_jmhTest.testImplicit10_AverageTime(MergeSort_testImplicit10_jmhTest.java:152)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.ArrayIndexOutOfBoundsException: 3
	at kotlin.jvm.internal.ProtocolCallSite.<init>(ProtocolCallSite.kt:144)
	at kotlin.jvm.internal.ProtocolCallSite$Companion.getBootstrap(ProtocolCallSite.kt:32)
	at kotlin.jvm.internal.ProtocolCallSite.getBootstrap(ProtocolCallSite.kt)
	at java.lang.invoke.CallSite.makeSite(CallSite.java:306)
	... 23 more




# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testImplicit100

# Run progress: 60.00% complete, ETA 00:02:14
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.BootstrapMethodError: call site initialization exception
	at java.lang.invoke.CallSite.makeSite(CallSite.java:341)
	at java.lang.invoke.MethodHandleNatives.linkCallSiteImpl(MethodHandleNatives.java:307)
	at java.lang.invoke.MethodHandleNatives.linkCallSite(MethodHandleNatives.java:297)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.proto$21$ImplicitComparable$lessOrEq$ImplicitComparable(MergeSort.kt)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeImplicit(MergeSort.kt:35)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:87)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testImplicit100(MergeSort.kt:146)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.MergeSort_testImplicit100_jmhTest.testImplicit100_avgt_jmhStub(MergeSort_testImplicit100_jmhTest.java:190)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.MergeSort_testImplicit100_jmhTest.testImplicit100_AverageTime(MergeSort_testImplicit100_jmhTest.java:152)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.ArrayIndexOutOfBoundsException: 3
	at kotlin.jvm.internal.ProtocolCallSite.<init>(ProtocolCallSite.kt:144)
	at kotlin.jvm.internal.ProtocolCallSite$Companion.getBootstrap(ProtocolCallSite.kt:32)
	at kotlin.jvm.internal.ProtocolCallSite.getBootstrap(ProtocolCallSite.kt)
	at java.lang.invoke.CallSite.makeSite(CallSite.java:306)
	... 26 more




# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testImplicit1000

# Run progress: 70.00% complete, ETA 00:01:26
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.BootstrapMethodError: call site initialization exception
	at java.lang.invoke.CallSite.makeSite(CallSite.java:341)
	at java.lang.invoke.MethodHandleNatives.linkCallSiteImpl(MethodHandleNatives.java:307)
	at java.lang.invoke.MethodHandleNatives.linkCallSite(MethodHandleNatives.java:297)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.proto$21$ImplicitComparable$lessOrEq$ImplicitComparable(MergeSort.kt)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeImplicit(MergeSort.kt:35)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:87)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testImplicit1000(MergeSort.kt:149)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.MergeSort_testImplicit1000_jmhTest.testImplicit1000_avgt_jmhStub(MergeSort_testImplicit1000_jmhTest.java:190)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.MergeSort_testImplicit1000_jmhTest.testImplicit1000_AverageTime(MergeSort_testImplicit1000_jmhTest.java:152)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.ArrayIndexOutOfBoundsException: 3
	at kotlin.jvm.internal.ProtocolCallSite.<init>(ProtocolCallSite.kt:144)
	at kotlin.jvm.internal.ProtocolCallSite$Companion.getBootstrap(ProtocolCallSite.kt:32)
	at kotlin.jvm.internal.ProtocolCallSite.getBootstrap(ProtocolCallSite.kt)
	at java.lang.invoke.CallSite.makeSite(CallSite.java:306)
	... 29 more




# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testImplicit10000

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.BootstrapMethodError: call site initialization exception
	at java.lang.invoke.CallSite.makeSite(CallSite.java:341)
	at java.lang.invoke.MethodHandleNatives.linkCallSiteImpl(MethodHandleNatives.java:307)
	at java.lang.invoke.MethodHandleNatives.linkCallSite(MethodHandleNatives.java:297)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.proto$21$ImplicitComparable$lessOrEq$ImplicitComparable(MergeSort.kt)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeImplicit(MergeSort.kt:35)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:87)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testImplicit10000(MergeSort.kt:152)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.MergeSort_testImplicit10000_jmhTest.testImplicit10000_avgt_jmhStub(MergeSort_testImplicit10000_jmhTest.java:190)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.MergeSort_testImplicit10000_jmhTest.testImplicit10000_AverageTime(MergeSort_testImplicit10000_jmhTest.java:152)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.ArrayIndexOutOfBoundsException: 3
	at kotlin.jvm.internal.ProtocolCallSite.<init>(ProtocolCallSite.kt:144)
	at kotlin.jvm.internal.ProtocolCallSite$Companion.getBootstrap(ProtocolCallSite.kt:32)
	at kotlin.jvm.internal.ProtocolCallSite.getBootstrap(ProtocolCallSite.kt)
	at java.lang.invoke.CallSite.makeSite(CallSite.java:306)
	... 33 more




# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testImplicit100000

# Run progress: 90.00% complete, ETA 00:00:22
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.BootstrapMethodError: call site initialization exception
	at java.lang.invoke.CallSite.makeSite(CallSite.java:341)
	at java.lang.invoke.MethodHandleNatives.linkCallSiteImpl(MethodHandleNatives.java:307)
	at java.lang.invoke.MethodHandleNatives.linkCallSite(MethodHandleNatives.java:297)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.proto$21$ImplicitComparable$lessOrEq$ImplicitComparable(MergeSort.kt)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeImplicit(MergeSort.kt:35)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:87)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testImplicit100000(MergeSort.kt:155)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.MergeSort_testImplicit100000_jmhTest.testImplicit100000_avgt_jmhStub(MergeSort_testImplicit100000_jmhTest.java:190)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.MergeSort_testImplicit100000_jmhTest.testImplicit100000_AverageTime(MergeSort_testImplicit100000_jmhTest.java:152)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.ArrayIndexOutOfBoundsException: 3
	at kotlin.jvm.internal.ProtocolCallSite.<init>(ProtocolCallSite.kt:144)
	at kotlin.jvm.internal.ProtocolCallSite$Companion.getBootstrap(ProtocolCallSite.kt:32)
	at kotlin.jvm.internal.ProtocolCallSite.getBootstrap(ProtocolCallSite.kt)
	at java.lang.invoke.CallSite.makeSite(CallSite.java:306)
	... 36 more




# Run complete. Total time: 00:03:22

Benchmark                     Mode  Cnt      Score    Error  Units
MergeSort.testExplicit10      avgt   20      0.464 ±  0.002  us/op
MergeSort.testExplicit100     avgt   20      7.907 ±  0.038  us/op
MergeSort.testExplicit1000    avgt   20    106.552 ±  0.328  us/op
MergeSort.testExplicit10000   avgt   20   1338.777 ± 15.074  us/op
MergeSort.testExplicit100000  avgt   20  16134.685 ± 59.782  us/op
[DONE] ./reflection_rw_list.xml
[START] ./reflection_sync_list.xml
# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args0

# Run progress: 0.00% complete, ETA 00:06:00
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.BootstrapMethodError: call site initialization exception
	at java.lang.invoke.CallSite.makeSite(CallSite.java:341)
	at java.lang.invoke.MethodHandleNatives.linkCallSiteImpl(MethodHandleNatives.java:307)
	at java.lang.invoke.MethodHandleNatives.linkCallSite(MethodHandleNatives.java:297)
	at ru.spbau.mit.kotlin.protocols.benchmarks.InterfacesKt.proto$12$Foo$bar0$(Interfaces.kt)
	at ru.spbau.mit.kotlin.protocols.benchmarks.InterfacesKt.run0(Interfaces.kt:35)
	at ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args0(SingleRun.kt:14)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.SingleRun_args0_jmhTest.args0_avgt_jmhStub(SingleRun_args0_jmhTest.java:190)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.SingleRun_args0_jmhTest.args0_AverageTime(SingleRun_args0_jmhTest.java:152)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.ArrayIndexOutOfBoundsException: 2
	at kotlin.jvm.internal.ProtocolCallSite.<init>(ProtocolCallSite.kt:144)
	at kotlin.jvm.internal.ProtocolCallSite$Companion.getBootstrap(ProtocolCallSite.kt:32)
	at kotlin.jvm.internal.ProtocolCallSite.getBootstrap(ProtocolCallSite.kt)
	at java.lang.invoke.CallSite.makeSite(CallSite.java:306)
	... 19 more




# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args1

# Run progress: 11.11% complete, ETA 00:00:01
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.BootstrapMethodError: call site initialization exception
	at java.lang.invoke.CallSite.makeSite(CallSite.java:341)
	at java.lang.invoke.MethodHandleNatives.linkCallSiteImpl(MethodHandleNatives.java:307)
	at java.lang.invoke.MethodHandleNatives.linkCallSite(MethodHandleNatives.java:297)
	at ru.spbau.mit.kotlin.protocols.benchmarks.InterfacesKt.proto$13$Foo$bar1$Int(Interfaces.kt)
	at ru.spbau.mit.kotlin.protocols.benchmarks.InterfacesKt.run1(Interfaces.kt:36)
	at ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args1(SingleRun.kt:17)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.SingleRun_args1_jmhTest.args1_avgt_jmhStub(SingleRun_args1_jmhTest.java:190)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.SingleRun_args1_jmhTest.args1_AverageTime(SingleRun_args1_jmhTest.java:152)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.ArrayIndexOutOfBoundsException: 2
	at kotlin.jvm.internal.ProtocolCallSite.<init>(ProtocolCallSite.kt:144)
	at kotlin.jvm.internal.ProtocolCallSite$Companion.getBootstrap(ProtocolCallSite.kt:32)
	at kotlin.jvm.internal.ProtocolCallSite.getBootstrap(ProtocolCallSite.kt)
	at java.lang.invoke.CallSite.makeSite(CallSite.java:306)
	... 19 more




# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args10

# Run progress: 22.22% complete, ETA 00:00:01
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.BootstrapMethodError: call site initialization exception
	at java.lang.invoke.CallSite.makeSite(CallSite.java:341)
	at java.lang.invoke.MethodHandleNatives.linkCallSiteImpl(MethodHandleNatives.java:307)
	at java.lang.invoke.MethodHandleNatives.linkCallSite(MethodHandleNatives.java:297)
	at ru.spbau.mit.kotlin.protocols.benchmarks.InterfacesKt.proto$18$Foo$bar10$IntIntIntIntIntIntIntIntIntInt(Interfaces.kt)
	at ru.spbau.mit.kotlin.protocols.benchmarks.InterfacesKt.run10(Interfaces.kt:41)
	at ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args10(SingleRun.kt:32)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.SingleRun_args10_jmhTest.args10_avgt_jmhStub(SingleRun_args10_jmhTest.java:190)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.SingleRun_args10_jmhTest.args10_AverageTime(SingleRun_args10_jmhTest.java:152)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.ArrayIndexOutOfBoundsException: 2
	at kotlin.jvm.internal.ProtocolCallSite.<init>(ProtocolCallSite.kt:144)
	at kotlin.jvm.internal.ProtocolCallSite$Companion.getBootstrap(ProtocolCallSite.kt:32)
	at kotlin.jvm.internal.ProtocolCallSite.getBootstrap(ProtocolCallSite.kt)
	at java.lang.invoke.CallSite.makeSite(CallSite.java:306)
	... 19 more




# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args15

# Run progress: 33.33% complete, ETA 00:00:01
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.BootstrapMethodError: call site initialization exception
	at java.lang.invoke.CallSite.makeSite(CallSite.java:341)
	at java.lang.invoke.MethodHandleNatives.linkCallSiteImpl(MethodHandleNatives.java:307)
	at java.lang.invoke.MethodHandleNatives.linkCallSite(MethodHandleNatives.java:297)
	at ru.spbau.mit.kotlin.protocols.benchmarks.InterfacesKt.proto$19$Foo$bar15$IntIntIntIntIntIntIntIntIntIntIntIntIntIntInt(Interfaces.kt)
	at ru.spbau.mit.kotlin.protocols.benchmarks.InterfacesKt.run15(Interfaces.kt:42)
	at ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args15(SingleRun.kt:35)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.SingleRun_args15_jmhTest.args15_avgt_jmhStub(SingleRun_args15_jmhTest.java:190)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.SingleRun_args15_jmhTest.args15_AverageTime(SingleRun_args15_jmhTest.java:152)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.ArrayIndexOutOfBoundsException: 2
	at kotlin.jvm.internal.ProtocolCallSite.<init>(ProtocolCallSite.kt:144)
	at kotlin.jvm.internal.ProtocolCallSite$Companion.getBootstrap(ProtocolCallSite.kt:32)
	at kotlin.jvm.internal.ProtocolCallSite.getBootstrap(ProtocolCallSite.kt)
	at java.lang.invoke.CallSite.makeSite(CallSite.java:306)
	... 19 more




# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args2

# Run progress: 44.44% complete, ETA 00:00:01
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.BootstrapMethodError: call site initialization exception
	at java.lang.invoke.CallSite.makeSite(CallSite.java:341)
	at java.lang.invoke.MethodHandleNatives.linkCallSiteImpl(MethodHandleNatives.java:307)
	at java.lang.invoke.MethodHandleNatives.linkCallSite(MethodHandleNatives.java:297)
	at ru.spbau.mit.kotlin.protocols.benchmarks.InterfacesKt.proto$14$Foo$bar2$IntInt(Interfaces.kt)
	at ru.spbau.mit.kotlin.protocols.benchmarks.InterfacesKt.run2(Interfaces.kt:37)
	at ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args2(SingleRun.kt:20)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.SingleRun_args2_jmhTest.args2_avgt_jmhStub(SingleRun_args2_jmhTest.java:190)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.SingleRun_args2_jmhTest.args2_AverageTime(SingleRun_args2_jmhTest.java:152)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.ArrayIndexOutOfBoundsException: 2
	at kotlin.jvm.internal.ProtocolCallSite.<init>(ProtocolCallSite.kt:144)
	at kotlin.jvm.internal.ProtocolCallSite$Companion.getBootstrap(ProtocolCallSite.kt:32)
	at kotlin.jvm.internal.ProtocolCallSite.getBootstrap(ProtocolCallSite.kt)
	at java.lang.invoke.CallSite.makeSite(CallSite.java:306)
	... 19 more




# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args20

# Run progress: 55.56% complete, ETA 00:00:00
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.BootstrapMethodError: call site initialization exception
	at java.lang.invoke.CallSite.makeSite(CallSite.java:341)
	at java.lang.invoke.MethodHandleNatives.linkCallSiteImpl(MethodHandleNatives.java:307)
	at java.lang.invoke.MethodHandleNatives.linkCallSite(MethodHandleNatives.java:297)
	at ru.spbau.mit.kotlin.protocols.benchmarks.InterfacesKt.proto$20$Foo$bar20$IntIntIntIntIntIntIntIntIntIntIntIntIntIntIntIntIntIntIntInt(Interfaces.kt)
	at ru.spbau.mit.kotlin.protocols.benchmarks.InterfacesKt.run20(Interfaces.kt:43)
	at ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args20(SingleRun.kt:38)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.SingleRun_args20_jmhTest.args20_avgt_jmhStub(SingleRun_args20_jmhTest.java:190)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.SingleRun_args20_jmhTest.args20_AverageTime(SingleRun_args20_jmhTest.java:152)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.ArrayIndexOutOfBoundsException: 2
	at kotlin.jvm.internal.ProtocolCallSite.<init>(ProtocolCallSite.kt:144)
	at kotlin.jvm.internal.ProtocolCallSite$Companion.getBootstrap(ProtocolCallSite.kt:32)
	at kotlin.jvm.internal.ProtocolCallSite.getBootstrap(ProtocolCallSite.kt)
	at java.lang.invoke.CallSite.makeSite(CallSite.java:306)
	... 19 more




# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args3

# Run progress: 66.67% complete, ETA 00:00:00
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.BootstrapMethodError: call site initialization exception
	at java.lang.invoke.CallSite.makeSite(CallSite.java:341)
	at java.lang.invoke.MethodHandleNatives.linkCallSiteImpl(MethodHandleNatives.java:307)
	at java.lang.invoke.MethodHandleNatives.linkCallSite(MethodHandleNatives.java:297)
	at ru.spbau.mit.kotlin.protocols.benchmarks.InterfacesKt.proto$15$Foo$bar3$IntIntInt(Interfaces.kt)
	at ru.spbau.mit.kotlin.protocols.benchmarks.InterfacesKt.run3(Interfaces.kt:38)
	at ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args3(SingleRun.kt:23)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.SingleRun_args3_jmhTest.args3_avgt_jmhStub(SingleRun_args3_jmhTest.java:190)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.SingleRun_args3_jmhTest.args3_AverageTime(SingleRun_args3_jmhTest.java:152)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.ArrayIndexOutOfBoundsException: 2
	at kotlin.jvm.internal.ProtocolCallSite.<init>(ProtocolCallSite.kt:144)
	at kotlin.jvm.internal.ProtocolCallSite$Companion.getBootstrap(ProtocolCallSite.kt:32)
	at kotlin.jvm.internal.ProtocolCallSite.getBootstrap(ProtocolCallSite.kt)
	at java.lang.invoke.CallSite.makeSite(CallSite.java:306)
	... 19 more




# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args4

# Run progress: 77.78% complete, ETA 00:00:00
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.BootstrapMethodError: call site initialization exception
	at java.lang.invoke.CallSite.makeSite(CallSite.java:341)
	at java.lang.invoke.MethodHandleNatives.linkCallSiteImpl(MethodHandleNatives.java:307)
	at java.lang.invoke.MethodHandleNatives.linkCallSite(MethodHandleNatives.java:297)
	at ru.spbau.mit.kotlin.protocols.benchmarks.InterfacesKt.proto$16$Foo$bar4$IntIntIntInt(Interfaces.kt)
	at ru.spbau.mit.kotlin.protocols.benchmarks.InterfacesKt.run4(Interfaces.kt:39)
	at ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args4(SingleRun.kt:26)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.SingleRun_args4_jmhTest.args4_avgt_jmhStub(SingleRun_args4_jmhTest.java:190)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.SingleRun_args4_jmhTest.args4_AverageTime(SingleRun_args4_jmhTest.java:152)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.ArrayIndexOutOfBoundsException: 2
	at kotlin.jvm.internal.ProtocolCallSite.<init>(ProtocolCallSite.kt:144)
	at kotlin.jvm.internal.ProtocolCallSite$Companion.getBootstrap(ProtocolCallSite.kt:32)
	at kotlin.jvm.internal.ProtocolCallSite.getBootstrap(ProtocolCallSite.kt)
	at java.lang.invoke.CallSite.makeSite(CallSite.java:306)
	... 19 more




# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args5

# Run progress: 88.89% complete, ETA 00:00:00
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.BootstrapMethodError: call site initialization exception
	at java.lang.invoke.CallSite.makeSite(CallSite.java:341)
	at java.lang.invoke.MethodHandleNatives.linkCallSiteImpl(MethodHandleNatives.java:307)
	at java.lang.invoke.MethodHandleNatives.linkCallSite(MethodHandleNatives.java:297)
	at ru.spbau.mit.kotlin.protocols.benchmarks.InterfacesKt.proto$17$Foo$bar5$IntIntIntIntInt(Interfaces.kt)
	at ru.spbau.mit.kotlin.protocols.benchmarks.InterfacesKt.run5(Interfaces.kt:40)
	at ru.spbau.mit.kotlin.protocols.benchmarks.SingleRun.args5(SingleRun.kt:29)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.SingleRun_args5_jmhTest.args5_avgt_jmhStub(SingleRun_args5_jmhTest.java:190)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.SingleRun_args5_jmhTest.args5_AverageTime(SingleRun_args5_jmhTest.java:152)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.ArrayIndexOutOfBoundsException: 2
	at kotlin.jvm.internal.ProtocolCallSite.<init>(ProtocolCallSite.kt:144)
	at kotlin.jvm.internal.ProtocolCallSite$Companion.getBootstrap(ProtocolCallSite.kt:32)
	at kotlin.jvm.internal.ProtocolCallSite.getBootstrap(ProtocolCallSite.kt)
	at java.lang.invoke.CallSite.makeSite(CallSite.java:306)
	... 19 more




# Run complete. Total time: 00:00:01

Benchmark  Mode  Cnt  Score   Error  Units
# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.MultiTarget.test

# Run progress: 0.00% complete, ETA 00:00:40
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.BootstrapMethodError: call site initialization exception
	at java.lang.invoke.CallSite.makeSite(CallSite.java:341)
	at java.lang.invoke.MethodHandleNatives.linkCallSiteImpl(MethodHandleNatives.java:307)
	at java.lang.invoke.MethodHandleNatives.linkCallSite(MethodHandleNatives.java:297)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MultiTarget.proto$23$Bar$foo$(MultiTarget.kt)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MultiTarget.test(MultiTarget.kt:45)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.MultiTarget_test_jmhTest.test_avgt_jmhStub(MultiTarget_test_jmhTest.java:190)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.MultiTarget_test_jmhTest.test_AverageTime(MultiTarget_test_jmhTest.java:152)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.ArrayIndexOutOfBoundsException: 2
	at kotlin.jvm.internal.ProtocolCallSite.<init>(ProtocolCallSite.kt:144)
	at kotlin.jvm.internal.ProtocolCallSite$Companion.getBootstrap(ProtocolCallSite.kt:32)
	at kotlin.jvm.internal.ProtocolCallSite.getBootstrap(ProtocolCallSite.kt)
	at java.lang.invoke.CallSite.makeSite(CallSite.java:306)
	... 18 more




# Run complete. Total time: 00:00:00

Benchmark  Mode  Cnt  Score   Error  Units
# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testExplicit10

# Run progress: 0.00% complete, ETA 00:06:40
# Fork: 1 of 1
# Warmup Iteration   1: 0.509 us/op
# Warmup Iteration   2: 0.478 us/op
# Warmup Iteration   3: 0.473 us/op
# Warmup Iteration   4: 0.464 us/op
# Warmup Iteration   5: 0.466 us/op
# Warmup Iteration   6: 0.480 us/op
# Warmup Iteration   7: 0.461 us/op
# Warmup Iteration   8: 0.461 us/op
# Warmup Iteration   9: 0.460 us/op
# Warmup Iteration  10: 0.461 us/op
# Warmup Iteration  11: 0.461 us/op
# Warmup Iteration  12: 0.463 us/op
# Warmup Iteration  13: 0.462 us/op
# Warmup Iteration  14: 0.465 us/op
# Warmup Iteration  15: 0.462 us/op
# Warmup Iteration  16: 0.461 us/op
# Warmup Iteration  17: 0.461 us/op
# Warmup Iteration  18: 0.462 us/op
# Warmup Iteration  19: 0.462 us/op
# Warmup Iteration  20: 0.460 us/op
Iteration   1: 0.461 us/op
Iteration   2: 0.462 us/op
Iteration   3: 0.463 us/op
Iteration   4: 0.462 us/op
Iteration   5: 0.461 us/op
Iteration   6: 0.462 us/op
Iteration   7: 0.462 us/op
Iteration   8: 0.461 us/op
Iteration   9: 0.462 us/op
Iteration  10: 0.462 us/op
Iteration  11: 0.462 us/op
Iteration  12: 0.463 us/op
Iteration  13: 0.464 us/op
Iteration  14: 0.462 us/op
Iteration  15: 0.462 us/op
Iteration  16: 0.461 us/op
Iteration  17: 0.463 us/op
Iteration  18: 0.462 us/op
Iteration  19: 0.462 us/op
Iteration  20: 0.462 us/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testExplicit10":
  0.462 ±(99.9%) 0.001 us/op [Average]
  (min, avg, max) = (0.461, 0.462, 0.464), stdev = 0.001
  CI (99.9%): [0.461, 0.463] (assumes normal distribution)


# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testExplicit100

# Run progress: 10.00% complete, ETA 00:06:01
# Fork: 1 of 1
# Warmup Iteration   1: 8.397 us/op
# Warmup Iteration   2: 7.856 us/op
# Warmup Iteration   3: 8.362 us/op
# Warmup Iteration   4: 7.811 us/op
# Warmup Iteration   5: 7.942 us/op
# Warmup Iteration   6: 7.668 us/op
# Warmup Iteration   7: 7.678 us/op
# Warmup Iteration   8: 7.691 us/op
# Warmup Iteration   9: 7.685 us/op
# Warmup Iteration  10: 7.680 us/op
# Warmup Iteration  11: 7.911 us/op
# Warmup Iteration  12: 7.680 us/op
# Warmup Iteration  13: 7.691 us/op
# Warmup Iteration  14: 7.773 us/op
# Warmup Iteration  15: 7.672 us/op
# Warmup Iteration  16: 7.709 us/op
# Warmup Iteration  17: 7.696 us/op
# Warmup Iteration  18: 7.765 us/op
# Warmup Iteration  19: 7.786 us/op
# Warmup Iteration  20: 7.708 us/op
Iteration   1: 7.687 us/op
Iteration   2: 7.708 us/op
Iteration   3: 7.683 us/op
Iteration   4: 7.795 us/op
Iteration   5: 7.702 us/op
Iteration   6: 7.711 us/op
Iteration   7: 7.701 us/op
Iteration   8: 7.757 us/op
Iteration   9: 8.153 us/op
Iteration  10: 7.699 us/op
Iteration  11: 7.726 us/op
Iteration  12: 7.716 us/op
Iteration  13: 7.716 us/op
Iteration  14: 7.748 us/op
Iteration  15: 7.726 us/op
Iteration  16: 7.734 us/op
Iteration  17: 7.739 us/op
Iteration  18: 7.756 us/op
Iteration  19: 7.775 us/op
Iteration  20: 7.756 us/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testExplicit100":
  7.749 ±(99.9%) 0.086 us/op [Average]
  (min, avg, max) = (7.683, 7.749, 8.153), stdev = 0.100
  CI (99.9%): [7.663, 7.836] (assumes normal distribution)


# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testExplicit1000

# Run progress: 20.00% complete, ETA 00:05:21
# Fork: 1 of 1
# Warmup Iteration   1: 112.821 us/op
# Warmup Iteration   2: 107.143 us/op
# Warmup Iteration   3: 106.614 us/op
# Warmup Iteration   4: 108.807 us/op
# Warmup Iteration   5: 106.805 us/op
# Warmup Iteration   6: 105.135 us/op
# Warmup Iteration   7: 105.388 us/op
# Warmup Iteration   8: 104.989 us/op
# Warmup Iteration   9: 105.286 us/op
# Warmup Iteration  10: 105.147 us/op
# Warmup Iteration  11: 105.329 us/op
# Warmup Iteration  12: 105.019 us/op
# Warmup Iteration  13: 105.206 us/op
# Warmup Iteration  14: 105.817 us/op
# Warmup Iteration  15: 105.185 us/op
# Warmup Iteration  16: 105.170 us/op
# Warmup Iteration  17: 105.329 us/op
# Warmup Iteration  18: 108.373 us/op
# Warmup Iteration  19: 109.089 us/op
# Warmup Iteration  20: 105.214 us/op
Iteration   1: 105.371 us/op
Iteration   2: 105.374 us/op
Iteration   3: 105.309 us/op
Iteration   4: 106.689 us/op
Iteration   5: 105.510 us/op
Iteration   6: 105.444 us/op
Iteration   7: 105.319 us/op
Iteration   8: 105.406 us/op
Iteration   9: 105.916 us/op
Iteration  10: 105.567 us/op
Iteration  11: 105.635 us/op
Iteration  12: 105.538 us/op
Iteration  13: 105.942 us/op
Iteration  14: 106.858 us/op
Iteration  15: 106.167 us/op
Iteration  16: 106.078 us/op
Iteration  17: 106.414 us/op
Iteration  18: 105.755 us/op
Iteration  19: 105.704 us/op
Iteration  20: 105.870 us/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testExplicit1000":
  105.793 ±(99.9%) 0.393 us/op [Average]
  (min, avg, max) = (105.309, 105.793, 106.858), stdev = 0.453
  CI (99.9%): [105.400, 106.187] (assumes normal distribution)


# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testExplicit10000

# Run progress: 30.00% complete, ETA 00:04:41
# Fork: 1 of 1
# Warmup Iteration   1: 1366.777 us/op
# Warmup Iteration   2: 1313.448 us/op
# Warmup Iteration   3: 1280.618 us/op
# Warmup Iteration   4: 1329.425 us/op
# Warmup Iteration   5: 1274.076 us/op
# Warmup Iteration   6: 1277.346 us/op
# Warmup Iteration   7: 1276.896 us/op
# Warmup Iteration   8: 1280.250 us/op
# Warmup Iteration   9: 1277.849 us/op
# Warmup Iteration  10: 1283.468 us/op
# Warmup Iteration  11: 1276.521 us/op
# Warmup Iteration  12: 1282.765 us/op
# Warmup Iteration  13: 1278.743 us/op
# Warmup Iteration  14: 1294.775 us/op
# Warmup Iteration  15: 1277.277 us/op
# Warmup Iteration  16: 1278.001 us/op
# Warmup Iteration  17: 1280.171 us/op
# Warmup Iteration  18: 1281.025 us/op
# Warmup Iteration  19: 1277.775 us/op
# Warmup Iteration  20: 1281.192 us/op
Iteration   1: 1278.659 us/op
Iteration   2: 1280.405 us/op
Iteration   3: 1283.269 us/op
Iteration   4: 1284.383 us/op
Iteration   5: 1284.810 us/op
Iteration   6: 1283.931 us/op
Iteration   7: 1282.987 us/op
Iteration   8: 1280.053 us/op
Iteration   9: 1282.475 us/op
Iteration  10: 1287.660 us/op
Iteration  11: 1289.524 us/op
Iteration  12: 1291.278 us/op
Iteration  13: 1287.536 us/op
Iteration  14: 1296.938 us/op
Iteration  15: 1283.182 us/op
Iteration  16: 1289.291 us/op
Iteration  17: 1286.297 us/op
Iteration  18: 1287.155 us/op
Iteration  19: 1290.118 us/op
Iteration  20: 1285.509 us/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testExplicit10000":
  1285.773 ±(99.9%) 3.776 us/op [Average]
  (min, avg, max) = (1278.659, 1285.773, 1296.938), stdev = 4.348
  CI (99.9%): [1281.997, 1289.549] (assumes normal distribution)


# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testExplicit100000

# Run progress: 40.00% complete, ETA 00:04:01
# Fork: 1 of 1
# Warmup Iteration   1: 16929.561 us/op
# Warmup Iteration   2: 16302.542 us/op
# Warmup Iteration   3: 15995.057 us/op
# Warmup Iteration   4: 16426.798 us/op
# Warmup Iteration   5: 15868.191 us/op
# Warmup Iteration   6: 15915.654 us/op
# Warmup Iteration   7: 16183.416 us/op
# Warmup Iteration   8: 15858.539 us/op
# Warmup Iteration   9: 15888.722 us/op
# Warmup Iteration  10: 15861.986 us/op
# Warmup Iteration  11: 15888.937 us/op
# Warmup Iteration  12: 15867.673 us/op
# Warmup Iteration  13: 15914.657 us/op
# Warmup Iteration  14: 15907.705 us/op
# Warmup Iteration  15: 15953.420 us/op
# Warmup Iteration  16: 15876.074 us/op
# Warmup Iteration  17: 15913.542 us/op
# Warmup Iteration  18: 15878.937 us/op
# Warmup Iteration  19: 15908.452 us/op
# Warmup Iteration  20: 15928.619 us/op
Iteration   1: 15920.676 us/op
Iteration   2: 15884.233 us/op
Iteration   3: 16713.254 us/op
Iteration   4: 15985.964 us/op
Iteration   5: 16436.459 us/op
Iteration   6: 15897.704 us/op
Iteration   7: 15883.601 us/op
Iteration   8: 15877.542 us/op
Iteration   9: 15895.629 us/op
Iteration  10: 15870.322 us/op
Iteration  11: 15889.474 us/op
Iteration  12: 15926.845 us/op
Iteration  13: 15974.977 us/op
Iteration  14: 15887.472 us/op
Iteration  15: 15928.121 us/op
Iteration  16: 15902.264 us/op
Iteration  17: 15941.273 us/op
Iteration  18: 15922.220 us/op
Iteration  19: 16040.391 us/op
Iteration  20: 16047.974 us/op


Result "ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testExplicit100000":
  15991.320 ±(99.9%) 182.945 us/op [Average]
  (min, avg, max) = (15870.322, 15991.320, 16713.254), stdev = 210.680
  CI (99.9%): [15808.374, 16174.265] (assumes normal distribution)


# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testImplicit10

# Run progress: 50.00% complete, ETA 00:03:21
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.BootstrapMethodError: call site initialization exception
	at java.lang.invoke.CallSite.makeSite(CallSite.java:341)
	at java.lang.invoke.MethodHandleNatives.linkCallSiteImpl(MethodHandleNatives.java:307)
	at java.lang.invoke.MethodHandleNatives.linkCallSite(MethodHandleNatives.java:297)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.proto$21$ImplicitComparable$lessOrEq$ImplicitComparable(MergeSort.kt)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeImplicit(MergeSort.kt:35)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:87)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testImplicit10(MergeSort.kt:143)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.MergeSort_testImplicit10_jmhTest.testImplicit10_avgt_jmhStub(MergeSort_testImplicit10_jmhTest.java:190)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.MergeSort_testImplicit10_jmhTest.testImplicit10_AverageTime(MergeSort_testImplicit10_jmhTest.java:152)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.ArrayIndexOutOfBoundsException: 2
	at kotlin.jvm.internal.ProtocolCallSite.<init>(ProtocolCallSite.kt:144)
	at kotlin.jvm.internal.ProtocolCallSite$Companion.getBootstrap(ProtocolCallSite.kt:32)
	at kotlin.jvm.internal.ProtocolCallSite.getBootstrap(ProtocolCallSite.kt)
	at java.lang.invoke.CallSite.makeSite(CallSite.java:306)
	... 23 more




# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testImplicit100

# Run progress: 60.00% complete, ETA 00:02:14
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.BootstrapMethodError: call site initialization exception
	at java.lang.invoke.CallSite.makeSite(CallSite.java:341)
	at java.lang.invoke.MethodHandleNatives.linkCallSiteImpl(MethodHandleNatives.java:307)
	at java.lang.invoke.MethodHandleNatives.linkCallSite(MethodHandleNatives.java:297)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.proto$21$ImplicitComparable$lessOrEq$ImplicitComparable(MergeSort.kt)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeImplicit(MergeSort.kt:35)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:87)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testImplicit100(MergeSort.kt:146)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.MergeSort_testImplicit100_jmhTest.testImplicit100_avgt_jmhStub(MergeSort_testImplicit100_jmhTest.java:190)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.MergeSort_testImplicit100_jmhTest.testImplicit100_AverageTime(MergeSort_testImplicit100_jmhTest.java:152)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.ArrayIndexOutOfBoundsException: 2
	at kotlin.jvm.internal.ProtocolCallSite.<init>(ProtocolCallSite.kt:144)
	at kotlin.jvm.internal.ProtocolCallSite$Companion.getBootstrap(ProtocolCallSite.kt:32)
	at kotlin.jvm.internal.ProtocolCallSite.getBootstrap(ProtocolCallSite.kt)
	at java.lang.invoke.CallSite.makeSite(CallSite.java:306)
	... 26 more




# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testImplicit1000

# Run progress: 70.00% complete, ETA 00:01:26
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.BootstrapMethodError: call site initialization exception
	at java.lang.invoke.CallSite.makeSite(CallSite.java:341)
	at java.lang.invoke.MethodHandleNatives.linkCallSiteImpl(MethodHandleNatives.java:307)
	at java.lang.invoke.MethodHandleNatives.linkCallSite(MethodHandleNatives.java:297)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.proto$21$ImplicitComparable$lessOrEq$ImplicitComparable(MergeSort.kt)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeImplicit(MergeSort.kt:35)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:87)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testImplicit1000(MergeSort.kt:149)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.MergeSort_testImplicit1000_jmhTest.testImplicit1000_avgt_jmhStub(MergeSort_testImplicit1000_jmhTest.java:190)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.MergeSort_testImplicit1000_jmhTest.testImplicit1000_AverageTime(MergeSort_testImplicit1000_jmhTest.java:152)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.ArrayIndexOutOfBoundsException: 2
	at kotlin.jvm.internal.ProtocolCallSite.<init>(ProtocolCallSite.kt:144)
	at kotlin.jvm.internal.ProtocolCallSite$Companion.getBootstrap(ProtocolCallSite.kt:32)
	at kotlin.jvm.internal.ProtocolCallSite.getBootstrap(ProtocolCallSite.kt)
	at java.lang.invoke.CallSite.makeSite(CallSite.java:306)
	... 29 more




# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testImplicit10000

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.BootstrapMethodError: call site initialization exception
	at java.lang.invoke.CallSite.makeSite(CallSite.java:341)
	at java.lang.invoke.MethodHandleNatives.linkCallSiteImpl(MethodHandleNatives.java:307)
	at java.lang.invoke.MethodHandleNatives.linkCallSite(MethodHandleNatives.java:297)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.proto$21$ImplicitComparable$lessOrEq$ImplicitComparable(MergeSort.kt)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeImplicit(MergeSort.kt:35)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:87)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testImplicit10000(MergeSort.kt:152)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.MergeSort_testImplicit10000_jmhTest.testImplicit10000_avgt_jmhStub(MergeSort_testImplicit10000_jmhTest.java:190)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.MergeSort_testImplicit10000_jmhTest.testImplicit10000_AverageTime(MergeSort_testImplicit10000_jmhTest.java:152)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.ArrayIndexOutOfBoundsException: 2
	at kotlin.jvm.internal.ProtocolCallSite.<init>(ProtocolCallSite.kt:144)
	at kotlin.jvm.internal.ProtocolCallSite$Companion.getBootstrap(ProtocolCallSite.kt:32)
	at kotlin.jvm.internal.ProtocolCallSite.getBootstrap(ProtocolCallSite.kt)
	at java.lang.invoke.CallSite.makeSite(CallSite.java:306)
	... 33 more




# JMH 1.18 (released 64 days ago)
# VM version: JDK 1.8.0_131, VM 25.131-b11
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testImplicit100000

# Run progress: 90.00% complete, ETA 00:00:22
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.BootstrapMethodError: call site initialization exception
	at java.lang.invoke.CallSite.makeSite(CallSite.java:341)
	at java.lang.invoke.MethodHandleNatives.linkCallSiteImpl(MethodHandleNatives.java:307)
	at java.lang.invoke.MethodHandleNatives.linkCallSite(MethodHandleNatives.java:297)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.proto$21$ImplicitComparable$lessOrEq$ImplicitComparable(MergeSort.kt)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeImplicit(MergeSort.kt:35)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:87)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSortKt.mergeSortImplicit(MergeSort.kt:85)
	at ru.spbau.mit.kotlin.protocols.benchmarks.MergeSort.testImplicit100000(MergeSort.kt:155)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.MergeSort_testImplicit100000_jmhTest.testImplicit100000_avgt_jmhStub(MergeSort_testImplicit100000_jmhTest.java:190)
	at ru.spbau.mit.kotlin.protocols.benchmarks.generated.MergeSort_testImplicit100000_jmhTest.testImplicit100000_AverageTime(MergeSort_testImplicit100000_jmhTest.java:152)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.ArrayIndexOutOfBoundsException: 2
	at kotlin.jvm.internal.ProtocolCallSite.<init>(ProtocolCallSite.kt:144)
	at kotlin.jvm.internal.ProtocolCallSite$Companion.getBootstrap(ProtocolCallSite.kt:32)
	at kotlin.jvm.internal.ProtocolCallSite.getBootstrap(ProtocolCallSite.kt)
	at java.lang.invoke.CallSite.makeSite(CallSite.java:306)
	... 36 more




# Run complete. Total time: 00:03:22

Benchmark                     Mode  Cnt      Score     Error  Units
MergeSort.testExplicit10      avgt   20      0.462 ±   0.001  us/op
MergeSort.testExplicit100     avgt   20      7.749 ±   0.086  us/op
MergeSort.testExplicit1000    avgt   20    105.793 ±   0.393  us/op
MergeSort.testExplicit10000   avgt   20   1285.773 ±   3.776  us/op
MergeSort.testExplicit100000  avgt   20  15991.320 ± 182.945  us/op
[DONE] ./reflection_sync_list.xml
